{"mappings":"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","sources":["src/js/firebase/backend.js","src/js/firebase/auth.js","src/js/user-service/userAuthChecker.js","src/js/main/searchMovie.js","src/js/checkers/filmSearchChecker.js","src/js/spinner/spinner.js","src/js/pagination/createPages.js","src/js/main/renderMainMarkup.js","src/js/main.js","src/js/checkers/pageOnLoadCheker.js","src/js/pagination/pagination.js"],"sourcesContent":["import { app } from './initFirebase';\nimport '../user-service/userServ';\n// Import the functions you need from the SDKs you need\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\n// import { getDatabase, ref, } from 'firebase/database'; // закоментировал, перезаписан\nimport { getUserFilmsData } from '../user-service/userServ';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n","import {\n  postUserIntoDatebase,\n  getUserDataById,\n} from '../user-service/dataDatebaseFunc';\nimport { app } from './initFirebase';\nimport {\n  notifySuccessMessage,\n  notifyInfoMessage,\n} from '../helpers/notifyMessages';\n\n// Initialize Firebase\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { checkUserAuth } from '../user-service/userAuthChecker';\nimport RenderApi from '../helpers/renderFuncApi';\n// // SIGN IN\nconst auth = getAuth();\nconst signInLinck = document.querySelector('.menu__link-js');\n\nconst renderUserHeader = new RenderApi();\n// console.log(signIn.href);\n// if ((window.location.href = 'user-page')) {\n//   signInLinck.removeEventListener('click', onSignIn);\n// }\n\n// check auth\ncheckUserAuth(auth, renderUserHeader, renderUserHeader.renderMarkup);\n\nsignInLinck.addEventListener('click', onSignIn);\n\nasync function onSignIn() {\n  const provider = new GoogleAuthProvider();\n\n  signInWithPopup(auth, provider)\n    .then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      postUserIntoDatebase(user);\n      // getUserDataById(user.uid, 'userData');\n\n      if (user) {\n        renderUserHeader.renderMarkup({\n          selector: '.menu__list',\n          innerHtml: true,\n          createMarkypFunc:\n            renderUserHeader.createAuthorizatedUserHeaderMarkup(),\n        });\n        notifySuccessMessage('You are in!');\n      }\n\n      // ...\n    })\n    .catch(error => {\n      // Handle Errors here.\n      console.error(error);\n      const errorCode = error.code;\n      console.error(errorCode);\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      console.error(errorMessage);\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      console.error(email);\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n      console.error(credential);\n    });\n}\n\n// LOG OUT\n","import { onAuthStateChanged } from 'firebase/auth';\nimport { notifyInfoMessage } from '../helpers/notifyMessages';\nexport function checkUserAuth(auth, renderApiCopy, render) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      render({\n        selector: '.menu__list',\n        innerHtml: true,\n        createMarkypFunc: renderApiCopy.createAuthorizatedUserHeaderMarkup(),\n      });\n      const uid = user.uid;\n    } else {\n      // User is signed out\n      notifyInfoMessage('You are not Sign In');\n    }\n  });\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport getFilmSearchCheck from '../checkers/filmSearchChecker';\nimport { refs } from '../helpers/refsApiServ';\nimport { getErrMessage } from '../checkers/filmSearchChecker';\n\nconst renderApi = new RenderApi();\n\nconst apiSearch = new FetchFilmsApi({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconsole.log();\nif (!window.location.href.includes('user-page')) {\n  refs.form.addEventListener('submit', onSearchBtnClick);\n} else {\n  refs.form.removeEventListener('submit', onSearchBtnClick);\n}\n\nexport default function onSearchBtnClick(e) {\n  e.preventDefault();\n\n  const value = e.currentTarget.elements.search_user.value.trim();\n\n  apiSearch.actualQuery = value;\n  getFilmSearchCheck(value);\n\n  apiSearch.incrementPage({ step: 1 });\n}\n\nexport async function getSearchedFilm() {\n  const films = await apiSearch.getSearchFilmsData({});\n  const genresObj = await apiSearch.getGenresList({});\n  const genres = genresObj.data.genres;\n  const filmsArrLength = films.data.results.length;\n\n  if (!filmsArrLength) {\n    refs.filmList.innerHTML = '';\n    return getErrMessage({ addMessage: true });\n  }\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    innerHTMLMarkup: '',\n    insAdHtmltype: 'beforeend',\n    createMarkypFunc: markup,\n  });\n}\n","import { getSearchedFilm } from '../main/searchMovie';\nimport { refs } from '../helpers/refsApiServ';\n\nexport default function getFilmSearchCheck(value) {\n  if (!value) {\n    getErrMessage({ addMessage: true });\n    return;\n  }\n\n  getErrMessage({ addMessage: false });\n  getSearchedFilm();\n}\n\nexport function getErrMessage({ addMessage }) {\n  if (!addMessage) {\n    const clearMessage = () => {\n      refs.searchError.classList.add('is-hidden');\n    };\n    return setTimeout(clearMessage, 3000);\n  }\n  return refs.searchError.classList.remove('is-hidden');\n}\n","import SpinneroOnLoadingApi from '../helpers/spinnerApi';\n\nexport const spinnerOnMain = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nexport const spinnerOnList = new SpinneroOnLoadingApi({});\n","import { refs } from '../helpers/refsApiServ';\n\nexport function createPages(page, totalPages) {\n  let beforeContainer = ``;\n  let afterContainer = ``;\n\n  // Before\n  if (page >= 5) {\n    beforeContainer += `<div class=\"numb numb--first-page\" data-numb-id='1'>1</div>`;\n  }\n\n  if (page === 4 || page === 5) {\n    beforeContainer += `<div class=\"numb dots\" data-numb-id='${page - 3}'>${\n      page - 3\n    }</div>`;\n  } else if (page >= 6) {\n    beforeContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page >= 3) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 2}'>${\n      page - 2\n    }</div>`;\n  }\n\n  if (page >= 2) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 1}'>${\n      page - 1\n    }</div>`;\n  }\n\n  // After\n  if (page <= totalPages - 1) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 1}'>${\n      page + 1\n    }</div>`;\n  }\n\n  if (page <= totalPages - 2) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 2}'>${\n      page + 2\n    }</div>`;\n  }\n\n  if (page === totalPages - 3 || page === totalPages - 4) {\n    afterContainer += `<div class=\"numb dots\" data-numb-id='${page + 3}'>${\n      page + 3\n    }</div>`;\n  } else if (page <= totalPages - 5) {\n    afterContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page <= totalPages - 4) {\n    afterContainer += `<div class=\"numb numb--last-page\" data-numb-id='${totalPages}'>${totalPages}</div>`;\n  }\n\n  // DOM\n  refs.beforeCurPageContainer.innerHTML = beforeContainer;\n  refs.afterCurPageContainer.innerHTML = afterContainer;\n}\n","import { fetchApi } from '../main';\nimport { renderApi } from '../main';\nimport { createPages } from '../pagination/createPages';\nimport { genres } from '../helpers/genres';\n\nexport async function renderMarkup() {\n  // console.log(genres)\n  const films = await fetchApi.getAllFilmsData({});\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    createMarkypFunc: markup,\n  });\n\n  createPages(fetchApi.actualPage, fetchApi.totalPages);\n}\n","import './firebase/backend';\nimport './firebase/auth';\nimport FetchFilmsApi from './helpers/fetchFilmsApi';\nimport RenderApi from './helpers/renderFuncApi';\nimport searchMovie from './main/searchMovie';\nimport { spinnerOnMain } from './spinner/spinner';\nimport { renderMarkup } from './main/renderMainMarkup';\nimport { onShowFilmModal } from './modals/filmDetailsModal';\nimport { refs } from './helpers/refsApiServ';\nimport { onCreatePagination } from './pagination/pagination';\nimport {\n  onScroll,\n  onScrollToTopBtn,\n  onScrollToDownBtn,\n} from './helpers/btnScroll';\nimport { themeChange } from './helpers/changeTheme';\nimport { checkLoadPageStatus } from './checkers/pageOnLoadCheker';\nimport './modals/modals';\nimport './helpers/pageChange';\nimport './helpers/simpleLightBox';\n// Class\nexport const fetchApi = new FetchFilmsApi();\nexport const renderApi = new RenderApi();\n\n// First render\nspinnerOnMain.enabled({ timeDelay: 20 });\ncheckLoadPageStatus({ delayAfterStop: 400 });\nrenderMarkup();\n\n// Modal film\nrefs.filmList.addEventListener('click', onShowFilmModal);\n// Pagination\nrefs.pagRef.addEventListener('click', onCreatePagination);\n","import { spinnerOnMain } from '../spinner/spinner';\n\nexport function checkLoadPageStatus({ delayAfterStop = 400 }) {\n  document.addEventListener('DOMContentLoaded', () => {\n    spinnerOnMain.disabled(delayAfterStop);\n  });\n  return;\n}\n","import { fetchApi } from '../main';\nimport { renderMarkup } from '../main/renderMainMarkup';\nimport { refs } from '../helpers/refsApiServ';\n\nexport function onCreatePagination(e) {\n  const currentPage = refs.currentPage;\n  const nextPage = refs.nextPage;\n  const prevPage = refs.prevPage;\n\n  // Numb page\n \n  if (e.target.dataset.numbId) {\n    fetchApi.actualPage = Number(e.target.dataset.numbId);\n  }\n\n  // Prev page\n\n  if (e.target.dataset.id === 'prev') {\n    if (fetchApi.actualPage === 1) {\n      return;\n    }\n\n    fetchApi.actualPage -= 1;\n  }\n\n  // Next page\n  if (e.target.dataset.id === 'next') {\n    if (fetchApi.actualPage === fetchApi.totalPages) {\n      return;\n    }\n\n    fetchApi.actualPage += 1;\n  }\n\n  // Toggle disable on next or prev page\n\n  if (fetchApi.actualPage === fetchApi.totalPages) {\n    nextPage.classList.add('disabled');\n  } else if (nextPage.classList.contains('disabled')) {\n    nextPage.classList.remove('disabled');\n  }\n\n  if (fetchApi.actualPage === 1) {\n    prevPage.classList.add('disabled');\n  } else {\n    prevPage.classList.remove('disabled');\n  }\n\n  // Рендер сторінки\n  renderMarkup();\n  currentPage.innerHTML = fetchApi.actualPage;\n}\n"],"names":["parcelRequire","$fInOO","$eyjy7","$49ae4b495f9e3a55$var$auth","getAuth","$49ae4b495f9e3a55$var$signInLinck","document","querySelector","$49ae4b495f9e3a55$var$renderUserHeader","$7RIyI","default","auth","renderApiCopy","render","renderMarkup","onAuthStateChanged","user","selector","innerHtml","createMarkypFunc","createAuthorizatedUserHeaderMarkup","uid","$d1BSM","notifyInfoMessage","addEventListener","async","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","postUserIntoDatebase","notifySuccessMessage","catch","error","console","errorCode","code","errorMessage","message","email","customData","credential","credentialFromError","$4b1b6d2aeda69328$export$2e2bcd8739ae039","value","$4b1b6d2aeda69328$export$9fdba169d7561de8","addMessage","$206a8a1cfa6b1be0$export$6465ae8726243ab1","setTimeout","$dkKs9","refs","searchError","classList","add","remove","$206a8a1cfa6b1be0$var$renderApi","$206a8a1cfa6b1be0$var$apiSearch","$awOEx","baseURL","$206a8a1cfa6b1be0$export$2e2bcd8739ae039","e","preventDefault","currentTarget","elements","search_user","trim","actualQuery","incrementPage","step","films","getSearchFilmsData","genres","getGenresList","data","results","length","filmList","innerHTML","markup","createFilmCardsMarkup","innerHTMLMarkup","insAdHtmltype","log","window","location","href","includes","form","removeEventListener","$7hQEe","$cb71d7e6ff89ff0a$export$aa9450a0fa5dc8b6","options","backgroundColor","svgColor","$ce763127c631fa20$export$e9562cbc2a9880a8","page","totalPages","beforeContainer","afterContainer","beforeCurPageContainer","afterCurPageContainer","$21365ea99e42a387$export$add40575555c273c","$d706c914d748cb55$export$adb4bb4243526aef","getAllFilmsData","$d706c914d748cb55$export$db1d3739d208bc77","$359X7","actualPage","enabled","timeDelay","delayAfterStop","disabled","$dLzFW","onShowFilmModal","pagRef","currentPage","nextPage","prevPage","target","dataset","numbId","Number","id","contains"],"version":3,"file":"index.1e313d6e.js.map"}