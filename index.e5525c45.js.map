{"mappings":"iiBAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,S,8ECAAE,EAAAF,EAAA,S,iBAE8BG,EAAMC,EAAeC,E,aDc7CC,GAAO,EAAAJ,EAAAK,WACPC,EAAcC,SAASC,cAAc,kBAErCC,EAAmB,IAAI,EAAAC,EAAAC,S,SAWdC,I,OAAAA,EAAfC,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,E,kEAAAA,EAAW,IAAI,EAAAjB,EAAAkB,qBAErB,EAAAlB,EAAAmB,iBAAgBf,EAAMa,GACnBG,MAAK,SAAAC,GAGerB,EAAAkB,mBAAmBI,qBAAqBD,GAClCE,YADzB,IAGMC,EAAOH,EAAOG,MACpB,EAAAC,EAAAC,sBAAqBF,GAGjBA,IACFf,EAAiBkB,aAAa,CAC5BC,SAAU,cACVC,WAAW,EACXC,iBACErB,EAAiBsB,wCAErB,EAAAC,EAAAC,sBAAqB,e,IAKxBC,OAAM,SAAAC,GAELC,QAAQD,MAAMA,GACd,IAAME,EAAYF,EAAMG,KACxBF,QAAQD,MAAME,GACd,IAAME,EAAeJ,EAAMK,QAE3BJ,QAAQD,MAAMI,GACd,IAAME,EAAQN,EAAMO,WAAWD,MAE/BL,QAAQD,MAAMM,GACd,IAAME,EAAa3C,EAAAkB,mBAAmB0B,oBAAoBT,GAE1DC,QAAQD,MAAMQ,E,gDAvCGE,MAAAC,KAAAC,U,CC5BO9C,EDwBhBG,ECxBsBF,EDwBhBO,ECxB+BN,EDwBbM,EAAiBkB,cCvBrD,EAAA3B,EAAAgD,oBAAmB/C,GAAM,SAAAuB,GACnBA,GAGFrB,EAAO,CACLyB,SAAU,cACVC,WAAW,EACXC,iBAAkB5B,EAAc6B,uCAEtBP,EAAKyB,MAGjB,EAAAjB,EAAAkB,mBAAkB,sB,IDaxB5C,EAAY6C,iBAAiB,S,kBAEdvC,EAAQiC,MAAAC,KAAAC,U,qCE9BvBhD,EAAAD,EAAA,S,mDCGe,SAAAsD,EAA4BC,GACpCA,GAKLC,EAAc,CAAEC,YAAY,IAC5BC,KALEF,EAAc,CAAEC,YAAY,G,CAQzB,SAASD,EAAcG,GAC5B,IAD4BA,EAAEF,WACb,CAIf,OAAOG,YAHc,WACnBC,EAAAC,KAAKC,YAAYC,UAAUC,IAAI,Y,GAED,I,CAElC,OAAOJ,EAAAC,KAAKC,YAAYC,UAAUE,OAAO,Y,kBDdrCC,EAAY,IAAI,EAAAvD,EAAAC,SAEhBuD,EAAY,IAAI,EAAAC,EAAAxD,SAAc,CAClCyD,QAAS,kCASI,SAAAC,EAA0BC,GACvCA,EAAEC,iBAEF,IAAMlB,EAAQiB,EAAEE,cAAcC,SAASC,YAAYrB,MAAMsB,OAEzDT,EAAUU,YAAcvB,EACxBD,EAAmBC,GAEnBa,EAAUW,cAAc,CAAEC,KAAM,G,UAGZtB,I,OAAAuB,EAAelC,MAAAC,KAAAC,U,UAAfgC,I,OAAAA,EAAflE,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,I,IACCgE,EACAC,EACAC,EAQAC,E,kFAVcjB,EAAUkB,mBAAmB,I,cAA3CJ,EAAKK,EAAAC,K,SACapB,EAAUqB,cAAc,I,UAA1CN,EAASI,EAAAC,KACTJ,EAASD,EAAUO,KAAKN,OACPF,EAAMQ,KAAKC,QAAQC,OAEvB,C,uBACjB/B,EAAAC,KAAK+B,SAASC,UAAY,G,kBACnBtC,EAAc,CAAEC,YAAY,K,QAG/B4B,EAASlB,EAAU4B,sBAAsBb,EAAMQ,KAAKC,QAASP,GAEnEjB,EAAUtC,aAAa,CACrBC,SAAU,eACVC,WAAW,EACXiE,gBAAiB,GACjBC,cAAe,YACfjE,iBAAkBqD,I,6CAlBetC,MAAAC,KAAAC,U,CAlBrCX,QAAQ4D,MACHC,OAAOC,SAASC,KAAKC,SAAS,aAGjCzC,EAAAC,KAAKyC,KAAKC,oBAAoB,SAAUjC,GAFxCV,EAAAC,KAAKyC,KAAKlD,iBAAiB,SAAUkB,GEbvC,IAAAkC,EAAAzG,EAAA,SAEa0G,EAAgB,IAAI,EAAAD,EAAA5F,SAAqB,CACpD8F,QAAS,CAAEC,gBAAiB,UAAWC,SAAU,aAEtB,IAAI,EAAAJ,EAAA5F,SAAqB,ICLtDZ,EAAAD,EAAA,S,aCAA6D,EAAA7D,EAAA,SAEO,SAAS8G,EAAYC,EAAMC,GAChC,IAAIC,EAAmB,GACnBC,EAAkB,GAGlBH,GAAQ,IACVE,GAAoB,iEAGT,IAATF,GAAuB,IAATA,EAChBE,GAAmB,yCACjBE,OADyDJ,EAAO,EAAE,MAEnEI,OADCJ,EAAO,EACR,UACQA,GAAQ,IACjBE,GAAoB,+BAGlBF,GAAQ,IACVE,GAAmB,oCACjBE,OADoDJ,EAAO,EAAE,MAE9DI,OADCJ,EAAO,EACR,WAGCA,GAAQ,IACVE,GAAmB,oCACjBE,OADoDJ,EAAO,EAAE,MAE9DI,OADCJ,EAAO,EACR,WAICA,GAAQC,EAAa,IACvBE,GAAkB,oCAChBC,OADmDJ,EAAO,EAAE,MAE7DI,OADCJ,EAAO,EACR,WAGCA,GAAQC,EAAa,IACvBE,GAAkB,oCAChBC,OADmDJ,EAAO,EAAE,MAE7DI,OADCJ,EAAO,EACR,WAGCA,IAASC,EAAa,GAAKD,IAASC,EAAa,EACnDE,GAAkB,yCAChBC,OADwDJ,EAAO,EAAE,MAElEI,OADCJ,EAAO,EACR,UACQA,GAAQC,EAAa,IAC9BE,GAAmB,+BAGjBH,GAAQC,EAAa,IACvBE,GAAkB,oDAAkEC,OAAfH,EAAW,MAAeG,OAAXH,EAAW,WAIjGnD,EAAAC,KAAKsD,uBAAuBtB,UAAYmB,EACxCpD,EAAAC,KAAKuD,sBAAsBvB,UAAYoB,C,2BDrDnBI,I,OAAAC,EAAYxE,MAAAC,KAAAC,U,UAAZsE,I,OAAAA,EAAfxG,EAAAd,EAAA,CAAAc,EAAAC,GAAAC,MAAA,SAAAC,I,IAECgE,EACAG,E,kFADcmC,EAASC,gBAAgB,I,OAAvCvC,EAAKK,EAAAC,KACLH,EAASqC,EAAU3B,sBAAsBb,EAAMQ,KAAKC,QAASgC,EAAAvC,QAEnEsC,EAAU7F,aAAa,CACrBC,SAAU,eACVC,WAAW,EACXC,iBAAkBqD,IAGpByB,EAAYU,EAASI,WAAYJ,EAASR,Y,4CAXVjE,MAAAC,KAAAC,U,wFEgB3B,I,ECnB+B4E,EDmBzBL,EAAW,IAAI,EAAAnD,EAAAxD,SACf6G,EAAY,IAAI,EAAA9G,EAAAC,SAG7B6F,EAAcoB,QAAQ,CAAEC,UAAW,K,EACf,CAAEF,eAAgB,KCxBAA,sBAAc,IAAAG,EAAG,IAAGA,EACxDvH,SAAS4C,iBAAiB,oBAAoB,WAC5CqD,EAAcuB,SAASJ,E,IDuB3BP,IAGAzD,EAAAC,KAAK+B,SAASxC,iBAAiB,QAAS6E,EAAAC,iBAExCtE,EAAAC,KAAKsE,OAAO/E,iBAAiB,SE5BtB,SAA4BmB,GACjC,IAAM6D,EAAcxE,EAAAC,KAAKuE,YACnBC,EAAWzE,EAAAC,KAAKwE,SAChBC,EAAW1E,EAAAC,KAAKyE,SAUtB,GANI/D,EAAEgE,OAAOC,QAAQC,SACnBlB,EAASI,WAAae,OAAOnE,EAAEgE,OAAOC,QAAQC,SAKpB,SAAxBlE,EAAEgE,OAAOC,QAAQG,GAAe,CAClC,GAA4B,IAAxBpB,EAASI,WACX,OAGFJ,EAASI,YAAc,C,CAIzB,GAA4B,SAAxBpD,EAAEgE,OAAOC,QAAQG,GAAe,CAClC,GAAIpB,EAASI,aAAeJ,EAASR,WACnC,OAGFQ,EAASI,YAAc,C,CAKrBJ,EAASI,aAAeJ,EAASR,WACnCsB,EAAStE,UAAUC,IAAI,YACdqE,EAAStE,UAAU6E,SAAS,aACrCP,EAAStE,UAAUE,OAAO,YAGA,IAAxBsD,EAASI,WACXW,EAASvE,UAAUC,IAAI,YAEvBsE,EAASvE,UAAUE,OAAO,YAI5BoD,IACAe,EAAYvC,UAAY0B,EAASI,U","sources":["src/js/firebase/backend.js","src/js/firebase/auth.js","src/js/user-service/userAuthChecker.js","src/js/main/searchMovie.js","src/js/checkers/filmSearchChecker.js","src/js/spinner/spinner.js","src/js/main/renderMainMarkup.js","src/js/pagination/createPages.js","src/js/main.js","src/js/checkers/pageOnLoadCheker.js","src/js/pagination/pagination.js"],"sourcesContent":["import { app } from './initFirebase';\nimport '../user-service/userServ';\n// Import the functions you need from the SDKs you need\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\n// import { getDatabase, ref, } from 'firebase/database'; // закоментировал, перезаписан\nimport { getUserFilmsData } from '../user-service/userServ';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n","import {\n  postUserIntoDatebase,\n  getUserDataById,\n} from '../user-service/dataDatebaseFunc';\nimport { app } from './initFirebase';\nimport {\n  notifySuccessMessage,\n  notifyInfoMessage,\n} from '../helpers/notifyMessages';\n\n// Initialize Firebase\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { async } from '@firebase/util';\nimport { checkUserAuth } from '../user-service/userAuthChecker';\nimport RenderApi from '../helpers/renderFuncApi';\n// // SIGN IN\nconst auth = getAuth();\nconst signInLinck = document.querySelector('.menu__link-js');\n\nconst renderUserHeader = new RenderApi();\n// console.log(signIn.href);\n// if ((window.location.href = 'user-page')) {\n//   signInLinck.removeEventListener('click', onSignIn);\n// }\n\n// check auth\ncheckUserAuth(auth, renderUserHeader, renderUserHeader.renderMarkup);\n\nsignInLinck.addEventListener('click', onSignIn);\n\nasync function onSignIn() {\n  const provider = new GoogleAuthProvider();\n\n  signInWithPopup(auth, provider)\n    .then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      postUserIntoDatebase(user);\n      // getUserDataById(user.uid, 'userData');\n\n      if (user) {\n        renderUserHeader.renderMarkup({\n          selector: '.menu__list',\n          innerHtml: true,\n          createMarkypFunc:\n            renderUserHeader.createAuthorizatedUserHeaderMarkup(),\n        });\n        notifySuccessMessage('You are in!');\n      }\n\n      // ...\n    })\n    .catch(error => {\n      // Handle Errors here.\n      console.error(error);\n      const errorCode = error.code;\n      console.error(errorCode);\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      console.error(errorMessage);\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      console.error(email);\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n      console.error(credential);\n    });\n}\n\n// LOG OUT\n","import { onAuthStateChanged } from 'firebase/auth';\nimport { notifyInfoMessage } from '../helpers/notifyMessages';\nexport function checkUserAuth(auth, renderApiCopy, render) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      render({\n        selector: '.menu__list',\n        innerHtml: true,\n        createMarkypFunc: renderApiCopy.createAuthorizatedUserHeaderMarkup(),\n      });\n      const uid = user.uid;\n    } else {\n      // User is signed out\n      notifyInfoMessage('You are not Sign In');\n    }\n  });\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport getFilmSearchCheck from '../checkers/filmSearchChecker';\nimport { refs } from '../helpers/refsApiServ';\nimport { getErrMessage } from '../checkers/filmSearchChecker';\n\nconst renderApi = new RenderApi();\n\nconst apiSearch = new FetchFilmsApi({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\nconsole.log();\nif (!window.location.href.includes('user-page')) {\n  refs.form.addEventListener('submit', onSearchBtnClick);\n} else {\n  refs.form.removeEventListener('submit', onSearchBtnClick);\n}\n\nexport default function onSearchBtnClick(e) {\n  e.preventDefault();\n\n  const value = e.currentTarget.elements.search_user.value.trim();\n\n  apiSearch.actualQuery = value;\n  getFilmSearchCheck(value);\n\n  apiSearch.incrementPage({ step: 1 });\n}\n\nexport async function getSearchedFilm() {\n  const films = await apiSearch.getSearchFilmsData({});\n  const genresObj = await apiSearch.getGenresList({});\n  const genres = genresObj.data.genres;\n  const filmsArrLength = films.data.results.length;\n\n  if (!filmsArrLength) {\n    refs.filmList.innerHTML = '';\n    return getErrMessage({ addMessage: true });\n  }\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    innerHTMLMarkup: '',\n    insAdHtmltype: 'beforeend',\n    createMarkypFunc: markup,\n  });\n}\n","import { getSearchedFilm } from '../main/searchMovie';\nimport { refs } from '../helpers/refsApiServ';\n\nexport default function getFilmSearchCheck(value) {\n  if (!value) {\n    getErrMessage({ addMessage: true });\n    return;\n  }\n\n  getErrMessage({ addMessage: false });\n  getSearchedFilm();\n}\n\nexport function getErrMessage({ addMessage }) {\n  if (!addMessage) {\n    const clearMessage = () => {\n      refs.searchError.classList.add('is-hidden');\n    };\n    return setTimeout(clearMessage, 3000);\n  }\n  return refs.searchError.classList.remove('is-hidden');\n}\n","import SpinneroOnLoadingApi from '../helpers/spinnerApi';\n\nexport const spinnerOnMain = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nexport const spinnerOnList = new SpinneroOnLoadingApi({});\n","import { fetchApi } from '../main';\nimport { renderApi } from '../main';\nimport { createPages } from '../pagination/createPages';\nimport { genres } from '../helpers/genres';\n\nexport async function renderMarkup() {\n  // console.log(genres)\n  const films = await fetchApi.getAllFilmsData({});\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    createMarkypFunc: markup,\n  });\n\n  createPages(fetchApi.actualPage, fetchApi.totalPages);\n}\n","import { refs } from '../helpers/refsApiServ';\n\nexport function createPages(page, totalPages) {\n  let beforeContainer = ``;\n  let afterContainer = ``;\n\n  // Before\n  if (page >= 5) {\n    beforeContainer += `<div class=\"numb numb--first-page\" data-numb-id='1'>1</div>`;\n  }\n\n  if (page === 4 || page === 5) {\n    beforeContainer += `<div class=\"numb dots\" data-numb-id='${page - 3}'>${\n      page - 3\n    }</div>`;\n  } else if (page >= 6) {\n    beforeContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page >= 3) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 2}'>${\n      page - 2\n    }</div>`;\n  }\n\n  if (page >= 2) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 1}'>${\n      page - 1\n    }</div>`;\n  }\n\n  // After\n  if (page <= totalPages - 1) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 1}'>${\n      page + 1\n    }</div>`;\n  }\n\n  if (page <= totalPages - 2) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 2}'>${\n      page + 2\n    }</div>`;\n  }\n\n  if (page === totalPages - 3 || page === totalPages - 4) {\n    afterContainer += `<div class=\"numb dots\" data-numb-id='${page + 3}'>${\n      page + 3\n    }</div>`;\n  } else if (page <= totalPages - 5) {\n    afterContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page <= totalPages - 4) {\n    afterContainer += `<div class=\"numb numb--last-page\" data-numb-id='${totalPages}'>${totalPages}</div>`;\n  }\n\n  // DOM\n  refs.beforeCurPageContainer.innerHTML = beforeContainer;\n  refs.afterCurPageContainer.innerHTML = afterContainer;\n}\n","import './firebase/backend';\nimport './firebase/auth';\nimport FetchFilmsApi from './helpers/fetchFilmsApi';\nimport RenderApi from './helpers/renderFuncApi';\nimport searchMovie from './main/searchMovie';\nimport { spinnerOnMain } from './spinner/spinner';\nimport { renderMarkup } from './main/renderMainMarkup';\nimport { onShowFilmModal } from './modals/filmDetailsModal';\nimport { refs } from './helpers/refsApiServ';\nimport { onCreatePagination } from './pagination/pagination';\nimport {\n  onScroll,\n  onScrollToTopBtn,\n  onScrollToDownBtn,\n} from './helpers/btnScroll';\nimport { themeChange } from './helpers/changeTheme';\nimport { checkLoadPageStatus } from './checkers/pageOnLoadCheker';\nimport './modals/modals';\nimport './helpers/pageChange';\nimport './helpers/simpleLightBox';\n// Class\nexport const fetchApi = new FetchFilmsApi();\nexport const renderApi = new RenderApi();\n\n// First render\nspinnerOnMain.enabled({ timeDelay: 20 });\ncheckLoadPageStatus({ delayAfterStop: 400 });\nrenderMarkup();\n\n// Modal film\nrefs.filmList.addEventListener('click', onShowFilmModal);\n// Pagination\nrefs.pagRef.addEventListener('click', onCreatePagination);\n","import { spinnerOnMain } from '../spinner/spinner';\n\nexport function checkLoadPageStatus({ delayAfterStop = 400 }) {\n  document.addEventListener('DOMContentLoaded', () => {\n    spinnerOnMain.disabled(delayAfterStop);\n  });\n  return;\n}\n","import { fetchApi } from '../main';\nimport { renderMarkup } from '../main/renderMainMarkup';\nimport { refs } from '../helpers/refsApiServ';\n\nexport function onCreatePagination(e) {\n  const currentPage = refs.currentPage;\n  const nextPage = refs.nextPage;\n  const prevPage = refs.prevPage;\n\n  // Numb page\n \n  if (e.target.dataset.numbId) {\n    fetchApi.actualPage = Number(e.target.dataset.numbId);\n  }\n\n  // Prev page\n\n  if (e.target.dataset.id === 'prev') {\n    if (fetchApi.actualPage === 1) {\n      return;\n    }\n\n    fetchApi.actualPage -= 1;\n  }\n\n  // Next page\n  if (e.target.dataset.id === 'next') {\n    if (fetchApi.actualPage === fetchApi.totalPages) {\n      return;\n    }\n\n    fetchApi.actualPage += 1;\n  }\n\n  // Toggle disable on next or prev page\n\n  if (fetchApi.actualPage === fetchApi.totalPages) {\n    nextPage.classList.add('disabled');\n  } else if (nextPage.classList.contains('disabled')) {\n    nextPage.classList.remove('disabled');\n  }\n\n  if (fetchApi.actualPage === 1) {\n    prevPage.classList.add('disabled');\n  } else {\n    prevPage.classList.remove('disabled');\n  }\n\n  // Рендер сторінки\n  renderMarkup();\n  currentPage.innerHTML = fetchApi.actualPage;\n}\n"],"names":["parcelRequire","$bpxeT","$gQOBw","auth","renderApiCopy","render","$952d868e7e85930a$var$auth","getAuth","$952d868e7e85930a$var$signInLinck","document","querySelector","$952d868e7e85930a$var$renderUserHeader","$408gj","default","$952d868e7e85930a$var$_onSignIn","$parcel$interopDefault","$2TvXO","mark","_callee","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","accessToken","user","$6pabY","postUserIntoDatebase","renderMarkup","selector","innerHtml","createMarkypFunc","createAuthorizatedUserHeaderMarkup","$dtYBq","notifySuccessMessage","catch","error","console","errorCode","code","errorMessage","message","email","customData","credential","credentialFromError","apply","this","arguments","onAuthStateChanged","uid","notifyInfoMessage","addEventListener","$57be10743d726c6f$export$2e2bcd8739ae039","value","$57be10743d726c6f$export$9fdba169d7561de8","addMessage","$52d0919cbc92f7ca$export$6465ae8726243ab1","param","setTimeout","$jxf8A","refs","searchError","classList","add","remove","$52d0919cbc92f7ca$var$renderApi","$52d0919cbc92f7ca$var$apiSearch","$iibY6","baseURL","$52d0919cbc92f7ca$export$2e2bcd8739ae039","e","preventDefault","currentTarget","elements","search_user","trim","actualQuery","incrementPage","step","$52d0919cbc92f7ca$var$_getSearchedFilm","films","genresObj","genres","markup","getSearchFilmsData","_ctx","sent","getGenresList","data","results","length","filmList","innerHTML","createFilmCardsMarkup","innerHTMLMarkup","insAdHtmltype","log","window","location","href","includes","form","removeEventListener","$g649J","$9652aaa8971f5a76$export$aa9450a0fa5dc8b6","options","backgroundColor","svgColor","$7cec7432e83a878e$export$e9562cbc2a9880a8","page","totalPages","beforeContainer","afterContainer","concat","beforeCurPageContainer","afterCurPageContainer","$03da7ebcce7f049b$export$add40575555c273c","$03da7ebcce7f049b$var$_renderMarkup","$089c40fcbb903d20$export$adb4bb4243526aef","getAllFilmsData","$089c40fcbb903d20$export$db1d3739d208bc77","$c0QYQ","actualPage","delayAfterStop","enabled","timeDelay","_delayAfterStop","disabled","$lo7pY","onShowFilmModal","pagRef","currentPage","nextPage","prevPage","target","dataset","numbId","Number","id","contains"],"version":3,"file":"index.e5525c45.js.map"}