{"mappings":"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","sources":["src/js/user-service/user.js","src/js/user-service/logOut.js","src/js/user-service/lib.js"],"sourcesContent":["import '../helpers/changeTheme';\nimport '../helpers/btnScroll';\nimport './logOut';\nimport './lib';\nimport '../modals/modals';\nimport { refs } from '../helpers/refsApiServ';\nimport { onShowFilmModal } from '../modals/filmDetailsModal';\nimport SpinneroOnLoadingApi from '../helpers/spinnerApi';\nrefs.filmListUser.addEventListener('click', onShowFilmModal);\nconst libSpinner = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nlibSpinner.enabled({ timeDelay: 5, delayAfterStop: 350 });\n","import { getAuth, signOut } from 'firebase/auth';\nimport { app } from '../firebase/initFirebase';\nimport { notifyInfoMessage } from '../helpers/notifyMessages';\napp;\nconst logOut = document.querySelector('.menu__logout');\nlogOut.addEventListener('click', onlogOut);\n\nfunction onlogOut(e) {\n  e.preventDefault();\n  const auth = getAuth();\n  signOut(auth)\n    .then(() => {\n      // Sign-out successful.\n      notifyInfoMessage('You loged out!');\n      location = 'https://haber-viacheslav.github.io/filmoteka/index.html';\n      //   window.open();\n    })\n    .catch(error => {\n      // An error happened.\n      console.error(error);\n    });\n}\n","import { async } from '@firebase/util';\nimport { onAuthStateChanged, getAuth } from 'firebase/auth';\nimport {\n  getDatabase,\n  ref,\n  onValue,\n  push,\n  set,\n  remove,\n  child,\n  get,\n  update,\n} from 'firebase/database';\nimport { app } from '../firebase/initFirebase';\nimport { refs } from '../helpers/refsApiServ';\nimport { genres } from '../helpers/genres';\n\nimport RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport {\n  notifyFailureMessage,\n  notifyInfoMessage,\n} from '../helpers/notifyMessages';\nconst libFetchApi = new FetchFilmsApi();\nconst libRender = new RenderApi();\nconst db = getDatabase(app);\nconst auth = getAuth(app);\n// default\nonBtnQueueClick();\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\nrefs.btnWatched.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnQueueClick(e) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n\n      const uid = user.uid;\n      get(child(ref(db), `users/${uid}/userQueue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            const keys = Object.keys(data);\n            const resp = [];\n            for (const key of keys) {\n              resp.push(key);\n            }\n            return resp;\n          }\n        })\n        .then(resp => {\n          if (!resp) {\n            notifyInfoMessage('You do not have any movies in Queue!');\n            document.querySelector('.films__list--user').innerHTML = '';\n            document\n              .querySelector('.stub__container')\n              .classList.remove('is-hidden');\n            return;\n          }\n          const promiseArr = [];\n\n          for (const filmId of resp) {\n            const films = libFetchApi.getCurrentFilm({ id: filmId });\n            promiseArr.push(films);\n          }\n          Promise.all(promiseArr).then(value => {\n            libRender.renderMarkup({\n              selector: '.films__list--user',\n              innerHtml: true,\n              createMarkypFunc: libRender.createFilmUserCardsMarkup(\n                value,\n                genres\n              ),\n            });\n          });\n        })\n        .catch(err => console.error(err));\n      // ...\n    } else {\n      notifyFailureMessage('Please Log In!');\n    }\n  });\n}\nfunction onBtnWatchedClick(e) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      const uid = user.uid;\n      get(child(ref(db), `users/${uid}/userWatched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            const keys = Object.keys(data);\n            const resp = [];\n            for (const key of keys) {\n              resp.push(key);\n            }\n            return resp;\n          }\n        })\n        .then(resp => {\n          if (!resp) {\n            notifyInfoMessage('You do not have any movies in Watched!');\n            document.querySelector('.films__list--user').innerHTML = '';\n            document\n              .querySelector('.stub__container')\n              .classList.remove('is-hidden');\n            return;\n          }\n          document.querySelector('.stub__container').classList.add('is-hidden');\n          const promiseArr = [];\n\n          for (const filmId of resp) {\n            const films = libFetchApi.getCurrentFilm({ id: filmId });\n            promiseArr.push(films);\n          }\n          Promise.all(promiseArr).then(value => {\n            libRender.renderMarkup({\n              selector: '.films__list--user',\n              innerHtml: true,\n              createMarkypFunc: libRender.createFilmUserCardsMarkup(\n                value,\n                genres\n              ),\n            });\n          });\n        })\n        .catch(err => console.error(err));\n      // ...\n    } else {\n      notifyFailureMessage('Please Log In!');\n    }\n  });\n}\n"],"names":["parcelRequire","$gQOBw","$iFsN9","app","document","querySelector","addEventListener","e","preventDefault","auth","getAuth","signOut","then","$dtYBq","notifyInfoMessage","location","catch","error","console","$731284caa87ab3f4$var$libFetchApi","$iibY6","default","$731284caa87ab3f4$var$libRender","$408gj","$731284caa87ab3f4$var$db","$cokon","getDatabase","$731284caa87ab3f4$var$auth","$731284caa87ab3f4$var$onBtnQueueClick","onAuthStateChanged","user","uid","get","child","ref","concat","snapshot","exists","data","val","keys","Object","resp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","key","value","push","err","return","innerHTML","classList","remove","promiseArr","filmId","films","getCurrentFilm","id","Promise","all","renderMarkup","selector","innerHtml","createMarkypFunc","createFilmUserCardsMarkup","$c0QYQ","genres","notifyFailureMessage","$jxf8A","refs","btnQueue","btnWatched","add","filmListUser","$lo7pY","onShowFilmModal","$g649J","options","backgroundColor","svgColor","enabled","timeDelay","delayAfterStop"],"version":3,"file":"user-page.507f9350.js.map"}