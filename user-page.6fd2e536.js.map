{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/process/browser.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","src/js/backend.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/axios/lib/env/classes/FormData.js","node_modules/form-data/lib/browser.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","src/js/helpers/fetchFilmsApi.js","src/js/helpers/refsApiServ.js","src/js/checkers/genresChecker.js","src/js/helpers/renderFuncApi.js","src/js/checkers/filmSearchChecker.js","src/js/main/searchMovie.js","node_modules/notiflix/build/notiflix-loading-aio.js","src/js/helpers/spinnerApi.js","src/js/spinner/spinner.js","src/js/pagination/createPages.js","src/js/main/renderMainMarkup.js","src/js/checkers/filmTrailerChecker.js","node_modules/basiclightbox/dist/basicLightbox.min.js","src/js/modals/showTrailer.js","src/js/checkers/filmDetailesChecker.js","src/js/modals/filmDetailsModal.js","src/js/helpers/changeTheme.js","src/js/main.js","src/js/modals/modals.js","src/js/pagination/pagination.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  const emulator = getDefaultEmulatorHostnameAndPort('database');\n  if (emulator) {\n    connectDatabaseEmulator(db, ...emulator);\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD7a39CtgzeuIx1kkpFRZ7MvO1bdmoGCT4',\n  authDomain: 'filmoteka-c3a99.firebaseapp.com',\n  databaseURL:\n    'https://filmoteka-c3a99-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'filmoteka-c3a99',\n  storageBucket: 'filmoteka-c3a99.appspot.com',\n  messagingSenderId: '412361816258',\n  appId: '1:412361816258:web:1c806438765e9ded7b235b',\n  measurementId: 'G-SJPWP9Q9CH',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase();\n\nimport { getDatabase, ref, set } from 'firebase/database';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\nconst starCountRef = ref(db, 'users/');\nonValue(starCountRef, snapshot => {\n  const data = snapshot.val();\n  console.log(data);\n});\n// function writeUserData(name, email, imageUrl) {\n//   set(ref(db, 'users/'), {\n//     username: name,\n//     email: email,\n//     profile_picture: imageUrl,\n//   });\n// }\n\n// console.log(writeUserData('Vlalav', 'exple@gmail.com', 'ink...'));\n// const starCountRef = ref(db, '/users');\n// onValue(starCountRef, dt => {\n//   const data = dt.val();\n//   console.log(data);\n// });\n\n// import { getDatabase, ref, push, set } from 'firebase/database';\n\n// // Create a new post reference with an auto-generated id\n// const postListRef = ref(db, 'users');\n// const newPostRef = push(postListRef);\n// set(newPostRef, {\n//   name: 'Daria',\n//   email: 'exple@gmail.com',\n//   imgLink: 'ink...',\n//   // ...\n// });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self;\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import FormData from 'form-data';\nexport default FormData;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport envFormData from '../env/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliant(thing) {\n  return thing && utils.isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator];\n}\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (envFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && isSpecCompliant(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        (utils.isFileList(value) || utils.endsWith(key, '[]') && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return  passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && platform.isStandardBrowserEnv) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.2.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON\n}\n","import axios from 'axios';\n\nclass FetchFilmsApi {\n\n  #API_KEY;\n  #totalPages;\n  constructor(config = { baseURL: 'https://api.themoviedb.org/3/' }) {\n    this.query = '';\n    this.config = config;\n    this.#API_KEY = '76cbb606f190fc237086ec33f1fd98a3';\n\n    this.page = 1;\n    this.#totalPages = null;\n  }\n  async fetchWithAllFilmsData({ mediaType, timeWindow }) {\n    const resp = await axios.get(\n      `trending/${mediaType}/${timeWindow}?api_key=${this.#API_KEY}&page=${\n        this.page\n      }`,\n      this.config\n    );\n\n    return resp;\n  }\n\n  async getAllFilmsData({ mediaType = 'movie', timeWindow = 'day' }) {\n    try {\n      const resp = await this.fetchWithAllFilmsData({\n        mediaType,\n        timeWindow,\n      });\n\n      this.#totalPages = resp.data.total_pages;\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchWithCurrentFilm({ mediaType, id }) {\n    const resp = await axios.get(\n      `${mediaType}/${id}?api_key=${this.#API_KEY} `,\n      this.config\n    );\n\n    return resp;\n  }\n  async getCurrentFilm({ mediaType = 'movie', id }) {\n    try {\n      const resp = await this.fetchWithCurrentFilm({\n        mediaType,\n        id,\n      });\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchFilmTrailerById({ mediaType, id }) {\n    const resp = await axios.get(\n      `${mediaType}/${id}/videos?api_key=${this.#API_KEY} `,\n      this.config\n    );\n\n    return resp;\n  }\n  async getFilmTrailerById({ mediaType = 'movie', id }) {\n    try {\n      const resp = await this.fetchFilmTrailerById({\n        mediaType,\n        id,\n      });\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchWithSearchFilmData({ mediaType, lang, page, include_adult }) {\n    const resp = await axios.get(\n      `search/${mediaType}?api_key=${this.#API_KEY}&language=${lang}&query=${\n        this.query\n      }&page=${page}&include_adult=${include_adult}`,\n      this.config\n    );\n\n    return resp;\n  }\n\n  //\n  //\n  async fetchGenresList({ mediaType, genreType, page }) {\n    const resp = await axios.get(\n      `genre/${mediaType}/${genreType}?api_key=${this.#API_KEY}&page=${page}`,\n      this.config\n    );\n    return resp;\n  }\n  //\n  async getGenresList({ mediaType = 'movie', genreType = 'list', page = '1' }) {\n    try {\n      const resp = await this.fetchGenresList({ mediaType, genreType, page });\n      return resp;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  //\n\n  async getSearchFilmsData({\n    mediaType = 'movie',\n    lang = 'en-US',\n    page = 1,\n    include_adult = false,\n  }) {\n    try {\n      const resp = await this.fetchWithSearchFilmData({\n        mediaType,\n        lang,\n        page,\n        include_adult,\n      });\n      return resp;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  incrementPage({ step = 1 }) {\n    this.page += step;\n  }\n  get actualPage() {\n    return this.page;\n  }\n  set actualPage(newPage) {\n    this.page = newPage;\n  }\n  get actualQuery() {\n    return this.query;\n  }\n  set actualQuery(newQuery) {\n    return (this.query = newQuery.trim());\n  }\n  get totalPages() {\n    return this.#totalPages;\n  }\n  set totalPages(newValue) {\n    this.#totalPages = newValue;\n  }\n}\n// const api = new FetchFilmsApi();\n\n// // console.log((api.actualQuery = 'asfas       s     '));\n// console.log(api.config);\nexport default FetchFilmsApi;\n","export const refs = {\n  btnOpenRef: document.querySelector('[data-modal-open]'),\n  btnOpenUserRef: document.querySelector('[data-modal-open-user]'),\n  btnCloseRef: document.querySelector('[data-team-modal-close]'),\n  body: document.querySelector('body'),\n  teamModal: document.querySelector('[data-team-modal]'),\n  teamLinks: document.querySelectorAll('.team-modal__link'),\n  form: document.querySelector('.form'),\n  searchError: document.querySelector('.form__text-error'),\n  pagRef: document.querySelector('.pagination'),\n  currentPage: document.querySelector('#curr'),\n  nextPage: document.querySelector('#next'),\n  prevPage: document.querySelector('#prev'),\n  firstPage: document.querySelector('#first-page'),\n  lastPage: document.querySelector('#last-page'),\n  beforeCurPageContainer: document.querySelector('.before-cur-page'),\n  afterCurPageContainer: document.querySelector('.after-cur-page'),\n  themeBtnRef: document.querySelector('.theme-btn'),\n  lightIconRef: document.querySelector('.theme-light'),\n  darkIconRef: document.querySelector('.theme-dark'),\n  filmList: document.querySelector('.films__list'),\n  // enter refs of elements you want\n  // like this ---> inputEl: document.querySelector('.header__search-form')  (EXAMPLE!!!)\n};\n\n// DONT TOUCH below\n// -----------------------------------\n// class refsApiServ {\n//   constructor() {\n//     this.el = {};\n//   }\n//   addRefs(refName, link) {\n//     this.el = { [refName]: link };\n//   }\n// }\n// const refs = new refsApiServ();\n// refs.addRefs('inputEl', document.querySelector('.film-list'));\n// console.log(refs.refs.inputEl);\n// -----------------------------------\n","export function checkGenreList(genre_ids, genres, release_date) {\n  let genreIsMany = null;\n  let maxGenreIds = genre_ids;\n\n  if (genre_ids.length > 2) {\n    genreIsMany = true;\n    maxGenreIds = genre_ids.slice(0, 2);\n  } else {\n    genreIsMany = false;\n  }\n\n  const ArrayGenresOfCurrentFilm = maxGenreIds.map(genre_id => {\n    return genres.find(oneGenre => oneGenre.id === genre_id);\n  });\n  let genresOfCurrentFilm = ArrayGenresOfCurrentFilm.map(\n    oneGenre => oneGenre.name\n  ).join(', ');\n\n  if (genreIsMany) {\n    genresOfCurrentFilm += ', Other';\n  }\n\n  const date = release_date.slice(0, 4);\n\n  return { date, genresOfCurrentFilm };\n}\n","import refsApiServ from './refsApiServ';\nimport { checkGenreList } from '../checkers/genresChecker';\n\nclass RenderApi {\n  constructor() {}\n\n  createFilmCardsMarkup(data, genres) {\n    return data\n      .map(({ poster_path, title, genre_ids, release_date, id }) => {\n        const filmGengres = checkGenreList(genre_ids, genres, release_date);\n\n        const { date, genresOfCurrentFilm } = filmGengres;\n\n        return ` <li class=\"film\">\n        <div class=\"film__thumb\">\n          <img data-id='${id}' class=\"film__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" />\n        </div>\n        <div class=\"film__wrap\">\n          <h2 class=\"film__title\">${title}</h2>\n          <p class=\"film__genres\">${genresOfCurrentFilm} | ${date}</p>\n        </div>\n      </li>`;\n      })\n      .join('');\n  }\n  // createLibraryFilmCardsMarkup(data) {\n  //   return data\n  //     .map(\n  //       ({}) =>\n  //         `\n\n  //   `\n  //     )\n  //     .join('');\n  // }\n  createModalFilmDetails(\n    {\n      poster_path,\n      title,\n      fixedGenres,\n      vote_count,\n      fixedVote,\n      fixedPopularity,\n      overview,\n    },\n    filmId\n  ) {\n    return `\n        <div class=\"film__modal\">\n        \n      <button class=\"film-modal__close\">X</button>\n    \n          <div class=\"film-modal__thumb\">\n          <img\n            class=\"film-modal__img\"\n            src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n            alt=\"${title}\"\n          />\n          </div>\n    \n          <div class=\"film-modal__text-wrap\">\n          <h2 class=\"film-modal__title\">${title}</h2>\n    \n          <ul class=\"film-modal__list-characteristic\">\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--vote\"\n                  >Vote / Votes</span\n                ><span class=\"characteristic__value characteristic__value--vote\">\n                <span class=\"characteristic__vote\">${fixedVote}</span> / \n                <span class=\"characteristic__vote characteristic__vote--count\">${vote_count}</span>\n                </span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--popularity\"\n                  >Popularity</span\n                ><span class=\"characteristic__value\">${fixedPopularity}</span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--title\"\n                  >Original Title</span\n                ><span class=\"characteristic__value\">${title}</span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--genre\"\n                  >Genre</span\n                ><span class=\"characteristic__value\">${fixedGenres}</span>\n              </p>\n            </li>\n          </ul>\n    \n          <h3 class=\"film-modal__about-film-title\">About</h3>\n          <p class=\"film-modal__about-film-text\"> ${overview}\n          </p>\n    \n          <button class=\"film-modal__trailer\" data-id=\"${filmId}\">Show trailer</button>\n    \n          <div class=\"film-modal__wrap-btn flex\">\n            <button class=\"film-modal__btn film-modal__btn--watched\">\n              add to Watched\n            </button>\n            <button class=\"film-modal__btn film-modal__btn--queue\">\n              add to queue\n            </button>\n          </div>\n         </div>\n        </div>\n    `;\n  }\n\n  createModalFilmTrailer(key) {\n    return `\n    <iframe class='film-modal__iframe' src=\"https://www.youtube.com/embed/${key}\" frameborder=\"0\"></iframe>\n`;\n  }\n  createModalWithoutFilmTrailer() {\n    return `<div class=\"empty\"><p class='empty__text'>Sorry, but this film don't have trailer :(</p></div>\n    `;\n  }\n  //1 - Enter your selector like: \".films-list\",\n  //2 - Enter true or false to activate innerHtml before insertAdjacentHTML\n  //3- Enter innerHtml value for default use -  ''\n  //4 - Enter insertAdjecentHtml type for default use - 'beforeend'\n  //5 - Enter createMarkup function that already has been created and put into parameters data as you need! like: { createMarkypFunc:  createMoreFi lmDetails(fetchToFilmsData()) }\n  renderMarkup({\n    selector,\n    innerHtml = false,\n    innerHTMLMarkup = '',\n    insAdHtmltype = 'beforeend',\n    createMarkypFunc,\n  }) {\n    const elem = document.querySelector(selector);\n    // console.log();\n    if (innerHtml) {\n      elem.innerHTML = innerHTMLMarkup;\n    }\n    elem.insertAdjacentHTML(insAdHtmltype, createMarkypFunc);\n  }\n}\n\nexport default RenderApi;\n//  <div class=\"example\">\n//\n// </div>;\n","import { getSearchedFilm } from '../main/searchMovie';\nimport { refs } from '../helpers/refsApiServ';\n\nexport default function getFilmSearchCheck(value) {\n  if (!value) {\n    getErrMessage({ addMessage: true });\n    return;\n  }\n\n  getErrMessage({ addMessage: false });\n  getSearchedFilm();\n}\n\nexport function getErrMessage({ addMessage }) {\n  if (!addMessage) {\n    return refs.searchError.classList.add('is-hidden');\n  }\n  return refs.searchError.classList.remove('is-hidden');\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport getFilmSearchCheck from '../checkers/filmSearchChecker';\nimport { refs } from '../helpers/refsApiServ';\nimport { getErrMessage } from '../checkers/filmSearchChecker';\nconst renderApi = new RenderApi();\n\nconst apiSearch = new FetchFilmsApi({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nrefs.form.addEventListener('submit', onSearchBtnClick);\n\nexport default function onSearchBtnClick(e) {\n  e.preventDefault();\n\n  const value = e.currentTarget.elements.search_user.value.trim();\n\n  apiSearch.actualQuery = value;\n  getFilmSearchCheck(value);\n\n  apiSearch.incrementPage({ step: 1 });\n}\n\nexport async function getSearchedFilm() {\n  const films = await apiSearch.getSearchFilmsData({});\n  const genresObj = await apiSearch.getGenresList({});\n  const genres = genresObj.data.genres;\n  const filmsArrLength = films.data.results.length;\n\n  if (!filmsArrLength) {\n    return getErrMessage({ addMessage: true });\n  }\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    innerHTMLMarkup: '',\n    insAdHtmltype: 'beforeend',\n    createMarkypFunc: markup,\n  });\n}\n","/*\n* Notiflix Loading AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // LOADING: Default Settings: begin\n  var typesLoading = {\r\n    Standard: 'Standard',\r\n    Hourglass: 'Hourglass',\r\n    Circle: 'Circle',\r\n    Arrows: 'Arrows',\r\n    Dots: 'Dots',\r\n    Pulse: 'Pulse',\r\n    Custom: 'Custom',\r\n    Notiflix: 'Notiflix',\r\n  };\r\n  var newLoadingSettings;\r\n  var loadingSettings = {\r\n    ID: 'NotiflixLoadingWrap', // can not customizable\r\n    className: 'notiflix-loading',\r\n    zindex: 4000,\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    rtl: false,\r\n    fontFamily: 'Quicksand',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    clickToClose: false,\r\n    customSvgUrl: null,\r\n    customSvgCode: null,\r\n    svgSize: '80px',\r\n    svgColor: '#32c682',\r\n    messageID: 'NotiflixLoadingMessage',\r\n    messageFontSize: '15px',\r\n    messageMaxLength: 34,\r\n    messageColor: '#dcdcdc',\r\n  };\n  // LOADING: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // LOADING && BLOCK: SVG Icon Standard: begin\n  var loadingAndBlockSvgIconStandard = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var standard = '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" transform=\"scale(.8)\" viewBox=\"0 0 38 38\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\" transform=\"translate(1 1)\"><circle cx=\"18\" cy=\"18\" r=\"18\" stroke-opacity=\".25\"/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" dur=\"1s\" from=\"0 18 18\" repeatCount=\"indefinite\" to=\"360 18 18\" type=\"rotate\"/></path></g></svg>';\r\n    return standard;\r\n  };\n  // LOADING && BLOCK: SVG Icon Standard: end\n\n  // LOADING && BLOCK: SVG Icon Hourglass: begin\n  var loadingAndBlockSvgIconHourglass = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var hourglass = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingHourglass\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 200 200\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\"true\" data-animator-type=\"1\" style=\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\"><g id=\"NXhourglass2\" fill=\"inherit\"><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass4\" d=\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\"/></g><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass6\" d=\"M100 100L65.62 67.92V36.78h68.76v31.14z\"/></g><path d=\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\"/></g></g></svg>';\r\n    return hourglass;\r\n  };\n  // LOADING && BLOCK: SVG Icon Hourglass: end\n\n  // LOADING && BLOCK: SVG Icon Circle: begin\n  var loadingAndBlockSvgIconCircle = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var circle = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"25 25 50 50\" style=\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:' + width + ';-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:' + width + ';position:absolute;top:0;left:0;margin:auto\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"' + color + '\" stroke-width=\"2\" style=\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\" stroke-dasharray=\"150 200\" stroke-dashoffset=\"-10\" stroke-linecap=\"round\"/></svg>';\r\n    return circle;\r\n  };\n  // LOADING && BLOCK: SVG Icon Circle: end\n\n  // LOADING && BLOCK: SVG Icon Arrows: begin\n  var loadingAndBlockSvgIconArrows = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var arrows = '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 128 128\"><g><path fill=\"inherit\" d=\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" from=\"0 64 64\" repeatCount=\"indefinite\" to=\"360 64 64\" type=\"rotate\"/></g></svg>';\r\n    return arrows;\r\n  };\n  // LOADING && BLOCK: SVG Icon Arrows: end\n\n  // LOADING && BLOCK: SVG Icon Dots: begin\n  var loadingAndBlockSvgIconDots = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var dots = '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 100 100\"><g transform=\"translate(25 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.239)\"><animateTransform attributeName=\"transform\" begin=\"-0.266s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(50 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.00152)\"><animateTransform attributeName=\"transform\" begin=\"-0.133s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(75 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.299)\"><animateTransform attributeName=\"transform\" begin=\"0s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g></svg>';\r\n    return dots;\r\n  };\n  // LOADING && BLOCK: SVG Icon Dots: end\n\n  // LOADING && BLOCK: SVG Icon Pulse: begin\n  var loadingAndBlockSvgIconPulse = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var pulse = '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 44 44\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>';\r\n    return pulse;\r\n  };\n  // LOADING && BLOCK: SVG Icon Pulse: end\n\n  // LOADING && BLOCK: SVG Icon Notiflix: begin\n  var loadingAndBlockSvgIconNotiflix = function (width, white, green) {\r\n    if (!width) { width = '60px'; }\r\n    if (!white) { white = '#f8f8f8'; }\r\n    if (!green) { green = '#32c682'; }\r\n    var notiflixIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingNotiflixLib\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 200 200\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:' + white + ';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\" style=\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\" fill=\"' + green + '\" stroke=\"' + green + '\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"22\" stroke-width=\"12\"/><path class=\"nx-icon-line\" d=\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\" style=\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/><path class=\"nx-icon-line\" d=\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\" style=\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/></svg>';\r\n    return notiflixIcon;\r\n  };\n  // LOADING && BLOCK: SVG Icon Notiflix: end\n\n  // LOADING: Get Internal CSS Codes: begin\n  var loadingGetInternalCSSCodes = function () {\r\n    var loadingCSS = '[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"] img,[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}';\r\n    return loadingCSS || null;\r\n  };\n  // LOADING: Get Internal CSS Codes: end\n\n  // LOADING: Create: begin\n  var loadingCreate = function (loadingType, messageOrOptions, options, display, delay) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newLoadingSettings) {\r\n      Notiflix.Loading.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newLoadingSettingsBackup = commonExtendOptions(true, newLoadingSettings, {});\r\n\n    // check \"messageOrOptions\" and \"options\": begin\r\n    if ((typeof messageOrOptions === 'object' && !Array.isArray(messageOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof messageOrOptions === 'object') {\r\n        newOptions = messageOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newOptions);\r\n    }\r\n    // check \"messageOrOptions\" and \"options\": end\r\n\n    // check the message\r\n    var message = '';\r\n    if (typeof messageOrOptions === 'string' && messageOrOptions.length > 0) {\r\n      message = messageOrOptions;\r\n    }\r\n\n    // show loading\r\n    if (display) {\r\n\n      // if message settings: begin\r\n      if (message.length > newLoadingSettings.messageMaxLength) {\r\n        message = commonGetPlaintext(message).toString().substring(0, newLoadingSettings.messageMaxLength) + '...';\r\n      } else {\r\n        message = commonGetPlaintext(message).toString();\r\n      }\r\n      var messageHTML = '';\r\n      if (message.length > 0) {\r\n        messageHTML = '<p id=\"' + newLoadingSettings.messageID + '\" class=\"nx-loading-message\" style=\"color:' + newLoadingSettings.messageColor + ';font-size:' + newLoadingSettings.messageFontSize + ';\">' + message + '</p>';\r\n      }\r\n      // if message settings: end\r\n\n      // if cssAnimaion is false => duration: begin\r\n      if (!newLoadingSettings.cssAnimation) {\r\n        newLoadingSettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\n      // svgIcon: begin\r\n      var svgIcon = '';\r\n      if (loadingType === typesLoading.Standard) {\r\n        svgIcon = loadingAndBlockSvgIconStandard(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Hourglass) {\r\n        svgIcon = loadingAndBlockSvgIconHourglass(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Circle) {\r\n        svgIcon = loadingAndBlockSvgIconCircle(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Arrows) {\r\n        svgIcon = loadingAndBlockSvgIconArrows(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Dots) {\r\n        svgIcon = loadingAndBlockSvgIconDots(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Pulse) {\r\n        svgIcon = loadingAndBlockSvgIconPulse(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        newLoadingSettings.customSvgCode !== null &&\r\n        newLoadingSettings.customSvgUrl === null\r\n      ) {\r\n        svgIcon = newLoadingSettings.customSvgCode || '';\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        newLoadingSettings.customSvgUrl !== null &&\r\n        newLoadingSettings.customSvgCode === null\r\n      ) {\r\n        svgIcon = '<img class=\"nx-custom-loading-icon\" width=\"' + newLoadingSettings.svgSize + '\" height=\"' + newLoadingSettings.svgSize + '\" src=\"' + newLoadingSettings.customSvgUrl + '\" alt=\"Notiflix\">';\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        (newLoadingSettings.customSvgUrl === null || newLoadingSettings.customSvgCode === null)\r\n      ) {\r\n        commonConsoleError('You have to set a static SVG url to \"customSvgUrl\" option to use Loading Custom.');\r\n        return false;\r\n      } else {\r\n        svgIcon = loadingAndBlockSvgIconNotiflix(newLoadingSettings.svgSize, '#f8f8f8', '#32c682');\r\n      }\r\n      var svgSizeAsDigit = parseInt((newLoadingSettings.svgSize || '').replace(/[^0-9]/g, ''));\r\n      var winWidth = window.innerWidth;\r\n      var maxSvgWidthPx = svgSizeAsDigit >= winWidth ? (winWidth - 40) + 'px' : svgSizeAsDigit + 'px';\r\n      var svgIconHTML = '<div style=\"width:' + maxSvgWidthPx + '; height:' + maxSvgWidthPx + ';\" class=\"' + newLoadingSettings.className + '-icon' + (message.length > 0 ? ' nx-with-message' : '') + '\">' + svgIcon + '</div>';\r\n      // svgIcon: end\r\n\n      // loading wrap: begin\r\n      var ntflxLoadingWrap = window.document.createElement('div');\r\n      ntflxLoadingWrap.id = loadingSettings.ID;\r\n      ntflxLoadingWrap.className = newLoadingSettings.className + (newLoadingSettings.cssAnimation ? ' nx-with-animation' : '') + (newLoadingSettings.clickToClose ? ' nx-loading-click-to-close' : '');\r\n      ntflxLoadingWrap.style.zIndex = newLoadingSettings.zindex;\r\n      ntflxLoadingWrap.style.background = newLoadingSettings.backgroundColor;\r\n      ntflxLoadingWrap.style.animationDuration = newLoadingSettings.cssAnimationDuration + 'ms';\r\n      ntflxLoadingWrap.style.fontFamily = '\"' + newLoadingSettings.fontFamily + '\", ' + defaultFontFamily;\r\n      ntflxLoadingWrap.style.display = 'flex';\r\n      ntflxLoadingWrap.style.flexWrap = 'wrap';\r\n      ntflxLoadingWrap.style.flexDirection = 'column';\r\n      ntflxLoadingWrap.style.alignItems = 'center';\r\n      ntflxLoadingWrap.style.justifyContent = 'center';\r\n\n      // rtl: begin\r\n      if (newLoadingSettings.rtl) {\r\n        ntflxLoadingWrap.setAttribute('dir', 'rtl');\r\n        ntflxLoadingWrap.classList.add('nx-rtl-on');\r\n      }\r\n      // rtl: end\r\n\n      // append: begin\r\n      ntflxLoadingWrap.innerHTML = svgIconHTML + messageHTML;\r\n\n      // if there is no loading element\r\n      if (!window.document.getElementById(ntflxLoadingWrap.id)) {\r\n        // append\r\n        window.document.body.appendChild(ntflxLoadingWrap);\r\n\n        // if click to close\r\n        if (newLoadingSettings.clickToClose) {\r\n          var loadingWrapElm = window.document.getElementById(ntflxLoadingWrap.id);\r\n          loadingWrapElm.addEventListener('click', function () {\r\n            ntflxLoadingWrap.classList.add('nx-remove');\r\n            var timeout = setTimeout(function () {\r\n              if (ntflxLoadingWrap.parentNode !== null) {\r\n                ntflxLoadingWrap.parentNode.removeChild(ntflxLoadingWrap);\r\n                clearTimeout(timeout);\r\n              }\r\n            }, newLoadingSettings.cssAnimationDuration);\r\n          });\r\n        }\r\n      }\r\n      // append: end\r\n    }\r\n    // remove loading\r\n    else {\r\n      // if there is a loading element\r\n      if (window.document.getElementById(loadingSettings.ID)) {\r\n        var loadingElm = window.document.getElementById(loadingSettings.ID);\r\n        var timeout = setTimeout(function () {\r\n          loadingElm.classList.add('nx-remove');\r\n          var timeout2 = setTimeout(function () {\r\n            if (loadingElm.parentNode !== null) {\r\n              loadingElm.parentNode.removeChild(loadingElm);\r\n              clearTimeout(timeout2);\r\n            }\r\n          }, newLoadingSettings.cssAnimationDuration);\r\n          clearTimeout(timeout);\r\n        }, delay);\r\n      }\r\n    }\r\n\n    // extend new settings with the backup settings\r\n    newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newLoadingSettingsBackup);\r\n  };\n  // LOADING: Create: end\n\n  // LOADING: Change Message: begin\n  var loadingChangeMessage = function (newMessage) {\r\n    // check the new message\r\n    if (typeof newMessage !== 'string') {\r\n      newMessage = '';\r\n    }\r\n    // if has any loading\r\n    var messageWrap = window.document.getElementById(loadingSettings.ID);\r\n    if (messageWrap) {\r\n      // if there is a new message\r\n      if (newMessage.length > 0) {\r\n        // max length: begin\r\n        if (newMessage.length > newLoadingSettings.messageMaxLength) {\r\n          newMessage = commonGetPlaintext(newMessage).substring(0, newLoadingSettings.messageMaxLength) + '...';\r\n        } else {\r\n          newMessage = commonGetPlaintext(newMessage);\r\n        }\r\n        // max length: end\r\n\n        // there is a message element\r\n        var oldMessageElm = messageWrap.getElementsByTagName('p')[0];\r\n        if (oldMessageElm) {\r\n          oldMessageElm.innerHTML = newMessage; // change the message\r\n        }\r\n        // there is no message element\r\n        else {\r\n          // create a new message element: begin\r\n          var newMessageHTML = window.document.createElement('p');\r\n          newMessageHTML.id = newLoadingSettings.messageID;\r\n          newMessageHTML.className = 'nx-loading-message nx-loading-message-new';\r\n          newMessageHTML.style.color = newLoadingSettings.messageColor;\r\n          newMessageHTML.style.fontSize = newLoadingSettings.messageFontSize;\r\n          newMessageHTML.innerHTML = newMessage;\r\n          messageWrap.appendChild(newMessageHTML);\r\n          // create a new message element: end\r\n        }\r\n      }\r\n      // if no message\r\n      else {\r\n        commonConsoleError('Where is the new message?');\r\n      }\r\n    }\r\n  };\n  // LOADING: Change Message: end\n\n  var Notiflix = {\n    Loading: {\r\n      // Init\r\n      init: function (userLoadingOptions) {\r\n        // extend options\r\n        newLoadingSettings = commonExtendOptions(true, loadingSettings, userLoadingOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(loadingGetInternalCSSCodes, 'NotiflixLoadingInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userLoadingExtendOptions) {\r\n        // if initialized already\r\n        if (newLoadingSettings) {\r\n          newLoadingSettings = commonExtendOptions(true, newLoadingSettings, userLoadingExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Loading module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Standard\r\n      standard: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Standard, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Hourglass\r\n      hourglass: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Hourglass, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Circle\r\n      circle: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Circle, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Arrows\r\n      arrows: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Arrows, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Dots\r\n      dots: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Dots, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Pulse\r\n      pulse: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Pulse, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Custom\r\n      custom: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Custom, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Notiflix\r\n      notiflix: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Notiflix, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Remove\r\n      remove: function (delay) {\r\n        if (typeof delay !== 'number') { delay = 0; }\r\n        loadingCreate(null, null, null, false, delay); // false => hide/remove\r\n      },\r\n      // Change The Message\r\n      change: function (newMessage) {\r\n        loadingChangeMessage(newMessage);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Loading: Notiflix.Loading });\n  } else {\n    return { Loading: Notiflix.Loading };\n  }\n\n});","import { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nclass SpinneroOnLoadingApi {\n  constructor({\n    label = 'Loading',\n    options = {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      svgColor: '#FF6B08',\n    },\n  }) {\n    this.label = label;\n    this.options = options;\n    this.intervalId = null;\n  }\n  enabled({ timeDelay = 20, delayAfterStop = 400 }) {\n    Loading.arrows(this.label, this.options);\n    this.percentageLoading(timeDelay, delayAfterStop);\n  }\n  disabled(delayAfterStop) {\n    clearInterval(this.intervalId);\n    Loading.remove(delayAfterStop);\n  }\n  percentageLoading(timeDelay, delayAfterStop) {\n    let count = 0;\n    const limit = 100;\n    this.intervalId = setInterval(() => {\n      Loading.change(`${this.label} ${(count += 1)}%`);\n\n      if (count === limit) {\n        Loading.change('Ready!');\n        this.disabled(delayAfterStop);\n      }\n    }, timeDelay);\n  }\n}\nexport default SpinneroOnLoadingApi;\n","import SpinneroOnLoadingApi from '../helpers/spinnerApi';\n\nexport const spinnerOnMain = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nexport const spinnerOnList = new SpinneroOnLoadingApi({});\n","import { refs } from '../helpers/refsApiServ';\n\nexport function createPages(page, totalPages) {\n  let beforeContainer = ``;\n  let afterContainer = ``;\n\n  // Before\n  if (page >= 5) {\n    beforeContainer += `<div class=\"numb numb--first-page\" data-numb-id='1'>1</div>`;\n  }\n\n  if (page === 4 || page === 5) {\n    beforeContainer += `<div class=\"numb dots\" data-numb-id='${page - 3}'>${\n      page - 3\n    }</div>`;\n  } else if (page >= 6) {\n    beforeContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page >= 3) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 2}'>${\n      page - 2\n    }</div>`;\n  }\n\n  if (page >= 2) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 1}'>${\n      page - 1\n    }</div>`;\n  }\n\n  // After\n  if (page <= totalPages - 1) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 1}'>${\n      page + 1\n    }</div>`;\n  }\n\n  if (page <= totalPages - 2) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 2}'>${\n      page + 2\n    }</div>`;\n  }\n\n  if (page === totalPages - 3 || page === totalPages - 4) {\n    afterContainer += `<div class=\"numb dots\" data-numb-id='${page + 3}'>${\n      page + 3\n    }</div>`;\n  } else if (page <= totalPages - 5) {\n    afterContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page <= totalPages - 4) {\n    afterContainer += `<div class=\"numb numb--last-page\" data-numb-id='${totalPages}'>${totalPages}</div>`;\n  }\n\n  // DOM\n  refs.beforeCurPageContainer.innerHTML = beforeContainer;\n  refs.afterCurPageContainer.innerHTML = afterContainer;\n}\n","import { fetchApi } from '../main';\nimport { renderApi } from '../main';\nimport { createPages } from '../pagination/createPages';\n\nexport async function renderMarkup() {\n  const genresObj = await fetchApi.getGenresList({});\n  const genres = genresObj.data.genres;\n\n  const films = await fetchApi.getAllFilmsData({});\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    createMarkypFunc: markup,\n  });\n\n  createPages(fetchApi.actualPage, fetchApi.totalPages);\n}\n","export function checkFilmTrailer(trailers) {\n  const findTrailer = trailers.find(video => video.type === 'Trailer');\n\n  return findTrailer === undefined ? trailers[0] : findTrailer;\n}\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));","import * as basicLightbox from 'basiclightbox';\nimport RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport { checkFilmTrailer } from '../checkers/filmTrailerChecker';\n\nconst fetchApi = new FetchFilmsApi();\nconst renderApi = new RenderApi();\n\nexport default async function onShowTrailer(e) {\n  const idTrailer = e.currentTarget.dataset.id;\n\n  const showTrailersRequest = await fetchApi.getFilmTrailerById({\n    id: idTrailer,\n  });\n\n  const showTrailers = showTrailersRequest.data.results;\n\n  if (showTrailers.length === 0) {\n    const instance = basicLightbox.create(\n      renderApi.createModalWithoutFilmTrailer()\n    );\n\n    instance.show();\n\n    document.addEventListener('keydown', onPressEsc, { once: true });\n\n    function onPressEsc(e) {\n      if (e.code !== 'Escape') {\n        return;\n      }\n\n      instance.close();\n    }\n\n    return;\n  }\n\n  const trailer = checkFilmTrailer(showTrailers);\n\n  const instance = basicLightbox.create(\n    renderApi.createModalFilmTrailer(trailer.key)\n  );\n\n  instance.show();\n\n  document.addEventListener('keydown', onPressEsc, { once: true });\n\n  function onPressEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    instance.close();\n  }\n}\n","export function checkFilmDetailes({\n  poster_path,\n  title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const fixedGenres = genres[0].name;\n\n  const roundVote = !Number.isInteger(vote_average)\n    ? vote_average.toFixed(1)\n    : String(vote_average);\n\n  const fixedVote = roundVote.includes('.0')\n    ? roundVote.replace('.0', '')\n    : roundVote;\n\n  const roundPopularity = !Number.isInteger(popularity)\n    ? popularity.toFixed(1)\n    : String(popularity);\n\n  const fixedPopularity = roundPopularity.includes('.0')\n    ? roundPopularity.replace('.0', '')\n    : roundPopularity;\n\n  return {\n    poster_path,\n    title,\n    fixedGenres,\n    vote_count,\n    fixedVote,\n    fixedPopularity,\n    overview,\n  };\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport * as basicLightbox from 'basiclightbox';\nimport onShowTrailer from './showTrailer';\nimport { checkFilmDetailes } from '../checkers/filmDetailesChecker';\n\nconst fetchApi = new FetchFilmsApi();\nconst renderApi = new RenderApi();\n\nexport async function onShowFilmModal(event) {\n  if (!event.target.classList.contains('film__img')) {\n    return;\n  }\n\n  document.body.style.overflow = 'hidden';\n\n  event.currentTarget.removeEventListener('click', onShowFilmModal);\n\n  const filmId = event.target.dataset.id;\n\n  const moreInfo = await fetchApi.getCurrentFilm({ id: filmId });\n\n  const moreInfoObj = checkFilmDetailes(moreInfo.data);\n\n  const instance = basicLightbox.create(\n    renderApi.createModalFilmDetails(moreInfoObj, filmId),\n    {\n      onShow: instance => {\n        instance.element().querySelector('.film-modal__close').onclick =\n          instance.close;\n      },\n\n      onClose: instance => {\n        document.body.style.overflow = 'visible';\n        event.target\n          .closest('.films__list')\n          .addEventListener('click', onShowFilmModal);\n      },\n    }\n  );\n\n  instance.show();\n\n  document.addEventListener('keydown', onPressEsc, { once: true });\n\n  function onPressEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    instance.close();\n  }\n\n  // Trailer\n  const trailerBtn = document.querySelector('.film-modal__trailer');\n  trailerBtn.addEventListener('click', onShowTrailer);\n  //\n}\n","import { refs } from './refsApiServ';\n\nrefs.themeBtnRef.addEventListener('click', themeChange);\n\nexport function themeChange() {\n  const isLight =\n    refs.themeBtnRef.getAttribute('data-current') === 'true' || false;\n    \n  refs.themeBtnRef.setAttribute('data-current', !isLight);\n\n  localStorage.setItem('light', JSON.stringify(isLight));\n  \n\n  let localTems = localStorage.getItem('light')    \n  \n  if (localTems === 'false') {\n      document.body.classList.add('dark-theme');\n      refs.lightIconRef.classList.remove('is-hidden'); \n      refs.darkIconRef.classList.add('is-hidden');\n  } else {\n      document.body.classList.remove('dark-theme');\n      refs.darkIconRef.classList.remove('is-hidden');\n      refs.lightIconRef.classList.add('is-hidden'); \n  }\n}\n\nlet localTems = localStorage.getItem('light')\n if (localTems === 'false') {\n      themeChange()\n}","import './backend'\nimport FetchFilmsApi from './helpers/fetchFilmsApi';\nimport RenderApi from './helpers/renderFuncApi';\nimport searchMovie from './main/searchMovie';\nimport { spinnerOnMain } from './spinner/spinner';\nimport { renderMarkup } from './main/renderMainMarkup';\nimport { onShowFilmModal } from './modals/filmDetailsModal';\nimport { refs } from './helpers/refsApiServ';\nimport { onCreatePagination } from './pagination/pagination';\n\nimport { themeChange } from './helpers/changeTheme';\n// Class\nexport const fetchApi = new FetchFilmsApi();\nexport const renderApi = new RenderApi();\n\n// First render\nspinnerOnMain.enabled({ timeDelay: 12, delayAfterStop: 400 });\nrenderMarkup();\n\n// Modal film\nrefs.filmList.addEventListener('click', onShowFilmModal);\n\n// Pagination\nrefs.pagRef.addEventListener('click', onCreatePagination);\n","import { refs } from '../helpers/refsApiServ';\n\nrefs.btnOpenRef.addEventListener('click', onBtnToggle);\nrefs.btnCloseRef.addEventListener('click', onBtnToggle);\nrefs.body.addEventListener('keydown', onModalKeydown);\nrefs.teamModal.addEventListener('click', onBackdropClose);\n\nfunction onToggle() {\n  refs.teamModal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n}\n\nfunction onBtnToggle() {\n  onToggle();\n}\n\nfunction onBackdropClose(e) {\n  if (!e.target.classList.contains('backdrop')) {\n    return;\n  }\n  onToggle();\n}\n\nfunction onModalKeydown(e) {\n  if (refs.teamModal.classList.contains('is-hidden')) {\n    return;\n  }\n  if (e.code === 'Escape') {\n    onToggle();\n  }\n\n  refs.teamModal.removeEventListener('click', onBackdropClose);\n}\n","import { fetchApi } from '../main';\nimport { renderMarkup } from '../main/renderMainMarkup';\nimport { refs } from '../helpers/refsApiServ';\n\nexport function onCreatePagination(e) {\n  const currentPage = refs.currentPage;\n  const nextPage = refs.nextPage;\n  const prevPage = refs.prevPage;\n\n  // Numb page\n  if (e.target.dataset.numbId) {\n    fetchApi.actualPage = Number(e.target.dataset.numbId);\n  }\n\n  // Prev page\n\n  if (e.target.dataset.id === 'prev') {\n    if (fetchApi.actualPage === 1) {\n      return;\n    }\n\n    fetchApi.actualPage -= 1;\n  }\n\n  // Next page\n  if (e.target.dataset.id === 'next') {\n    if (fetchApi.actualPage === fetchApi.totalPages) {\n      return;\n    }\n\n    fetchApi.actualPage += 1;\n  }\n\n  // Toggle disable on next or prev page\n\n  if (fetchApi.actualPage === fetchApi.totalPages) {\n    nextPage.classList.add('disabled');\n  } else if (nextPage.classList.contains('disabled')) {\n    nextPage.classList.remove('disabled');\n  }\n\n  if (fetchApi.actualPage === 1) {\n    prevPage.classList.add('disabled');\n  } else {\n    prevPage.classList.remove('disabled');\n  }\n\n  // Рендер сторінки\n  renderMarkup();\n  currentPage.innerHTML = fetchApi.actualPage;\n}\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$exports","$391299e0893a3dfa$var$defaultSetTimout","Error","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","setTimeout","e","this","clearTimeout","e1","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","length","concat","$391299e0893a3dfa$var$drainQueue","timeout","len","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","array","$391299e0893a3dfa$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$b197424204fd80b4$export$588c7fdda06fbb0a","assertion","message","$b197424204fd80b4$export$a39cad550e7ab28a","$b197424204fd80b4$var$stringToByteArray$1","str","out","p","c","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","stringToByteArray","c2","u","c3","$b197424204fd80b4$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","charAt","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$b197424204fd80b4$export$e510a73ee562749","utf8Bytes","$b197424204fd80b4$export$b3b2de96497acc47","$b197424204fd80b4$export$4b5284a3025a455","replace","$b197424204fd80b4$export$c62426fdd000a97e","console","error","$b197424204fd80b4$export$6c40052bed430212","$b197424204fd80b4$export$54e9fb29908872fa","undefined","target","source","constructor","Date","prop","hasOwnProperty","$b197424204fd80b4$export$c36915b22ce77c19","navigator","$b197424204fd80b4$export$872f8323f01d7ae0","window","test","$b197424204fd80b4$export$5d1d834fbbf8bab7","$b197424204fd80b4$export$3865db50535c2055","indexedDB","$b197424204fd80b4$var$getDefaultsFromGlobal","self","$parcel$global","$b197424204fd80b4$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$b197424204fd80b4$var$getDefaults","$b197424204fd80b4$var$getDefaultsFromEnvVariable","document","match","cookie","decoded","JSON","parse","$b197424204fd80b4$var$getDefaultsFromCookie","info","productName","_a","_b","emulatorHosts","separatorIndex","host","port","parseInt","substring","$b197424204fd80b4$export$85f6557964517f1a","wrapCallback","callback","reject","resolve","promise","catch","Promise","$b197424204fd80b4$export$367bf224123348f1","token","projectId","uid","iat","sub","user_id","payload","assign","project","exp","auth_time","sign_in_provider","identities","stringify","type","code","customData","setPrototypeOf","$b197424204fd80b4$export$dd24e9cd51226c56","captureStackTrace","data","template","$b197424204fd80b4$var$PATTERN","_","key","service","serviceName","errors","$b197424204fd80b4$export$c5a53ce6a17cf18d","$b197424204fd80b4$export$fac44ee5b035f737","$b197424204fd80b4$export$2f872c0f2117be69","header","claims","signature","parts","split","$b197424204fd80b4$export$2344b14b097df817","$b197424204fd80b4$export$dd1bc94b04021eeb","$b197424204fd80b4$export$871de8747c9eaa88","fn","contextObj","res","$b197424204fd80b4$export$9cb4719e2e525b7a","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","$b197424204fd80b4$var$isObject","$307d2bd0b522285b$export$16fa2f45be04daa8","mode","instantiationMode","multipleInstances","props","serviceProps","onInstanceCreated","instanceFactory","$307d2bd0b522285b$var$DEFAULT_ENTRY_NAME","$307d2bd0b522285b$export$2881499e37b75b9a","instancesDeferred","normalizedIdentifier","deferred","isInitialized","shouldAutoInitialize","normalizeInstanceIdentifier","options","identifier","optional","component","$307d2bd0b522285b$var$isComponentEager","getOrInitializeService","instanceIdentifier","instanceDeferred","entries","instance","delete","instancesOptions","instances","services","from","values","all","filter","map","INTERNAL","_delete","opts","isComponentSet","onInit","existingCallbacks","onInitCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","container","$577b55f579ec2041$var$instances","$577b55f579ec2041$export$243e62d78d3b544d","LogLevel1","$577b55f579ec2041$var$levelStringToEnum","DEBUG","VERBOSE","INFO","ERROR","SILENT","$577b55f579ec2041$var$defaultLogLevel","$577b55f579ec2041$var$ConsoleMethod","WARN","$577b55f579ec2041$var$defaultLogHandler","logType","logLevel","now","toISOString","method","_logLevel","val","logHandler","_logHandler","userLogHandler","_userLogHandler","$a6f488ce4cf7dbe7$var$idbProxyableTypes","$a6f488ce4cf7dbe7$var$cursorAdvanceMethods","$a6f488ce4cf7dbe7$var$cursorRequestMap","WeakMap","$a6f488ce4cf7dbe7$var$transactionDoneMap","$a6f488ce4cf7dbe7$var$transactionStoreNamesMap","$a6f488ce4cf7dbe7$var$transformCache","$a6f488ce4cf7dbe7$export$407448d2b89b1813","$a6f488ce4cf7dbe7$var$idbProxyTraps","IDBTransaction","objectStoreNames","objectStore","$a6f488ce4cf7dbe7$export$efccba1c4a2ef57b","$a6f488ce4cf7dbe7$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$a6f488ce4cf7dbe7$export$3b14a55fb2447963","storeNames","tx","sort","$a6f488ce4cf7dbe7$var$transformCachableValue","done","unlisten","removeEventListener","complete","DOMException","addEventListener","$a6f488ce4cf7dbe7$var$cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","request","success","result","then","$a6f488ce4cf7dbe7$var$promisifyRequest","newValue","$92f73a92431170de$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","open","openPromise","event","oldVersion","newVersion","db","$92f73a92431170de$var$readMethods","$92f73a92431170de$var$writeMethods","$92f73a92431170de$var$cachedMethods","Map","$92f73a92431170de$var$getMethod","target1","targetFuncName","useIndex","isWrite","async","storeName","store","index","shift","oldTraps","$d7defabc17f02990$var$PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","getImmediate","databaseCompatName","$577b55f579ec2041$export$efa9a398d6368992","$d7defabc17f02990$export$9f30fa0c10967f7f","$d7defabc17f02990$var$PLATFORM_LOG_STRING","$d7defabc17f02990$var$name$o","$d7defabc17f02990$export$b4e3c36c855b14b5","$d7defabc17f02990$export$fa5244b94c62d36a","app","addComponent","$d7defabc17f02990$var$logger","debug","$d7defabc17f02990$export$c930050e7bb63965","componentName","$d7defabc17f02990$export$9566bce3835c0f28","$d7defabc17f02990$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","triggerHeartbeat","$d7defabc17f02990$var$ERROR_FACTORY","$b197424204fd80b4$export$3fa6e1b18a3b2d40","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","_name","_options","config","_config","_container","isDeleted","_isDeleted","create","rawConfig","name4","existingApp","$307d2bd0b522285b$export$436a80eea5d5c0c5","newApp","$d7defabc17f02990$var$FirebaseAppImpl","name5","$d7defabc17f02990$export$c55cfd413944906d","library","libraryKeyOrName","variant","version1","versionMismatch","libraryMismatch","warning","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$668b2310913a4fe8$var$SDK_VERSION","$668b2310913a4fe8$var$DOMStorageWrapper","domStorage_","removeItem","prefixedName_","storedVal","getItem","remove","prefix_","toString","$668b2310913a4fe8$var$MemoryStorage","cache_","isInMemoryStorage","$668b2310913a4fe8$var$createStoragefor","domStorageName","domStorage","$668b2310913a4fe8$var$PersistentStorage","$668b2310913a4fe8$var$SessionStorage","id","$668b2310913a4fe8$var$sha1","$b197424204fd80b4$export$655666783217a925","sha11","$b197424204fd80b4$export$c85d589bf4e25fef","digest","sha1Bytes","$668b2310913a4fe8$var$buildLogMessage_","varArgs","arg","$668b2310913a4fe8$var$firstLog_","$668b2310913a4fe8$var$enableLogging$1","logger_","persistent","$b197424204fd80b4$export$a7a9523472993e97","$668b2310913a4fe8$var$logClient","$668b2310913a4fe8$var$logger","log","bind","$668b2310913a4fe8$var$log","$668b2310913a4fe8$var$logWrapper","prefix","warn","$668b2310913a4fe8$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$668b2310913a4fe8$var$MIN_NAME","$668b2310913a4fe8$var$MAX_NAME","$668b2310913a4fe8$var$nameCompare","bAsInt","aAsInt","$668b2310913a4fe8$var$requireKey","$668b2310913a4fe8$var$ObjectToUniqueKey","$668b2310913a4fe8$var$splitStringBySize","segsize","dataSegs","$668b2310913a4fe8$var$each","v","bias","s","f","ln","Infinity","Math","abs","min","floor","LN2","round","pow","bits","reverse","hexByteString","hexByte","substr","toLowerCase","$668b2310913a4fe8$var$INTEGER_REGEXP_","RegExp","$668b2310913a4fe8$var$tryParseInt","intVal","$668b2310913a4fe8$var$exceptionGuard","stack","$668b2310913a4fe8$var$warn","$668b2310913a4fe8$var$setTimeoutNonBlocking","time","Deno","unrefTimer","appCheck","getToken","forceRefresh","listener","appCheckProvider","addTokenListener","notifyForInvalidToken","appName_","auth_","error2","firebaseOptions_","errorMessage","authProvider_","auth","$668b2310913a4fe8$var$EmulatorTokenProvider","accessToken","removeTokenChangeListener","OWNER","$668b2310913a4fe8$var$LONG_POLLING","$668b2310913a4fe8$var$RepoInfo","internalHost","newHost","isCacheableHost","_host","toURLString","persistenceKey","protocol","secure","query2","includeNamespaceInQueryParams","namespace","webSocketOnly","nodeAdmin","_domain","indexOf","$668b2310913a4fe8$var$repoInfoConnectionURL","repoInfo","params","connURL","$668b2310913a4fe8$var$WEBSOCKET","pairs","counters_","name2","amount","hashString","$668b2310913a4fe8$var$collections","$668b2310913a4fe8$var$StatsCollection","responseNum","closeAfterResponse","onClose","requestNum","pendingResponses","currentResponseNum","toProcess","onMessage_","curSegmentNum","onDisconnect1","$668b2310913a4fe8$var$PacketReceiver","onMessage","isClosed_","connectTimeoutTimer_","log_","onClosed_","readyState","wrappedFn","body","called","attachEvent","scriptTagHolder","$668b2310913a4fe8$var$FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","everConnected_","$668b2310913a4fe8$var$FIREBASE_LONGPOLL_START_PARAM","password","sendNewPolls","myPacketOrderer","closeAfter","handleResponse","pN","urlFn","random","uniqueCallbackIdentifier","urlParams","$668b2310913a4fe8$var$PROTOCOL_VERSION","connectURL","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","$668b2310913a4fe8$var$BrowserPollConnection","createElement","location","href","Windows","UI","myDisconnFrame","removeChild","shutdown_","onDisconnect_","bytesSent","dataStr","stats_","incrementCounter","base64data","enqueueSegment","pw","src","style","display","appendChild","bytesReceived","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","$668b2310913a4fe8$var$statsManagerGetCollection","$668b2310913a4fe8$var$APP_CHECK_TOKEN_PARAM","static","iframe","contentWindow","domain","contentDocument","doc","alive","myIFrame","innerHTML","onDisconnect2","onDisconnect","myID","myPW","newRequest_","outstandingRequests","size","pendingSegs","currentSerial","theURL","curDataString","d","theSeg","seg","ts","segnum","totalsegs","url","serial","keepaliveTimeout","doNewRequest","addTag","doNodeLongPoll","loadCB","newScript","onload","onreadystatechange","rstate","commandCB","onMessageCB","onDisconnect3","$668b2310913a4fe8$var$LUIDGenerator","createIFrame_","script","iframeContents","$668b2310913a4fe8$var$WebSocketImpl","MozWebSocket","WebSocket","$668b2310913a4fe8$var$WebSocketConnection","hostname","$668b2310913a4fe8$var$FORGE_DOMAIN_RE","onDisconnect4","headers","platform","device","proxy","origin","mySock","error3","onopen","onclose","onmessage","m","handleIncomingFrame","error4","isOldAndroid","userAgent","oldAndroidMatch","oldAndroidRegex","parseFloat","appendFrame_","frames","jsonMess","fullMess","frameCount","totalFrames","isNaN","handleNewFrameCount_","mess","resetKeepAlive","remainingData","extractFrameCount_","sendString_","keepaliveTimer","clearInterval","setInterval","send","responsesRequiredToBeHealthy","healthyTimeout","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","$668b2310913a4fe8$var$TransportManager","ALL_TRANSPORTS","initialTransport","upgradeTransport","$668b2310913a4fe8$var$Connection","start_","conn","transportManager_","conn_","nextTransportId_","repoInfo_","applicationId_","appCheckToken_","authToken_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","healthyTimeoutMS","healthyTimeout_","isHealthy_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","msg","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","pendingDataMessages","t","proceedWithUpgrade_","start","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","onHandshake_","onConnectionShutdown_","onReset_","$668b2310913a4fe8$var$error","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version2","onConnectionEstablished_","tryStartUpgrade_","sessionId","onDisconnect5","closeConnections_","onReady_","reason","onKill_","$668b2310913a4fe8$var$ServerActions","pathString","onComplete","hash","refreshAuthToken","stats","eventType","listeners_","context","validateEventType_","eventData","getInitialEvent","splice","allowedEvents_","find","et","$668b2310913a4fe8$var$EventEmitter","$668b2310913a4fe8$var$OnlineMonitor","online_","trigger","pieceNum_","pieces_","pathOrString","pieceNum","copyTo","$668b2310913a4fe8$var$newEmptyPath","$668b2310913a4fe8$var$Path","$668b2310913a4fe8$var$pathGetFront","path","pieces","childPathObj","childPieces","$668b2310913a4fe8$var$pathIsEmpty","$668b2310913a4fe8$var$newRelativePath","outerPath","innerPath","outer","inner","$668b2310913a4fe8$var$pathPopFront","$668b2310913a4fe8$var$pathEquals","other","$668b2310913a4fe8$var$pathGetLength","j","$668b2310913a4fe8$var$pathContains","$668b2310913a4fe8$var$ValidationPath","errorPrefix_","parts_","$668b2310913a4fe8$var$pathSlice","byteLength_","max","$b197424204fd80b4$export$9536dc0a75b20bf9","$668b2310913a4fe8$var$validationPathCheckValid","validationPath","$668b2310913a4fe8$var$validationPathToErrorString","$668b2310913a4fe8$var$VisibilityMonitor","visible_","hidden","super","visibilityChange","visible","$668b2310913a4fe8$var$RECONNECT_MIN_DELAY","requestNumber_","curReqNum","connected_","realtime_","sendRequest","onResponse","requestCBHash_","query3","initConnection_","outstandingGet","_path","q","_queryObject","outstandingGets_","outstandingGetCount_","sendGet_","query4","currentHashFn","tag","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","query","sendListen_","get1","query5","req","hashFn","status","$668b2310913a4fe8$var$PersistentConnection","warnOnListenWarnings_","removeListen_","query6","warnings","$b197424204fd80b4$export$e51ae4db7b428f67","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","$b197424204fd80b4$export$fc970ed23da99565","maxReconnectDelay_","refreshAppCheckToken","tryAppCheck","authMethod","$b197424204fd80b4$export$9565ca3d387f8aa0","requestData","cred","authOverride_","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query7","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","onDisconnectCancel","response","putInternal","outstandingPuts_","outstandingPutCount_","setMaxNode","MAX_NODE","sendPut_","queued","reportStats","errorReason","reqNum","onDataUpdate_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","onConnectStatus_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","onRealtimeDisconnect_","cancelSentTransactions_","timeSinceLastConnectAttempt","lastConnectionAttemptTime_","reconnectDelay","shouldReconnect_","onDataMessage","onReady","onDisconnect6","nextConnectionId_","connection","closeFn","canceled","sendRequestFn","nodeFromJSON","forceTokenRefresh_","authTokenProvider_","appCheckTokenProvider_","interrupt","error5","interruptReasons_","delta","onServerInfoUpdate_","put","query8","listen","normalizedPathString","map1","statusCode","explanation","securityDebugCallback_","queries","i2","clientName","getInstance","currentlyOnline","nextPersistentConnectionId_","onVisible_","onOnline_","$668b2310913a4fe8$var$NamedNode","name3","node","$668b2310913a4fe8$var$Index","compare","indexedValueChanged","oldNode","newNode","newWrapped","oldWrapped","MIN","__EMPTY_NODE","$668b2310913a4fe8$var$__EMPTY_NODE","indexValue","$668b2310913a4fe8$var$KeyIndex","nodeStack_","pop","resultGenerator_","isReverse_","left","isEmpty","right","startKey","comparator","cmp","$668b2310913a4fe8$var$LLRBNode","copy","color","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","$668b2310913a4fe8$var$SortedMap","EMPTY_NODE","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","RED","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","rightParent","getIterator","resultGenerator","$668b2310913a4fe8$var$SortedMapIterator","$668b2310913a4fe8$var$NAME_ONLY_COMPARATOR","$668b2310913a4fe8$var$MAX_NODE$2","priority","$668b2310913a4fe8$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$668b2310913a4fe8$var$__childrenNodeConstructor","$668b2310913a4fe8$var$LeafNode","__childrenNodeConstructor","priorityNode_","updatePriority","newPriorityNode","value_","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","lazyHash_","toHash","$668b2310913a4fe8$var$priorityHashText","$668b2310913a4fe8$var$doubleToIEEE754String","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","aPriority","bPriority","indexCmp","$668b2310913a4fe8$var$MAX_NODE$1","$668b2310913a4fe8$var$nodeFromJSON$1","bits_","current_","num","$668b2310913a4fe8$var$LOG_2","mask","childList","keyFn","mapSortFn","low","high","namedNode","middle","buildBalancedTree","root1","root","buildPennant","chunkSize","childTree","attachPennant","pennant","base12","isOne","nextBitIsOne","buildFrom12Array","$668b2310913a4fe8$var$Base12Num","Default","$668b2310913a4fe8$var$fallbackObject","$668b2310913a4fe8$var$PRIORITY_INDEX","$668b2310913a4fe8$var$_defaultIndexMap","$668b2310913a4fe8$var$IndexMap","indexKey","sortedMap","indexes_","indexDefinition","indexSet_","existingChildren","$668b2310913a4fe8$var$KEY_INDEX","sawIndexedValue","iter","Wrap","newIndex","next","getNext","isDefinedOn","$668b2310913a4fe8$var$buildChildSet","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","$668b2310913a4fe8$var$ChildrenNode","$668b2310913a4fe8$var$EMPTY_NODE","$668b2310913a4fe8$var$NAME_COMPARATOR","children_","indexMap_","child2","hasChild","newIndexMap","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChild","getFirstChildName","getLastChild","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","$668b2310913a4fe8$var$MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","$668b2310913a4fe8$var$nodeFromJSON","json","childData","children","childrenHavePriority","child3","childSet","sortedChildSet","$668b2310913a4fe8$var$PathIndex","extractChild","snap","indexPath_","aChild","bChild","name6","valueNode","MAX","makePost","name7","$668b2310913a4fe8$var$changeValue","snapshotNode","$668b2310913a4fe8$var$changeChildAdded","$668b2310913a4fe8$var$changeChildRemoved","$668b2310913a4fe8$var$changeChildChanged","oldSnap","newChild","affectedPath","optChangeAccumulator","index_","oldChild","trackChildChange","newSnap","$668b2310913a4fe8$var$RangedFilter","getStartPost","isWithinStart","startIsInclusive_","filtered","matches","indexedFilter_","updateFullNode","filtersNodes","getIndexedFilter","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$668b2310913a4fe8$var$IndexedFilter","startPost_","getStartPost_","endPost_","getEndPost_","startAfterSet_","endIsInclusive_","endBeforeSet_","$668b2310913a4fe8$var$LimitedFilter","rangedFilter_","limit_","fullLimitUpdateChild_","reverse_","getEndPost","hasNext","withinDirectionalStart","withinDirectionalEnd","getReverseIterator","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","withinEndPost","withinStartPost","compareRes","getLimit","isViewFromLeft","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","hasLimit","limitSet_","hasAnchoredLimit","$668b2310913a4fe8$export$7ba287e361c94330","$668b2310913a4fe8$var$queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","$668b2310913a4fe8$var$VALUE_INDEX","startParam","endParam","viewFrom","$668b2310913a4fe8$var$ReadonlyRestClient","query9","query10","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","error6","query11","query12","error7","referenceConstructor","$b197424204fd80b4$export$ac4103b836844853","xhr","XMLHttpRequest","responseText","rootNode_","newSnapshotNode","$668b2310913a4fe8$var$newSparseSnapshotTree","$668b2310913a4fe8$var$sparseSnapshotTreeRemember","sparseSnapshotTree","clear","$668b2310913a4fe8$var$sparseSnapshotTreeForEachTree","prefixPath","forEach","tree","$668b2310913a4fe8$var$StatsListener","newStats","collection_","last_","stat","statsListener_","statsToReport_","haveStatsToReport","server_","reportedStats","reportStats_","collection","$668b2310913a4fe8$var$OperationType","OperationType1","$668b2310913a4fe8$var$newOperationSourceServerTaggedQuery","fromUser","tagged","$668b2310913a4fe8$var$AckUserWrite","affectedTree","subtree","revert","ACK_USER_WRITE","fromServer","$668b2310913a4fe8$var$ListenComplete","LISTEN_COMPLETE","$668b2310913a4fe8$var$Overwrite","$668b2310913a4fe8$var$Merge","operationForChild","fullyInitialized_","isFiltered","filtered_","isCompleteForPath","isFullyInitialized","isCompleteForChild","node_","$668b2310913a4fe8$var$EventGenerator","query_","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","$668b2310913a4fe8$var$eventGeneratorCompareChanges","materializedChange","prevName","$668b2310913a4fe8$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$668b2310913a4fe8$var$newViewCache","serverCache","viewCache","eventSnap","$668b2310913a4fe8$var$CacheNode","$668b2310913a4fe8$var$viewCacheUpdateServerSnap","serverSnap","$668b2310913a4fe8$var$viewCacheGetCompleteEventSnap","getNode","$668b2310913a4fe8$var$viewCacheGetCompleteServerSnap","$668b2310913a4fe8$var$emptyChildrenSingleton","$668b2310913a4fe8$var$ImmutableTree","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","child5","childExistingPathAndValue","$668b2310913a4fe8$var$pathChild","findRootMostValueAndPath","toSet","child7","child8","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach","foreach_","$668b2310913a4fe8$var$stringCompare","$668b2310913a4fe8$var$EmptyChildren","$668b2310913a4fe8$var$CompoundWrite","writeTree_","rootmost","rootMostPath","compoundWrite","newWriteTree1","$668b2310913a4fe8$var$compoundWriteAddWrites","updates","$668b2310913a4fe8$var$compoundWriteAddWrite","newWrite","$668b2310913a4fe8$var$compoundWriteRemoveWrite","empty","newWriteTree2","$668b2310913a4fe8$var$compoundWriteHasCompleteWrite","$668b2310913a4fe8$var$compoundWriteGetCompleteNode","$668b2310913a4fe8$var$compoundWriteChildCompoundWrite","shadowingNode","$668b2310913a4fe8$var$compoundWriteIsEmpty","$668b2310913a4fe8$var$compoundWriteApply","writeTree","priorityWrite","$668b2310913a4fe8$var$applySubtreeWrite","$668b2310913a4fe8$var$writeTreeChildWrites","$668b2310913a4fe8$var$newWriteTreeRef","$668b2310913a4fe8$var$writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$668b2310913a4fe8$var$writeTreeRecordContainsPath_","visibleWrites","$668b2310913a4fe8$var$writeTreeLayerTree_","$668b2310913a4fe8$var$writeTreeDefaultFilter_","lastWriteId","writeRecord","write","writes","treeRoot","writePath","child10","deepNode","$668b2310913a4fe8$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","subMerge","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$668b2310913a4fe8$var$writeTreeCalcCompleteEventChildren","$668b2310913a4fe8$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$668b2310913a4fe8$var$writeTreeCalcEventCacheAfterServerOverwrite","$668b2310913a4fe8$var$writeTreeRefShadowingWrite","completeServerData","toIterate","nodes","existingServerCache","oldChange","changeMap","oldType","$668b2310913a4fe8$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","child","$668b2310913a4fe8$var$WriteTreeCompleteChildSource","viewCache_","serverNode","optCompleteServerCache_","$668b2310913a4fe8$var$writeTreeRefCalcCompleteChild","writes_","child11","$668b2310913a4fe8$var$writeTreeRefCalcIndexedSlice","accumulator","$668b2310913a4fe8$var$ChildChangeAccumulator","newViewCache1","filterServerNode","operation","OVERWRITE","overwrite","$668b2310913a4fe8$var$viewProcessorApplyUserOverwrite","viewProcessor","oldViewCache","writesCache","completeCache","$668b2310913a4fe8$var$viewProcessorApplyServerOverwrite","MERGE","changedChildren","curViewCache","$668b2310913a4fe8$var$viewProcessorCacheHasChild","$668b2310913a4fe8$var$viewProcessorApplyUserMerge","$668b2310913a4fe8$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$668b2310913a4fe8$var$viewProcessorRevertUserWrite","ackPath","name8","mergePath","serverCachePath","$668b2310913a4fe8$var$viewProcessorAckUserWrite","oldServerNode","newViewCache5","$668b2310913a4fe8$var$viewProcessorGenerateEventCacheAfterServerEvent","$668b2310913a4fe8$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","$668b2310913a4fe8$var$viewProcessorMaybeAddValueEvent","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","childChangePath","eventChildUpdate","newEventChild","$668b2310913a4fe8$var$viewCacheUpdateEventSnap","changedSnap","serverFilter","newServerCache","oldServerSnap","newServerNode","newViewCache3","newViewCache4","$668b2310913a4fe8$var$pathGetBack","$668b2310913a4fe8$var$pathParent","$668b2310913a4fe8$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$668b2310913a4fe8$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$668b2310913a4fe8$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$668b2310913a4fe8$var$viewGetCompleteServerCache","view","cache","$668b2310913a4fe8$var$viewIsEmpty","$668b2310913a4fe8$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","slice","$668b2310913a4fe8$var$viewApplyOperation","$668b2310913a4fe8$var$viewProcessorApplyOperation","$668b2310913a4fe8$var$viewGenerateEventsForChanges_","eventRegistrations","moves","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForChanges","$668b2310913a4fe8$var$referenceConstructor$1","$668b2310913a4fe8$var$referenceConstructor","$668b2310913a4fe8$var$SyncPoint","views","$668b2310913a4fe8$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","$668b2310913a4fe8$var$syncPointGetView","query13","serverCacheComplete","eventCacheComplete","$668b2310913a4fe8$var$syncPointAddEventRegistration","query14","initialChanges","$668b2310913a4fe8$var$viewGetInitialEvents","$668b2310913a4fe8$var$syncPointRemoveEventRegistration","query15","hadCompleteView","$668b2310913a4fe8$var$syncPointHasCompleteView","viewQueryId","removed","_repo","$668b2310913a4fe8$var$syncPointGetQueryViews","$668b2310913a4fe8$var$syncPointGetCompleteServerCache","$668b2310913a4fe8$var$syncPointViewForQuery","query16","$668b2310913a4fe8$var$syncPointGetCompleteView","$668b2310913a4fe8$var$syncPointViewExistsForQuery","query17","$668b2310913a4fe8$var$syncTreeNextQueryTag_","$668b2310913a4fe8$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$668b2310913a4fe8$var$syncTreeApplyUserOverwrite","syncTree","newData","$668b2310913a4fe8$var$syncTreeApplyOperationToSyncPoints_","$668b2310913a4fe8$var$syncTreeAckUserWrite","record","$668b2310913a4fe8$var$writeTreeGetWrite","$668b2310913a4fe8$var$syncTreeApplyServerOverwrite","$668b2310913a4fe8$var$syncTreeRemoveEventRegistration","query18","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","query19","covered","parentSyncPoint","newViews","$668b2310913a4fe8$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$668b2310913a4fe8$var$syncTreeCreateListenerForView_","startListening","$668b2310913a4fe8$var$syncTreeQueryForListening_","$668b2310913a4fe8$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$668b2310913a4fe8$var$syncTreeMakeQueryKey_","$668b2310913a4fe8$var$syncTreeRemoveTags_","$668b2310913a4fe8$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$668b2310913a4fe8$var$syncTreeQueryKeyForTag_","r","$668b2310913a4fe8$var$syncTreeParseQueryKey_","queryPath","$668b2310913a4fe8$var$syncTreeApplyTaggedOperation_","$668b2310913a4fe8$var$syncTreeAddEventRegistration","query20","skipSetupListener","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","enableLoggingImpl","SDK_VERSION","$668b2310913a4fe8$var$syncTreeSetupListener_","$668b2310913a4fe8$var$syncTreeCalcCompleteEventCache","serverCache1","$668b2310913a4fe8$var$syncTreeApplyOperationHelper_","syncPointTree","$668b2310913a4fe8$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$668b2310913a4fe8$var$writeTreeRefChild","query1","error1","toUpperCase","child1","last","search","creatorFunction","changeTree","fromObject","encodeURIComponent","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","$668b2310913a4fe8$export$ad30f661f41f4d90","$668b2310913a4fe8$export$eff4d24c3ff7876e","snapshot","$e13576b86460cc50$exports","$e13576b86460cc50$var$_classExtractFieldDescriptor","$e13576b86460cc50$var$_classApplyDescriptorGet","$e13576b86460cc50$var$_interopRequireDefault","parcelRequire","__esModule","$bb98491953509995$exports","$bb98491953509995$var$_checkPrivateRedeclaration","$c36c16f840444775$exports","$c36c16f840444775$var$_classExtractFieldDescriptor","$c36c16f840444775$var$_classApplyDescriptorSet","$c36c16f840444775$var$_interopRequireDefault","$9b139c02a8c43d26$export$2e2bcd8739ae039","thisArg","$197982d8c7a73e5f$var$toString","getPrototypeOf","$197982d8c7a73e5f$var$getPrototypeOf","$197982d8c7a73e5f$var$kindOf","thing","$197982d8c7a73e5f$var$kindOfTest","$197982d8c7a73e5f$var$typeOfTest","$197982d8c7a73e5f$var$isArray","$197982d8c7a73e5f$var$isUndefined","$197982d8c7a73e5f$var$isArrayBuffer","$197982d8c7a73e5f$var$isString","$197982d8c7a73e5f$var$isFunction","$197982d8c7a73e5f$var$isNumber","$197982d8c7a73e5f$var$isObject","$197982d8c7a73e5f$var$isPlainObject","Symbol","toStringTag","$197982d8c7a73e5f$var$isDate","$197982d8c7a73e5f$var$isFile","$197982d8c7a73e5f$var$isBlob","$197982d8c7a73e5f$var$isFileList","$197982d8c7a73e5f$var$isURLSearchParams","$197982d8c7a73e5f$var$forEach","allOwnKeys","l","getOwnPropertyNames","$197982d8c7a73e5f$var$findKey","_key","$197982d8c7a73e5f$var$_global","$197982d8c7a73e5f$var$isContextDefined","$197982d8c7a73e5f$var$isTypedArray","TypedArray","Uint8Array","$197982d8c7a73e5f$var$isHTMLForm","$197982d8c7a73e5f$var$hasOwnProperty","hasOwnProperty1","$197982d8c7a73e5f$var$isRegExp","$197982d8c7a73e5f$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","$197982d8c7a73e5f$export$2e2bcd8739ae039","isBuffer","pattern","FormData","ArrayBuffer","isView","buffer","pipe","$197982d8c7a73e5f$var$merge","caseless","assignValue","targetKey","trim","content","superConstructor","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","arr","pair","regExp","exec","hasOwnProp","enumerable","arrayOrString","delimiter","define","p1","p2","defaultValue","isFinite","global","visit","reducedValue","$0c07198b07c857d4$var$AxiosError","$197982d8c7a73e5f$exports","inherits","toJSON","description","number","fileName","lineNumber","columnNumber","toJSONObject","$0c07198b07c857d4$var$prototype","$0c07198b07c857d4$var$descriptors","customProps","axiosError","toFlatObject","cause","$d4ecdbf520e63dca$export$a143d493d941bafc","$034686670a8a195b$export$d622b2ad8d90c771","$034686670a8a195b$export$6100ba28696e12de","$0c07198b07c857d4$export$2e2bcd8739ae039","$93f6e42318d36b8b$export$2e2bcd8739ae039","$parcel$interopDefault","b64","tmp","i1","lens","$034686670a8a195b$var$getLens","validLen","placeHoldersLen","$034686670a8a195b$var$Arr","$034686670a8a195b$var$_byteLength","curByte","len2","$034686670a8a195b$var$revLookup","uint8","len3","extraBytes","maxChunkLength","i3","$034686670a8a195b$var$encodeChunk","$034686670a8a195b$var$lookup","$454af19f7384844b$export$aafa59e2e03f2942","$454af19f7384844b$export$68d8715fc104d294","$034686670a8a195b$var$code","$034686670a8a195b$var$i","$034686670a8a195b$var$len","len1","end","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","$d4ecdbf520e63dca$var$customInspectSymbol","$d4ecdbf520e63dca$var$Buffer","$d4ecdbf520e63dca$var$K_MAX_LENGTH","$d4ecdbf520e63dca$var$createBuffer","RangeError","buf","encodingOrOffset","$d4ecdbf520e63dca$var$allocUnsafe","$d4ecdbf520e63dca$var$from","string","encoding","isEncoding","$d4ecdbf520e63dca$var$byteLength","actual","$d4ecdbf520e63dca$var$fromString","arrayView","$d4ecdbf520e63dca$var$isInstance","$d4ecdbf520e63dca$var$fromArrayBuffer","byteOffset","byteLength","$d4ecdbf520e63dca$var$fromArrayLike","$d4ecdbf520e63dca$var$fromArrayView","SharedArrayBuffer","valueOf","$d4ecdbf520e63dca$var$checked","$d4ecdbf520e63dca$var$numberIsNaN","$d4ecdbf520e63dca$var$fromObject","toPrimitive","$d4ecdbf520e63dca$var$assertSize","mustMatch","loweredCase","$d4ecdbf520e63dca$var$utf8ToBytes","$d4ecdbf520e63dca$var$base64ToBytes","$d4ecdbf520e63dca$var$slowToString","$d4ecdbf520e63dca$var$hexSlice","$d4ecdbf520e63dca$var$utf8Slice","$d4ecdbf520e63dca$var$asciiSlice","$d4ecdbf520e63dca$var$latin1Slice","$d4ecdbf520e63dca$var$base64Slice","$d4ecdbf520e63dca$var$utf16leSlice","$d4ecdbf520e63dca$var$swap","$d4ecdbf520e63dca$var$bidirectionalIndexOf","$d4ecdbf520e63dca$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$d4ecdbf520e63dca$var$hexWrite","strLen","parsed","$d4ecdbf520e63dca$var$utf8Write","$d4ecdbf520e63dca$var$blitBuffer","$d4ecdbf520e63dca$var$asciiWrite","byteArray","$d4ecdbf520e63dca$var$asciiToBytes","$d4ecdbf520e63dca$var$base64Write","$d4ecdbf520e63dca$var$ucs2Write","units","hi","lo","$d4ecdbf520e63dca$var$utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$d4ecdbf520e63dca$var$MAX_ARGUMENTS_LENGTH","$d4ecdbf520e63dca$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$d4ecdbf520e63dca$var$typedArraySupport","poolSize","alloc","fill","$d4ecdbf520e63dca$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","x","y","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","$d4ecdbf520e63dca$var$hexSliceLookupTable","$d4ecdbf520e63dca$var$checkOffset","ext","$d4ecdbf520e63dca$var$checkInt","$d4ecdbf520e63dca$var$wrtBigUInt64LE","$d4ecdbf520e63dca$var$checkIntBI","BigInt","$d4ecdbf520e63dca$var$wrtBigUInt64BE","$d4ecdbf520e63dca$var$checkIEEE754","$d4ecdbf520e63dca$var$writeFloat","littleEndian","noAssert","$d4ecdbf520e63dca$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$d4ecdbf520e63dca$var$defineBigIntMethod","$d4ecdbf520e63dca$var$validateNumber","first","$d4ecdbf520e63dca$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$d4ecdbf520e63dca$var$errors","$d4ecdbf520e63dca$var$E","sym","getMessage","Base","configurable","$d4ecdbf520e63dca$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$d4ecdbf520e63dca$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","$d4ecdbf520e63dca$var$INVALID_BASE64_RE","leadSurrogate","$d4ecdbf520e63dca$var$base64clean","dst","alphabet","table","i16","$d4ecdbf520e63dca$var$BufferBigIntNotDefined","$7734bfa34e03fc2a$var$isVisitable","isPlainObject","$7734bfa34e03fc2a$var$removeBrackets","endsWith","$7734bfa34e03fc2a$var$renderKey","dots","$7734bfa34e03fc2a$var$predicates","$7734bfa34e03fc2a$export$2e2bcd8739ae039","formData","isObject","metaTokens","indexes","option","isUndefined","visitor","defaultVisitor","useBlob","Blob","isFunction","append","convertValue","isDate","isBlob","isArrayBuffer","isTypedArray","$7734bfa34e03fc2a$require$Buffer","$7734bfa34e03fc2a$var$isFlatArray","isFileList","toArray","el","exposedHelpers","build","isString","$cc98c96c287b2efc$var$encode","charMap","$cc98c96c287b2efc$var$AxiosURLSearchParams","_pairs","$cc98c96c287b2efc$var$prototype","encoder","_encode","$cc98c96c287b2efc$export$2e2bcd8739ae039","$2166c96446d6ea30$var$encode","$2166c96446d6ea30$export$2e2bcd8739ae039","encode","serializeFn","serialize","serializedParams","isURLSearchParams","hashmarkIndex","$41a1c1ac65ef962e$export$2e2bcd8739ae039","use","fulfilled","rejected","handlers","synchronous","runWhen","eject","h","$1d5acd6ee4a1e450$export$2e2bcd8739ae039","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$6cfe4bd5b8086c37$export$2e2bcd8739ae039","URLSearchParams","$ac45b2bd873143e7$export$2e2bcd8739ae039","$c88647090d2a1f73$var$isStandardBrowserEnv","product","$c88647090d2a1f73$export$2e2bcd8739ae039","isBrowser","classes","protocols","$3fb98e26853e5168$export$2e2bcd8739ae039","helpers","isNode","$30b9a4ee1106a4de$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$30b9a4ee1106a4de$var$arrayToObject","isFormData","forEachEntry","matchAll","$30b9a4ee1106a4de$var$parsePropPath","$caf5cce0e605762b$var$DEFAULT_CONTENT_TYPE","$caf5cce0e605762b$var$defaults","transitional","adapter","transformRequest","contentType","getContentType","hasJSONContentType","isObjectPayload","isHTMLForm","isStream","isFile","isArrayBufferView","setContentType","formSerializer","_FormData","rawValue","parser","$caf5cce0e605762b$var$stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","$caf5cce0e605762b$export$2e2bcd8739ae039","$6b3d4ca234f68ddb$var$ignoreDuplicateOf","toObjectSet","$6b3d4ca234f68ddb$export$2e2bcd8739ae039","rawHeaders","line","$bc98ecaa632caed0$var$$internals","$bc98ecaa632caed0$var$normalizeHeader","$bc98ecaa632caed0$var$normalizeValue","$bc98ecaa632caed0$var$matchHeaderValue","isRegExp","$bc98ecaa632caed0$var$_iterator","$bc98ecaa632caed0$var$_toStringTag","$bc98ecaa632caed0$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","findKey","setHeaders","tokens","tokensRE","$bc98ecaa632caed0$var$parseTokens","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","$bc98ecaa632caed0$var$formatHeader","targets","asStrings","computed","accessors","defineAccessor","accessorName","toCamelCase","methodName","$bc98ecaa632caed0$var$buildAccessors","accessor","freezeMethods","$bc98ecaa632caed0$export$2e2bcd8739ae039","$83709ffa15cc9b1e$export$2e2bcd8739ae039","fns","$ee4e77981fc99baa$export$2e2bcd8739ae039","__CANCEL__","$5dd8c74561f08d70$var$CanceledError","ERR_CANCELED","$5dd8c74561f08d70$export$2e2bcd8739ae039","$1623641cb5783008$export$2e2bcd8739ae039","ERR_BAD_REQUEST","$f3627a5d0641603b$export$2e2bcd8739ae039","isStandardBrowserEnv","expires","isNumber","toGMTString","decodeURIComponent","$691cc630f9ef56b2$export$2e2bcd8739ae039","baseURL","relativeURL","$1746cdb16526768b$export$2e2bcd8739ae039","requestedURL","$bb07efa23107e01d$export$2e2bcd8739ae039","msie","urlParsingNode","originURL","resolveURL","setAttribute","pathname","requestURL","$6357329dd8712192$export$2e2bcd8739ae039","$43b00c9657a44656$export$2e2bcd8739ae039","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","$73b5cdc05ac72ecf$var$progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","$73b5cdc05ac72ecf$export$2e2bcd8739ae039","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","username","unescape","fullPath","onloadend","responseHeaders","getAllResponseHeaders","err","statusText","paramsSerializer","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","$a776da890889b002$var$knownAdapters","http","$a776da890889b002$export$2e2bcd8739ae039","getAdapter","adapters","nameOrAdapter","$acd9f6ce0996c2c9$var$throwIfCancellationRequested","throwIfRequested","$acd9f6ce0996c2c9$export$2e2bcd8739ae039","$978ae1e75118f535$var$headersToObject","$978ae1e75118f535$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$3a5e41bf204d513a$export$a4ad2735b021c132","$4c84c2d525dc977b$var$validators","$4c84c2d525dc977b$var$deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","$4c84c2d525dc977b$export$2e2bcd8739ae039","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$4ca0095817960ee3$var$validators","validators","$4ca0095817960ee3$var$Axios","configOrUrl","defaults","contextHeaders","assertOptions","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptors","interceptor","unshift","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","instanceConfig","generateHTTPMethod","isForm","$4ca0095817960ee3$export$2e2bcd8739ae039","$1c9d2783569136b3$var$CancelToken","_listeners","executor","resolvePromise","onfulfilled","_resolve","$1c9d2783569136b3$export$2e2bcd8739ae039","$8a2573892eafc323$var$axios","$8a2573892eafc323$var$createInstance","defaultConfig","extend","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","promises","spread","isAxiosError","AxiosHeaders","formToJSON","$8a2573892eafc323$export$2e2bcd8739ae039","$1c9bd35df1aeff0f$export$1c00760e9e5a4e95","$1c9bd35df1aeff0f$export$c1fbed17c2f6a328","$1c9bd35df1aeff0f$export$1ab0c6b20d94fa14","$1c9bd35df1aeff0f$export$3b22524397b493c6","$1c9bd35df1aeff0f$export$fd08e3cb425f0d61","$1c9bd35df1aeff0f$export$a4ad2735b021c132","$1c9bd35df1aeff0f$export$84bf76cd7afc7469","$1c9bd35df1aeff0f$export$848c9b7ead0df967","$1c9bd35df1aeff0f$export$fbafdbe06a5b5a9a","$1c9bd35df1aeff0f$export$3ae0fd4797ed47c8","$1c9bd35df1aeff0f$export$10ae0d317ea97f8b","$1c9bd35df1aeff0f$export$4e7d6ff0f3e6520","$1c9bd35df1aeff0f$export$86d7c59254d6a2c9","$7aa42f27aa32b9a8$var$_API_KEY","$7aa42f27aa32b9a8$var$_totalPages","$7aa42f27aa32b9a8$export$2e2bcd8739ae039","mediaType","timeWindow","page","resp","fetchWithAllFilmsData","total_pages","fetchWithCurrentFilm","fetchFilmTrailerById","lang","include_adult","genreType","fetchGenresList","fetchWithSearchFilmData","incrementPage","step","actualPage","newPage","actualQuery","totalPages","$9b512d3f8acf09bd$export$21666b427502ea6d","btnOpenRef","querySelector","btnOpenUserRef","btnCloseRef","teamModal","teamLinks","querySelectorAll","form","searchError","pagRef","currentPage","nextPage","prevPage","firstPage","lastPage","beforeCurPageContainer","afterCurPageContainer","themeBtnRef","lightIconRef","darkIconRef","filmList","$e6d72d44c8a0b061$export$32df5403cbb848d0","genre_ids","genres","release_date","genreIsMany","maxGenreIds","genresOfCurrentFilm","genre_id","oneGenre","$5ba00c22cca03412$export$2e2bcd8739ae039","createFilmCardsMarkup","poster_path","filmGengres","date","createModalFilmDetails","fixedGenres","vote_count","fixedVote","fixedPopularity","overview","filmId","createModalFilmTrailer","createModalWithoutFilmTrailer","renderMarkup","selector","innerHtml","innerHTMLMarkup","insAdHtmltype","createMarkypFunc","elem","insertAdjacentHTML","$4b1b6d2aeda69328$export$2e2bcd8739ae039","$4b1b6d2aeda69328$export$9fdba169d7561de8","addMessage","$206a8a1cfa6b1be0$export$6465ae8726243ab1","classList","$206a8a1cfa6b1be0$var$renderApi","$206a8a1cfa6b1be0$var$apiSearch","films","getSearchFilmsData","getGenresList","results","markup","preventDefault","currentTarget","elements","search_user","factory","$a1a60fde0bf78985$exports","newLoadingSettings","typesLoading","loadingSettings","ID","className","zindex","backgroundColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","clickToClose","customSvgUrl","customSvgCode","svgSize","svgColor","messageID","messageFontSize","messageMaxLength","messageColor","commonConsoleError","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","commonGetPlaintext","html","htmlPool","textContent","innerText","loadingGetInternalCSSCodes","loadingCreate","loadingType","messageOrOptions","delay","Notiflix","Loading","init","newLoadingSettingsBackup","newOptions","width","messageHTML","svgIcon","loadingAndBlockSvgIconHourglass","loadingAndBlockSvgIconCircle","loadingAndBlockSvgIconArrows","loadingAndBlockSvgIconDots","loadingAndBlockSvgIconPulse","white","green","loadingAndBlockSvgIconNotiflix","svgSizeAsDigit","winWidth","innerWidth","maxSvgWidthPx","svgIconHTML","ntflxLoadingWrap","zIndex","background","animationDuration","flexWrap","flexDirection","alignItems","justifyContent","getElementById","parentNode","loadingElm","timeout1","timeout2","userLoadingOptions","getInternalCSSCodes","styleElementId","internalCSS","commonSetInternalCSSCodes","userLoadingExtendOptions","standard","hourglass","circle","arrows","pulse","custom","notiflix","newMessage","messageWrap","oldMessageElm","getElementsByTagName","newMessageHTML","fontSize","loadingChangeMessage","amd","$54e2f5b4b164fbea$export$2e2bcd8739ae039","enabled","timeDelay","delayAfterStop","label","percentageLoading","disabled","intervalId","$cb71d7e6ff89ff0a$export$aa9450a0fa5dc8b6","$ce763127c631fa20$export$e9562cbc2a9880a8","beforeContainer","afterContainer","$21365ea99e42a387$export$add40575555c273c","$d706c914d748cb55$export$adb4bb4243526aef","getAllFilmsData","$d706c914d748cb55$export$db1d3739d208bc77","$faf113d98f547820$export$a5109aefef9dcd91","trailers","findTrailer","video","$6fce49880e7c8879$exports","o","e2","n1","t1","firstChild","tagName","ownerDocument","contains","e3","n2","t2","e4","HTMLElement","cloneNode","closable","onShow","e5","u1","parentElement","show","e6","requestAnimationFrame","$b4da383ef9a94a6b$var$fetchApi","$b4da383ef9a94a6b$var$renderApi","$b4da383ef9a94a6b$export$2e2bcd8739ae039","idTrailer","dataset","showTrailers","getFilmTrailerById","onPressEsc","trailer","$825e72b31121e0f6$export$c4ade6de051a1e37","vote_average","popularity","roundVote","toFixed","roundPopularity","$a05b568b302c0abb$var$fetchApi","$a05b568b302c0abb$var$renderApi","$16a09587f8b9608f$export$5583c5a78fe15cb5","isLight","getAttribute","localStorage","setItem","$a476823ae89b62a0$var$onToggle","toggle","$a476823ae89b62a0$var$onBtnToggle","$a476823ae89b62a0$var$onBackdropClose","$a05b568b302c0abb$export$637acd40e5ad0fad","overflow","moreInfoObj","getCurrentFilm","instance1","onclick","closest","numbId"],"version":3,"file":"user-page.6fd2e536.js.map"}