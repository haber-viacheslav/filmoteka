{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_construct.js","node_modules/@swc/helpers/lib/_is_native_function.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/regenerator-runtime/runtime.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@firebase/util/src/constants.ts","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_wrap_native_super.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/process/browser.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/index.ts","src/js/backend.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/AxiosError.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/axios/lib/env/classes/FormData.js","node_modules/form-data/lib/browser.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","src/js/helpers/fetchFilmsApi.js","node_modules/axios/index.js","src/js/helpers/refsApiServ.js","src/js/checkers/genresChecker.js","src/js/helpers/renderFuncApi.js","src/js/checkers/filmSearchChecker.js","src/js/main/searchMovie.js","node_modules/notiflix/build/notiflix-loading-aio.js","src/js/helpers/spinnerApi.js","src/js/spinner/spinner.js","src/js/pagination/createPages.js","src/js/main/renderMainMarkup.js","src/js/checkers/filmTrailerChecker.js","node_modules/basiclightbox/dist/basicLightbox.min.js","src/js/modals/showTrailer.js","src/js/checkers/filmDetailesChecker.js","src/js/modals/filmDetailsModal.js","src/js/helpers/changeTheme.js","src/js/helpers/btnScroll.js","src/js/main.js","src/js/modals/modals.js","src/js/pagination/pagination.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _construct;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _construct(Parent, args, Class) {\n    return construct.apply(null, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction construct(Parent1, args1, Class1) {\n    if (isNativeReflectConstruct()) {\n        construct = Reflect.construct;\n    } else {\n        construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0, _setPrototypeOf).default(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return construct.apply(null, arguments);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeFunction;\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapNativeSuper;\nvar _construct = _interopRequireDefault(require(\"./_construct\"));\nvar _isNativeFunction = _interopRequireDefault(require(\"./_is_native_function\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _wrapNativeSuper(Class) {\n    return wrapNativeSuper(Class);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction wrapNativeSuper(Class1) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    wrapNativeSuper = function wrapNativeSuper(Class) {\n        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, _setPrototypeOf).default(Wrapper, Class);\n    };\n    return wrapNativeSuper(Class1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  const emulator = getDefaultEmulatorHostnameAndPort('database');\n  if (emulator) {\n    connectDatabaseEmulator(db, ...emulator);\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD7a39CtgzeuIx1kkpFRZ7MvO1bdmoGCT4',\n  authDomain: 'filmoteka-c3a99.firebaseapp.com',\n  databaseURL:\n    'https://filmoteka-c3a99-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'filmoteka-c3a99',\n  storageBucket: 'filmoteka-c3a99.appspot.com',\n  messagingSenderId: '412361816258',\n  appId: '1:412361816258:web:1c806438765e9ded7b235b',\n  measurementId: 'G-SJPWP9Q9CH',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase();\n\nimport { getDatabase, ref, set } from 'firebase/database';\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\nconst starCountRef = ref(db, 'users/');\nonValue(starCountRef, snapshot => {\n  const data = snapshot.val();\n  console.log(data);\n});\n// function writeUserData(name, email, imageUrl) {\n//   set(ref(db, 'users/'), {\n//     username: name,\n//     email: email,\n//     profile_picture: imageUrl,\n//   });\n// }\n\n// console.log(writeUserData('Vlalav', 'exple@gmail.com', 'ink...'));\n// const starCountRef = ref(db, '/users');\n// onValue(starCountRef, dt => {\n//   const data = dt.val();\n//   console.log(data);\n// });\n\n// import { getDatabase, ref, push, set } from 'firebase/database';\n\n// // Create a new post reference with an auto-generated id\n// const postListRef = ref(db, 'users');\n// const newPostRef = push(postListRef);\n// set(newPostRef, {\n//   name: 'Daria',\n//   email: 'exple@gmail.com',\n//   imgLink: 'ink...',\n//   // ...\n// });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self;\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import FormData from 'form-data';\nexport default FormData;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport envFormData from '../env/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliant(thing) {\n  return thing && utils.isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator];\n}\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (envFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && isSpecCompliant(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        (utils.isFileList(value) || utils.endsWith(key, '[]') && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return  passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && platform.isStandardBrowserEnv) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.2.0\";","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from 'axios';\n\nclass FetchFilmsApi {\n\n  #API_KEY;\n  #totalPages;\n  constructor(config = { baseURL: 'https://api.themoviedb.org/3/' }) {\n    this.query = '';\n    this.config = config;\n    this.#API_KEY = '76cbb606f190fc237086ec33f1fd98a3';\n\n    this.page = 1;\n    this.#totalPages = null;\n  }\n  async fetchWithAllFilmsData({ mediaType, timeWindow }) {\n    const resp = await axios.get(\n      `trending/${mediaType}/${timeWindow}?api_key=${this.#API_KEY}&page=${\n        this.page\n      }`,\n      this.config\n    );\n\n    return resp;\n  }\n\n  async getAllFilmsData({ mediaType = 'movie', timeWindow = 'day' }) {\n    try {\n      const resp = await this.fetchWithAllFilmsData({\n        mediaType,\n        timeWindow,\n      });\n\n      this.#totalPages = resp.data.total_pages;\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchWithCurrentFilm({ mediaType, id }) {\n    const resp = await axios.get(\n      `${mediaType}/${id}?api_key=${this.#API_KEY} `,\n      this.config\n    );\n\n    return resp;\n  }\n  async getCurrentFilm({ mediaType = 'movie', id }) {\n    try {\n      const resp = await this.fetchWithCurrentFilm({\n        mediaType,\n        id,\n      });\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchFilmTrailerById({ mediaType, id }) {\n    const resp = await axios.get(\n      `${mediaType}/${id}/videos?api_key=${this.#API_KEY} `,\n      this.config\n    );\n\n    return resp;\n  }\n  async getFilmTrailerById({ mediaType = 'movie', id }) {\n    try {\n      const resp = await this.fetchFilmTrailerById({\n        mediaType,\n        id,\n      });\n      //\n      //\n      return resp;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async fetchWithSearchFilmData({ mediaType, lang, page, include_adult }) {\n    const resp = await axios.get(\n      `search/${mediaType}?api_key=${this.#API_KEY}&language=${lang}&query=${\n        this.query\n      }&page=${page}&include_adult=${include_adult}`,\n      this.config\n    );\n\n    return resp;\n  }\n\n  //\n  //\n  async fetchGenresList({ mediaType, genreType, page }) {\n    const resp = await axios.get(\n      `genre/${mediaType}/${genreType}?api_key=${this.#API_KEY}&page=${page}`,\n      this.config\n    );\n    return resp;\n  }\n  //\n  async getGenresList({ mediaType = 'movie', genreType = 'list', page = '1' }) {\n    try {\n      const resp = await this.fetchGenresList({ mediaType, genreType, page });\n      return resp;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  //\n\n  async getSearchFilmsData({\n    mediaType = 'movie',\n    lang = 'en-US',\n    page = 1,\n    include_adult = false,\n  }) {\n    try {\n      const resp = await this.fetchWithSearchFilmData({\n        mediaType,\n        lang,\n        page,\n        include_adult,\n      });\n      return resp;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  incrementPage({ step = 1 }) {\n    this.page += step;\n  }\n  get actualPage() {\n    return this.page;\n  }\n  set actualPage(newPage) {\n    this.page = newPage;\n  }\n  get actualQuery() {\n    return this.query;\n  }\n  set actualQuery(newQuery) {\n    return (this.query = newQuery.trim());\n  }\n  get totalPages() {\n    return this.#totalPages;\n  }\n  set totalPages(newValue) {\n    this.#totalPages = newValue;\n  }\n}\n// const api = new FetchFilmsApi();\n\n// // console.log((api.actualQuery = 'asfas       s     '));\n// console.log(api.config);\nexport default FetchFilmsApi;\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON\n}\n","export const refs = {\n  btnOpenRef: document.querySelector('[data-modal-open]'),\n  btnOpenUserRef: document.querySelector('[data-modal-open-user]'),\n  btnCloseRef: document.querySelector('[data-team-modal-close]'),\n  body: document.querySelector('body'),\n  teamModal: document.querySelector('[data-team-modal]'),\n  teamLinks: document.querySelectorAll('.team-modal__link'),\n  form: document.querySelector('.form'),\n  searchError: document.querySelector('.form__text-error'),\n  pagRef: document.querySelector('.pagination'),\n  currentPage: document.querySelector('#curr'),\n  nextPage: document.querySelector('#next'),\n  prevPage: document.querySelector('#prev'),\n  firstPage: document.querySelector('#first-page'),\n  lastPage: document.querySelector('#last-page'),\n  beforeCurPageContainer: document.querySelector('.before-cur-page'),\n  afterCurPageContainer: document.querySelector('.after-cur-page'),\n  themeBtnRef: document.querySelector('.theme-btn'),\n  lightIconRef: document.querySelector('.theme-light'),\n  darkIconRef: document.querySelector('.theme-dark'),\n  filmList: document.querySelector('.films__list'),\n  btnScrollTopRef: document.querySelector('.btn__up'),\n  btnScrollDownRef: document.querySelector('.btn__down'),\n  footerRef: document.querySelector('.footer'),\n\n  // enter refs of elements you want\n  // like this ---> inputEl: document.querySelector('.header__search-form')  (EXAMPLE!!!)\n};\n\n// DONT TOUCH below\n// -----------------------------------\n// class refsApiServ {\n//   constructor() {\n//     this.el = {};\n//   }\n//   addRefs(refName, link) {\n//     this.el = { [refName]: link };\n//   }\n// }\n// const refs = new refsApiServ();\n// refs.addRefs('inputEl', document.querySelector('.film-list'));\n// console.log(refs.refs.inputEl);\n// -----------------------------------\n","export function checkGenreList(genre_ids, genres, release_date) {\n  let genreIsMany = null;\n  let maxGenreIds = genre_ids;\n\n  if (genre_ids.length > 2) {\n    genreIsMany = true;\n    maxGenreIds = genre_ids.slice(0, 2);\n  } else {\n    genreIsMany = false;\n  }\n\n  const ArrayGenresOfCurrentFilm = maxGenreIds.map(genre_id => {\n    return genres.find(oneGenre => oneGenre.id === genre_id);\n  });\n  let genresOfCurrentFilm = ArrayGenresOfCurrentFilm.map(\n    oneGenre => oneGenre.name\n  ).join(', ');\n\n  if (genreIsMany) {\n    genresOfCurrentFilm += ', Other';\n  }\n\n  const date = release_date.slice(0, 4);\n\n  return { date, genresOfCurrentFilm };\n}\n","import refsApiServ from './refsApiServ';\nimport { checkGenreList } from '../checkers/genresChecker';\n\nclass RenderApi {\n  constructor() {}\n\n  createFilmCardsMarkup(data, genres) {\n    return data\n      .map(({ poster_path, title, genre_ids, release_date, id }) => {\n        const filmGengres = checkGenreList(genre_ids, genres, release_date);\n\n        const { date, genresOfCurrentFilm } = filmGengres;\n\n        return ` <li class=\"film\">\n        <div class=\"film__thumb\">\n          <img data-id='${id}' class=\"film__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" />\n        </div>\n        <div class=\"film__wrap\">\n          <h2 class=\"film__title\">${title}</h2>\n          <p class=\"film__genres\">${genresOfCurrentFilm} | ${date}</p>\n        </div>\n      </li>`;\n      })\n      .join('');\n  }\n  // createLibraryFilmCardsMarkup(data) {\n  //   return data\n  //     .map(\n  //       ({}) =>\n  //         `\n\n  //   `\n  //     )\n  //     .join('');\n  // }\n  createModalFilmDetails(\n    {\n      poster_path,\n      title,\n      fixedGenres,\n      vote_count,\n      fixedVote,\n      fixedPopularity,\n      overview,\n    },\n    filmId\n  ) {\n    return `\n        <div class=\"film__modal\">\n        \n      <button class=\"film-modal__close\">X</button>\n    \n          <div class=\"film-modal__thumb\">\n          <img\n            class=\"film-modal__img\"\n            src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n            alt=\"${title}\"\n          />\n          </div>\n    \n          <div class=\"film-modal__text-wrap\">\n          <h2 class=\"film-modal__title\">${title}</h2>\n    \n          <ul class=\"film-modal__list-characteristic\">\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--vote\"\n                  >Vote / Votes</span\n                ><span class=\"characteristic__value characteristic__value--vote\">\n                <span class=\"characteristic__vote\">${fixedVote}</span> / \n                <span class=\"characteristic__vote characteristic__vote--count\">${vote_count}</span>\n                </span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--popularity\"\n                  >Popularity</span\n                ><span class=\"characteristic__value\">${fixedPopularity}</span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--title\"\n                  >Original Title</span\n                ><span class=\"characteristic__value\">${title}</span>\n              </p>\n            </li>\n            <li class=\"film-modal__item-characteristic\">\n              <p class=\"film-modal__characteristic-text\">\n                <span class=\"characteristic__name characteristic__name--genre\"\n                  >Genre</span\n                ><span class=\"characteristic__value\">${fixedGenres}</span>\n              </p>\n            </li>\n          </ul>\n    \n          <h3 class=\"film-modal__about-film-title\">About</h3>\n          <p class=\"film-modal__about-film-text\"> ${overview}\n          </p>\n    \n          <button class=\"film-modal__trailer\" data-id=\"${filmId} aria-lable=\"youtube\"><span class=\"film-modal__sumbol\">&#9658;</span></button>\n    \n          <div class=\"film-modal__wrap-btn flex\">\n            <button class=\"film-modal__btn film-modal__btn--watched\">\n              add to Watched\n            </button>\n            <button class=\"film-modal__btn film-modal__btn--queue\">\n              add to queue\n            </button>\n          </div>\n         </div>\n        </div>\n    `;\n  }\n\n  createModalFilmTrailer(key) {\n    return `\n    <iframe class='film-modal__iframe' src=\"https://www.youtube.com/embed/${key}\" frameborder=\"0\"></iframe>\n`;\n  }\n  createModalWithoutFilmTrailer() {\n    return `<div class=\"empty\"><p class='empty__text'>Sorry, but this film don't have trailer :(</p></div>\n    `;\n  }\n  //1 - Enter your selector like: \".films-list\",\n  //2 - Enter true or false to activate innerHtml before insertAdjacentHTML\n  //3- Enter innerHtml value for default use -  ''\n  //4 - Enter insertAdjecentHtml type for default use - 'beforeend'\n  //5 - Enter createMarkup function that already has been created and put into parameters data as you need! like: { createMarkypFunc:  createMoreFi lmDetails(fetchToFilmsData()) }\n  renderMarkup({\n    selector,\n    innerHtml = false,\n    innerHTMLMarkup = '',\n    insAdHtmltype = 'beforeend',\n    createMarkypFunc,\n  }) {\n    const elem = document.querySelector(selector);\n    // console.log();\n    if (innerHtml) {\n      elem.innerHTML = innerHTMLMarkup;\n    }\n    elem.insertAdjacentHTML(insAdHtmltype, createMarkypFunc);\n  }\n}\n\nexport default RenderApi;\n//  <div class=\"example\">\n//\n// </div>;\n","import { getSearchedFilm } from '../main/searchMovie';\nimport { refs } from '../helpers/refsApiServ';\n\nexport default function getFilmSearchCheck(value) {\n  if (!value) {\n    getErrMessage({ addMessage: true });\n    return;\n  }\n\n  getErrMessage({ addMessage: false });\n  getSearchedFilm();\n}\n\nexport function getErrMessage({ addMessage }) {\n  if (!addMessage) {\n    return refs.searchError.classList.add('is-hidden');\n  }\n  return refs.searchError.classList.remove('is-hidden');\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport getFilmSearchCheck from '../checkers/filmSearchChecker';\nimport { refs } from '../helpers/refsApiServ';\nimport { getErrMessage } from '../checkers/filmSearchChecker';\nconst renderApi = new RenderApi();\n\nconst apiSearch = new FetchFilmsApi({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nrefs.form.addEventListener('submit', onSearchBtnClick);\n\nexport default function onSearchBtnClick(e) {\n  e.preventDefault();\n\n  const value = e.currentTarget.elements.search_user.value.trim();\n\n  apiSearch.actualQuery = value;\n  getFilmSearchCheck(value);\n\n  apiSearch.incrementPage({ step: 1 });\n}\n\nexport async function getSearchedFilm() {\n  const films = await apiSearch.getSearchFilmsData({});\n  const genresObj = await apiSearch.getGenresList({});\n  const genres = genresObj.data.genres;\n  const filmsArrLength = films.data.results.length;\n\n  if (!filmsArrLength) {\n    return getErrMessage({ addMessage: true });\n  }\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    innerHTMLMarkup: '',\n    insAdHtmltype: 'beforeend',\n    createMarkypFunc: markup,\n  });\n}\n","/*\n* Notiflix Loading AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // LOADING: Default Settings: begin\n  var typesLoading = {\r\n    Standard: 'Standard',\r\n    Hourglass: 'Hourglass',\r\n    Circle: 'Circle',\r\n    Arrows: 'Arrows',\r\n    Dots: 'Dots',\r\n    Pulse: 'Pulse',\r\n    Custom: 'Custom',\r\n    Notiflix: 'Notiflix',\r\n  };\r\n  var newLoadingSettings;\r\n  var loadingSettings = {\r\n    ID: 'NotiflixLoadingWrap', // can not customizable\r\n    className: 'notiflix-loading',\r\n    zindex: 4000,\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    rtl: false,\r\n    fontFamily: 'Quicksand',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    clickToClose: false,\r\n    customSvgUrl: null,\r\n    customSvgCode: null,\r\n    svgSize: '80px',\r\n    svgColor: '#32c682',\r\n    messageID: 'NotiflixLoadingMessage',\r\n    messageFontSize: '15px',\r\n    messageMaxLength: 34,\r\n    messageColor: '#dcdcdc',\r\n  };\n  // LOADING: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // LOADING && BLOCK: SVG Icon Standard: begin\n  var loadingAndBlockSvgIconStandard = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var standard = '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" transform=\"scale(.8)\" viewBox=\"0 0 38 38\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\" transform=\"translate(1 1)\"><circle cx=\"18\" cy=\"18\" r=\"18\" stroke-opacity=\".25\"/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" dur=\"1s\" from=\"0 18 18\" repeatCount=\"indefinite\" to=\"360 18 18\" type=\"rotate\"/></path></g></svg>';\r\n    return standard;\r\n  };\n  // LOADING && BLOCK: SVG Icon Standard: end\n\n  // LOADING && BLOCK: SVG Icon Hourglass: begin\n  var loadingAndBlockSvgIconHourglass = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var hourglass = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingHourglass\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 200 200\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\"true\" data-animator-type=\"1\" style=\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\"><g id=\"NXhourglass2\" fill=\"inherit\"><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass4\" d=\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\"/></g><g data-animator-group=\"true\" data-animator-type=\"2\" style=\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\" opacity=\".4\"><path id=\"NXhourglass6\" d=\"M100 100L65.62 67.92V36.78h68.76v31.14z\"/></g><path d=\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\"/></g></g></svg>';\r\n    return hourglass;\r\n  };\n  // LOADING && BLOCK: SVG Icon Hourglass: end\n\n  // LOADING && BLOCK: SVG Icon Circle: begin\n  var loadingAndBlockSvgIconCircle = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var circle = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"25 25 50 50\" style=\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:' + width + ';-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:' + width + ';position:absolute;top:0;left:0;margin:auto\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"' + color + '\" stroke-width=\"2\" style=\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\" stroke-dasharray=\"150 200\" stroke-dashoffset=\"-10\" stroke-linecap=\"round\"/></svg>';\r\n    return circle;\r\n  };\n  // LOADING && BLOCK: SVG Icon Circle: end\n\n  // LOADING && BLOCK: SVG Icon Arrows: begin\n  var loadingAndBlockSvgIconArrows = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var arrows = '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 128 128\"><g><path fill=\"inherit\" d=\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\"/><animateTransform attributeName=\"transform\" dur=\"1.5s\" from=\"0 64 64\" repeatCount=\"indefinite\" to=\"360 64 64\" type=\"rotate\"/></g></svg>';\r\n    return arrows;\r\n  };\n  // LOADING && BLOCK: SVG Icon Arrows: end\n\n  // LOADING && BLOCK: SVG Icon Dots: begin\n  var loadingAndBlockSvgIconDots = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var dots = '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 100 100\"><g transform=\"translate(25 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.239)\"><animateTransform attributeName=\"transform\" begin=\"-0.266s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(50 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.00152)\"><animateTransform attributeName=\"transform\" begin=\"-0.133s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g><g transform=\"translate(75 50)\"><circle r=\"9\" fill=\"inherit\" transform=\"scale(.299)\"><animateTransform attributeName=\"transform\" begin=\"0s\" calcMode=\"spline\" dur=\"0.8s\" keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" type=\"scale\" values=\"0;1;0\"/></circle></g></svg>';\r\n    return dots;\r\n  };\n  // LOADING && BLOCK: SVG Icon Dots: end\n\n  // LOADING && BLOCK: SVG Icon Pulse: begin\n  var loadingAndBlockSvgIconPulse = function (width, color) {\r\n    if (!width) { width = '60px'; }\r\n    if (!color) { color = '#32c682'; }\r\n    var pulse = '<svg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"' + color + '\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 44 44\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>';\r\n    return pulse;\r\n  };\n  // LOADING && BLOCK: SVG Icon Pulse: end\n\n  // LOADING && BLOCK: SVG Icon Notiflix: begin\n  var loadingAndBlockSvgIconNotiflix = function (width, white, green) {\r\n    if (!width) { width = '60px'; }\r\n    if (!white) { white = '#f8f8f8'; }\r\n    if (!green) { green = '#32c682'; }\r\n    var notiflixIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"NXLoadingNotiflixLib\" width=\"' + width + '\" height=\"' + width + '\" viewBox=\"0 0 200 200\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:' + white + ';stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\" style=\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\" fill=\"' + green + '\" stroke=\"' + green + '\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"22\" stroke-width=\"12\"/><path class=\"nx-icon-line\" d=\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\" style=\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/><path class=\"nx-icon-line\" d=\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\" style=\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\" stroke-dasharray=\"500\"/></svg>';\r\n    return notiflixIcon;\r\n  };\n  // LOADING && BLOCK: SVG Icon Notiflix: end\n\n  // LOADING: Get Internal CSS Codes: begin\n  var loadingGetInternalCSSCodes = function () {\r\n    var loadingCSS = '[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"] img,[id^=NotiflixLoadingWrap]>div[class*=\"-icon\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}';\r\n    return loadingCSS || null;\r\n  };\n  // LOADING: Get Internal CSS Codes: end\n\n  // LOADING: Create: begin\n  var loadingCreate = function (loadingType, messageOrOptions, options, display, delay) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newLoadingSettings) {\r\n      Notiflix.Loading.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newLoadingSettingsBackup = commonExtendOptions(true, newLoadingSettings, {});\r\n\n    // check \"messageOrOptions\" and \"options\": begin\r\n    if ((typeof messageOrOptions === 'object' && !Array.isArray(messageOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof messageOrOptions === 'object') {\r\n        newOptions = messageOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newOptions);\r\n    }\r\n    // check \"messageOrOptions\" and \"options\": end\r\n\n    // check the message\r\n    var message = '';\r\n    if (typeof messageOrOptions === 'string' && messageOrOptions.length > 0) {\r\n      message = messageOrOptions;\r\n    }\r\n\n    // show loading\r\n    if (display) {\r\n\n      // if message settings: begin\r\n      if (message.length > newLoadingSettings.messageMaxLength) {\r\n        message = commonGetPlaintext(message).toString().substring(0, newLoadingSettings.messageMaxLength) + '...';\r\n      } else {\r\n        message = commonGetPlaintext(message).toString();\r\n      }\r\n      var messageHTML = '';\r\n      if (message.length > 0) {\r\n        messageHTML = '<p id=\"' + newLoadingSettings.messageID + '\" class=\"nx-loading-message\" style=\"color:' + newLoadingSettings.messageColor + ';font-size:' + newLoadingSettings.messageFontSize + ';\">' + message + '</p>';\r\n      }\r\n      // if message settings: end\r\n\n      // if cssAnimaion is false => duration: begin\r\n      if (!newLoadingSettings.cssAnimation) {\r\n        newLoadingSettings.cssAnimationDuration = 0;\r\n      }\r\n      // if cssAnimaion is false => duration: end\r\n\n      // svgIcon: begin\r\n      var svgIcon = '';\r\n      if (loadingType === typesLoading.Standard) {\r\n        svgIcon = loadingAndBlockSvgIconStandard(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Hourglass) {\r\n        svgIcon = loadingAndBlockSvgIconHourglass(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Circle) {\r\n        svgIcon = loadingAndBlockSvgIconCircle(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Arrows) {\r\n        svgIcon = loadingAndBlockSvgIconArrows(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Dots) {\r\n        svgIcon = loadingAndBlockSvgIconDots(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (loadingType === typesLoading.Pulse) {\r\n        svgIcon = loadingAndBlockSvgIconPulse(newLoadingSettings.svgSize, newLoadingSettings.svgColor);\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        newLoadingSettings.customSvgCode !== null &&\r\n        newLoadingSettings.customSvgUrl === null\r\n      ) {\r\n        svgIcon = newLoadingSettings.customSvgCode || '';\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        newLoadingSettings.customSvgUrl !== null &&\r\n        newLoadingSettings.customSvgCode === null\r\n      ) {\r\n        svgIcon = '<img class=\"nx-custom-loading-icon\" width=\"' + newLoadingSettings.svgSize + '\" height=\"' + newLoadingSettings.svgSize + '\" src=\"' + newLoadingSettings.customSvgUrl + '\" alt=\"Notiflix\">';\r\n      } else if (\r\n        loadingType === typesLoading.Custom &&\r\n        (newLoadingSettings.customSvgUrl === null || newLoadingSettings.customSvgCode === null)\r\n      ) {\r\n        commonConsoleError('You have to set a static SVG url to \"customSvgUrl\" option to use Loading Custom.');\r\n        return false;\r\n      } else {\r\n        svgIcon = loadingAndBlockSvgIconNotiflix(newLoadingSettings.svgSize, '#f8f8f8', '#32c682');\r\n      }\r\n      var svgSizeAsDigit = parseInt((newLoadingSettings.svgSize || '').replace(/[^0-9]/g, ''));\r\n      var winWidth = window.innerWidth;\r\n      var maxSvgWidthPx = svgSizeAsDigit >= winWidth ? (winWidth - 40) + 'px' : svgSizeAsDigit + 'px';\r\n      var svgIconHTML = '<div style=\"width:' + maxSvgWidthPx + '; height:' + maxSvgWidthPx + ';\" class=\"' + newLoadingSettings.className + '-icon' + (message.length > 0 ? ' nx-with-message' : '') + '\">' + svgIcon + '</div>';\r\n      // svgIcon: end\r\n\n      // loading wrap: begin\r\n      var ntflxLoadingWrap = window.document.createElement('div');\r\n      ntflxLoadingWrap.id = loadingSettings.ID;\r\n      ntflxLoadingWrap.className = newLoadingSettings.className + (newLoadingSettings.cssAnimation ? ' nx-with-animation' : '') + (newLoadingSettings.clickToClose ? ' nx-loading-click-to-close' : '');\r\n      ntflxLoadingWrap.style.zIndex = newLoadingSettings.zindex;\r\n      ntflxLoadingWrap.style.background = newLoadingSettings.backgroundColor;\r\n      ntflxLoadingWrap.style.animationDuration = newLoadingSettings.cssAnimationDuration + 'ms';\r\n      ntflxLoadingWrap.style.fontFamily = '\"' + newLoadingSettings.fontFamily + '\", ' + defaultFontFamily;\r\n      ntflxLoadingWrap.style.display = 'flex';\r\n      ntflxLoadingWrap.style.flexWrap = 'wrap';\r\n      ntflxLoadingWrap.style.flexDirection = 'column';\r\n      ntflxLoadingWrap.style.alignItems = 'center';\r\n      ntflxLoadingWrap.style.justifyContent = 'center';\r\n\n      // rtl: begin\r\n      if (newLoadingSettings.rtl) {\r\n        ntflxLoadingWrap.setAttribute('dir', 'rtl');\r\n        ntflxLoadingWrap.classList.add('nx-rtl-on');\r\n      }\r\n      // rtl: end\r\n\n      // append: begin\r\n      ntflxLoadingWrap.innerHTML = svgIconHTML + messageHTML;\r\n\n      // if there is no loading element\r\n      if (!window.document.getElementById(ntflxLoadingWrap.id)) {\r\n        // append\r\n        window.document.body.appendChild(ntflxLoadingWrap);\r\n\n        // if click to close\r\n        if (newLoadingSettings.clickToClose) {\r\n          var loadingWrapElm = window.document.getElementById(ntflxLoadingWrap.id);\r\n          loadingWrapElm.addEventListener('click', function () {\r\n            ntflxLoadingWrap.classList.add('nx-remove');\r\n            var timeout = setTimeout(function () {\r\n              if (ntflxLoadingWrap.parentNode !== null) {\r\n                ntflxLoadingWrap.parentNode.removeChild(ntflxLoadingWrap);\r\n                clearTimeout(timeout);\r\n              }\r\n            }, newLoadingSettings.cssAnimationDuration);\r\n          });\r\n        }\r\n      }\r\n      // append: end\r\n    }\r\n    // remove loading\r\n    else {\r\n      // if there is a loading element\r\n      if (window.document.getElementById(loadingSettings.ID)) {\r\n        var loadingElm = window.document.getElementById(loadingSettings.ID);\r\n        var timeout = setTimeout(function () {\r\n          loadingElm.classList.add('nx-remove');\r\n          var timeout2 = setTimeout(function () {\r\n            if (loadingElm.parentNode !== null) {\r\n              loadingElm.parentNode.removeChild(loadingElm);\r\n              clearTimeout(timeout2);\r\n            }\r\n          }, newLoadingSettings.cssAnimationDuration);\r\n          clearTimeout(timeout);\r\n        }, delay);\r\n      }\r\n    }\r\n\n    // extend new settings with the backup settings\r\n    newLoadingSettings = commonExtendOptions(true, newLoadingSettings, newLoadingSettingsBackup);\r\n  };\n  // LOADING: Create: end\n\n  // LOADING: Change Message: begin\n  var loadingChangeMessage = function (newMessage) {\r\n    // check the new message\r\n    if (typeof newMessage !== 'string') {\r\n      newMessage = '';\r\n    }\r\n    // if has any loading\r\n    var messageWrap = window.document.getElementById(loadingSettings.ID);\r\n    if (messageWrap) {\r\n      // if there is a new message\r\n      if (newMessage.length > 0) {\r\n        // max length: begin\r\n        if (newMessage.length > newLoadingSettings.messageMaxLength) {\r\n          newMessage = commonGetPlaintext(newMessage).substring(0, newLoadingSettings.messageMaxLength) + '...';\r\n        } else {\r\n          newMessage = commonGetPlaintext(newMessage);\r\n        }\r\n        // max length: end\r\n\n        // there is a message element\r\n        var oldMessageElm = messageWrap.getElementsByTagName('p')[0];\r\n        if (oldMessageElm) {\r\n          oldMessageElm.innerHTML = newMessage; // change the message\r\n        }\r\n        // there is no message element\r\n        else {\r\n          // create a new message element: begin\r\n          var newMessageHTML = window.document.createElement('p');\r\n          newMessageHTML.id = newLoadingSettings.messageID;\r\n          newMessageHTML.className = 'nx-loading-message nx-loading-message-new';\r\n          newMessageHTML.style.color = newLoadingSettings.messageColor;\r\n          newMessageHTML.style.fontSize = newLoadingSettings.messageFontSize;\r\n          newMessageHTML.innerHTML = newMessage;\r\n          messageWrap.appendChild(newMessageHTML);\r\n          // create a new message element: end\r\n        }\r\n      }\r\n      // if no message\r\n      else {\r\n        commonConsoleError('Where is the new message?');\r\n      }\r\n    }\r\n  };\n  // LOADING: Change Message: end\n\n  var Notiflix = {\n    Loading: {\r\n      // Init\r\n      init: function (userLoadingOptions) {\r\n        // extend options\r\n        newLoadingSettings = commonExtendOptions(true, loadingSettings, userLoadingOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(loadingGetInternalCSSCodes, 'NotiflixLoadingInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userLoadingExtendOptions) {\r\n        // if initialized already\r\n        if (newLoadingSettings) {\r\n          newLoadingSettings = commonExtendOptions(true, newLoadingSettings, userLoadingExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Loading module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Standard\r\n      standard: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Standard, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Hourglass\r\n      hourglass: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Hourglass, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Circle\r\n      circle: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Circle, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Arrows\r\n      arrows: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Arrows, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Dots\r\n      dots: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Dots, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Pulse\r\n      pulse: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Pulse, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Custom\r\n      custom: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Custom, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Notiflix\r\n      notiflix: function (messageOrOptions, options) {\r\n        loadingCreate(typesLoading.Notiflix, messageOrOptions, options, true, 0); // true => show && 0 => delay\r\n      },\r\n      // Remove\r\n      remove: function (delay) {\r\n        if (typeof delay !== 'number') { delay = 0; }\r\n        loadingCreate(null, null, null, false, delay); // false => hide/remove\r\n      },\r\n      // Change The Message\r\n      change: function (newMessage) {\r\n        loadingChangeMessage(newMessage);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Loading: Notiflix.Loading });\n  } else {\n    return { Loading: Notiflix.Loading };\n  }\n\n});","import { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nclass SpinneroOnLoadingApi {\n  constructor({\n    label = 'Loading',\n    options = {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      svgColor: '#FF6B08',\n    },\n  }) {\n    this.label = label;\n    this.options = options;\n    this.intervalId = null;\n  }\n  enabled({ timeDelay = 20, delayAfterStop = 400 }) {\n    Loading.arrows(this.label, this.options);\n    this.percentageLoading(timeDelay, delayAfterStop);\n  }\n  disabled(delayAfterStop) {\n    clearInterval(this.intervalId);\n    Loading.remove(delayAfterStop);\n  }\n  percentageLoading(timeDelay, delayAfterStop) {\n    let count = 0;\n    const limit = 100;\n    this.intervalId = setInterval(() => {\n      Loading.change(`${this.label} ${(count += 1)}%`);\n\n      if (count === limit) {\n        Loading.change('Ready!');\n        this.disabled(delayAfterStop);\n      }\n    }, timeDelay);\n  }\n}\nexport default SpinneroOnLoadingApi;\n","import SpinneroOnLoadingApi from '../helpers/spinnerApi';\n\nexport const spinnerOnMain = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nexport const spinnerOnList = new SpinneroOnLoadingApi({});\n","import { refs } from '../helpers/refsApiServ';\n\nexport function createPages(page, totalPages) {\n  let beforeContainer = ``;\n  let afterContainer = ``;\n\n  // Before\n  if (page >= 5) {\n    beforeContainer += `<div class=\"numb numb--first-page\" data-numb-id='1'>1</div>`;\n  }\n\n  if (page === 4 || page === 5) {\n    beforeContainer += `<div class=\"numb dots\" data-numb-id='${page - 3}'>${\n      page - 3\n    }</div>`;\n  } else if (page >= 6) {\n    beforeContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page >= 3) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 2}'>${\n      page - 2\n    }</div>`;\n  }\n\n  if (page >= 2) {\n    beforeContainer += `<div class=\"numb\" data-numb-id='${page - 1}'>${\n      page - 1\n    }</div>`;\n  }\n\n  // After\n  if (page <= totalPages - 1) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 1}'>${\n      page + 1\n    }</div>`;\n  }\n\n  if (page <= totalPages - 2) {\n    afterContainer += `<div class=\"numb\" data-numb-id='${page + 2}'>${\n      page + 2\n    }</div>`;\n  }\n\n  if (page === totalPages - 3 || page === totalPages - 4) {\n    afterContainer += `<div class=\"numb dots\" data-numb-id='${page + 3}'>${\n      page + 3\n    }</div>`;\n  } else if (page <= totalPages - 5) {\n    afterContainer += `<div class=\"dots\">...</div>`;\n  }\n\n  if (page <= totalPages - 4) {\n    afterContainer += `<div class=\"numb numb--last-page\" data-numb-id='${totalPages}'>${totalPages}</div>`;\n  }\n\n  // DOM\n  refs.beforeCurPageContainer.innerHTML = beforeContainer;\n  refs.afterCurPageContainer.innerHTML = afterContainer;\n}\n","import { fetchApi } from '../main';\nimport { renderApi } from '../main';\nimport { createPages } from '../pagination/createPages';\n\nexport async function renderMarkup() {\n  const genresObj = await fetchApi.getGenresList({});\n  const genres = genresObj.data.genres;\n\n  const films = await fetchApi.getAllFilmsData({});\n\n  const markup = renderApi.createFilmCardsMarkup(films.data.results, genres);\n\n  renderApi.renderMarkup({\n    selector: '.films__list',\n    innerHtml: true,\n    createMarkypFunc: markup,\n  });\n\n  createPages(fetchApi.actualPage, fetchApi.totalPages);\n}\n","export function checkFilmTrailer(trailers) {\n  const findTrailer = trailers.find(video => video.type === 'Trailer');\n\n  return findTrailer === undefined ? trailers[0] : findTrailer;\n}\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));","import * as basicLightbox from 'basiclightbox';\nimport RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport { checkFilmTrailer } from '../checkers/filmTrailerChecker';\n\nconst fetchApi = new FetchFilmsApi();\nconst renderApi = new RenderApi();\n\nexport default async function onShowTrailer(e) {\n  const idTrailer = e.currentTarget.dataset.id;\n\n  const showTrailersRequest = await fetchApi.getFilmTrailerById({\n    id: idTrailer,\n  });\n\n  const showTrailers = showTrailersRequest.data.results;\n\n  if (showTrailers.length === 0) {\n    const instance = basicLightbox.create(\n      renderApi.createModalWithoutFilmTrailer()\n    );\n\n    instance.show();\n\n    document.addEventListener('keydown', onPressEsc, { once: true });\n\n    function onPressEsc(e) {\n      if (e.code !== 'Escape') {\n        return;\n      }\n\n      instance.close();\n    }\n\n    return;\n  }\n\n  const trailer = checkFilmTrailer(showTrailers);\n\n  const instance = basicLightbox.create(\n    renderApi.createModalFilmTrailer(trailer.key)\n  );\n\n  instance.show();\n\n  document.addEventListener('keydown', onPressEsc, { once: true });\n\n  function onPressEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    instance.close();\n  }\n}\n","export function checkFilmDetailes({\n  poster_path,\n  title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const fixedGenres = genres[0].name;\n\n  const roundVote = !Number.isInteger(vote_average)\n    ? vote_average.toFixed(1)\n    : String(vote_average);\n\n  const fixedVote = roundVote.includes('.0')\n    ? roundVote.replace('.0', '')\n    : roundVote;\n\n  const roundPopularity = !Number.isInteger(popularity)\n    ? popularity.toFixed(1)\n    : String(popularity);\n\n  const fixedPopularity = roundPopularity.includes('.0')\n    ? roundPopularity.replace('.0', '')\n    : roundPopularity;\n\n  return {\n    poster_path,\n    title,\n    fixedGenres,\n    vote_count,\n    fixedVote,\n    fixedPopularity,\n    overview,\n  };\n}\n","import RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport * as basicLightbox from 'basiclightbox';\nimport onShowTrailer from './showTrailer';\nimport { checkFilmDetailes } from '../checkers/filmDetailesChecker';\n\nconst fetchApi = new FetchFilmsApi();\nconst renderApi = new RenderApi();\n\nexport async function onShowFilmModal(event) {\n  if (!event.target.classList.contains('film__img')) {\n    return;\n  }\n\n  document.body.style.overflow = 'hidden';\n\n  event.currentTarget.removeEventListener('click', onShowFilmModal);\n\n  const filmId = event.target.dataset.id;\n\n  const moreInfo = await fetchApi.getCurrentFilm({ id: filmId });\n\n  const moreInfoObj = checkFilmDetailes(moreInfo.data);\n\n  const instance = basicLightbox.create(\n    renderApi.createModalFilmDetails(moreInfoObj, filmId),\n    {\n      onShow: instance => {\n        instance.element().querySelector('.film-modal__close').onclick =\n          instance.close;\n      },\n\n      onClose: instance => {\n        document.body.style.overflow = 'visible';\n        event.target\n          .closest('.films__list')\n          .addEventListener('click', onShowFilmModal);\n      },\n    }\n  );\n\n  instance.show();\n\n  document.addEventListener('keydown', onPressEsc, { once: true });\n\n  function onPressEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    instance.close();\n  }\n\n  // Trailer\n  const trailerBtn = document.querySelector('.film-modal__trailer');\n  trailerBtn.addEventListener('click', onShowTrailer);\n  //\n}\n","import { refs } from './refsApiServ';\n\nrefs.themeBtnRef.addEventListener('click', themeChange);\n\nexport function themeChange() {\n  const isLight =\n    refs.themeBtnRef.getAttribute('data-current') === 'true' || false;\n    \n  refs.themeBtnRef.setAttribute('data-current', !isLight);\n\n  localStorage.setItem('light', JSON.stringify(isLight));\n  \n\n  let localTems = localStorage.getItem('light')    \n  \n  if (localTems === 'false') {\n      document.body.classList.add('dark-theme');\n      refs.lightIconRef.classList.remove('is-hidden'); \n      refs.darkIconRef.classList.add('is-hidden');\n  } else {\n      document.body.classList.remove('dark-theme');\n      refs.darkIconRef.classList.remove('is-hidden');\n      refs.lightIconRef.classList.add('is-hidden'); \n  }\n}\n\nlet localTems = localStorage.getItem('light')\n if (localTems === 'false') {\n      themeChange()\n}","import { refs } from './refsApiServ';\nexport { onScroll, onScrollToTopBtn, onScrollToDownBtn };\n    \n\nrefs.btnScrollTopRef.addEventListener('click', onScrollToTopBtn);\nrefs.btnScrollDownRef.addEventListener('click', () => {\n  onScrollToDownBtn(refs.footerRef);\n});\nwindow.addEventListener('scroll', onScroll);\n\nrefs.btnScrollTopRef.classList.add('btn__up--hidden');\nrefs.btnScrollDownRef.classList.add('btn__up--hidden');\nfunction onScroll() {\n  const scrolled = window.pageYOffset;\n  const coords = document.documentElement.clientHeight;\n\n  if (scrolled < coords) {\n    refs.btnScrollTopRef.classList.add('btn__up--hidden');\n    refs.btnScrollDownRef.classList.remove('btn__up--hidden');\n  }\n  if (scrolled > coords) {\n    refs.btnScrollTopRef.classList.remove('btn__up--hidden');\n    refs.btnScrollDownRef.classList.add('btn__up--hidden');\n  }\n}\n\nfunction onScrollToTopBtn() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n\nfunction onScrollToDownBtn(e) {\n  window.scroll({ left: 0, top: e.offsetTop, behavior: 'smooth' });\n}\n","import './backend'\nimport FetchFilmsApi from './helpers/fetchFilmsApi';\nimport RenderApi from './helpers/renderFuncApi';\nimport searchMovie from './main/searchMovie';\nimport { spinnerOnMain } from './spinner/spinner';\nimport { renderMarkup } from './main/renderMainMarkup';\nimport { onShowFilmModal } from './modals/filmDetailsModal';\nimport { refs } from './helpers/refsApiServ';\nimport { onCreatePagination } from './pagination/pagination';\nimport {onScroll, onScrollToTopBtn, onScrollToDownBtn} from './helpers/btnScroll'\nimport { themeChange } from './helpers/changeTheme';\n// Class\nexport const fetchApi = new FetchFilmsApi();\nexport const renderApi = new RenderApi();\n\n// First render\nspinnerOnMain.enabled({ timeDelay: 12, delayAfterStop: 400 });\nrenderMarkup();\n\n// Modal film\nrefs.filmList.addEventListener('click', onShowFilmModal);\n\n// Pagination\nrefs.pagRef.addEventListener('click', onCreatePagination);\n\n","import { refs } from '../helpers/refsApiServ';\n\nrefs.btnOpenRef.addEventListener('click', onBtnToggle);\nrefs.btnCloseRef.addEventListener('click', onBtnToggle);\nrefs.body.addEventListener('keydown', onModalKeydown);\nrefs.teamModal.addEventListener('click', onBackdropClose);\n\nfunction onToggle() {\n  refs.teamModal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n}\n\nfunction onBtnToggle() {\n  onToggle();\n}\n\nfunction onBackdropClose(e) {\n  if (!e.target.classList.contains('backdrop')) {\n    return;\n  }\n  onToggle();\n}\n\nfunction onModalKeydown(e) {\n  if (refs.teamModal.classList.contains('is-hidden')) {\n    return;\n  }\n  if (e.code === 'Escape') {\n    onToggle();\n  }\n\n  refs.teamModal.removeEventListener('click', onBackdropClose);\n}\n","import { fetchApi } from '../main';\nimport { renderMarkup } from '../main/renderMainMarkup';\nimport { refs } from '../helpers/refsApiServ';\n\nexport function onCreatePagination(e) {\n  const currentPage = refs.currentPage;\n  const nextPage = refs.nextPage;\n  const prevPage = refs.prevPage;\n\n  // Numb page\n  if (e.target.dataset.numbId) {\n    fetchApi.actualPage = Number(e.target.dataset.numbId);\n  }\n\n  // Prev page\n\n  if (e.target.dataset.id === 'prev') {\n    if (fetchApi.actualPage === 1) {\n      return;\n    }\n\n    fetchApi.actualPage -= 1;\n  }\n\n  // Next page\n  if (e.target.dataset.id === 'next') {\n    if (fetchApi.actualPage === fetchApi.totalPages) {\n      return;\n    }\n\n    fetchApi.actualPage += 1;\n  }\n\n  // Toggle disable on next or prev page\n\n  if (fetchApi.actualPage === fetchApi.totalPages) {\n    nextPage.classList.add('disabled');\n  } else if (nextPage.classList.contains('disabled')) {\n    nextPage.classList.remove('disabled');\n  }\n\n  if (fetchApi.actualPage === 1) {\n    prevPage.classList.add('disabled');\n  } else {\n    prevPage.classList.remove('disabled');\n  }\n\n  // Рендер сторінки\n  renderMarkup();\n  currentPage.innerHTML = fetchApi.actualPage;\n}\n"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","parcelRequire","__esModule","len","length","i","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","self","ReferenceError","$c1b1a34fae3d3c27$var$setPrototypeOf","o1","p1","setPrototypeOf","p","__proto__","Parent","args","Class","$bd045042b29ce6c9$var$construct","apply","arguments","$bd045042b29ce6c9$var$_setPrototypeOf","$bd045042b29ce6c9$var$isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Parent1","args1","Class1","a","push","instance","Function","bind","fn","indexOf","$b9926a5835d271e3$var$getPrototypeOf","getPrototypeOf","Boolean","valueOf","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","receiver","privateMap","action","has","get","descriptor","privateCollection","set","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","$84ebd01c1ddf4bef$exports","this","err","undefined","$665014edacbfe17b$exports","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","$74e7f8130373505f$exports","protoProps","staticProps","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$21b983287c82ebd3$var$runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","next1","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$ds8z5","$ae7f60fd48750bb9$exports","subClass","superClass","$ae7f60fd48750bb9$var$_setPrototypeOf","$30de785adf49c647$exports","$30de785adf49c647$var$wrapNativeSuper","$30de785adf49c647$var$_construct","$30de785adf49c647$var$_interopRequireDefault","$30de785adf49c647$var$_isNativeFunction","$30de785adf49c647$var$_getPrototypeOf","$30de785adf49c647$var$_setPrototypeOf","_cache","Map","Wrapper","$2059300b4b5a348b$exports","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","$2059300b4b5a348b$var$_possibleConstructorReturn","$2059300b4b5a348b$var$_interopRequireDefault","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$exports","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","setTimeout","clearTimeout","e1","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","concat","$4acf49f6c3e67aec$var$drainQueue","timeout","run","marker","$4acf49f6c3e67aec$var$runClearTimeout","$4acf49f6c3e67aec$var$Item","array","$4acf49f6c3e67aec$var$noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$1d9d263a787f8021$export$588c7fdda06fbb0a","assertion","message","$1d9d263a787f8021$export$a39cad550e7ab28a","$1d9d263a787f8021$var$stringToByteArray$1","str","out","c","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","stringToByteArray","c2","u","c22","c31","$1d9d263a787f8021$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$1d9d263a787f8021$export$e510a73ee562749","utf8Bytes","$1d9d263a787f8021$export$b3b2de96497acc47","$1d9d263a787f8021$export$4b5284a3025a455","replace","console","$1d9d263a787f8021$export$6c40052bed430212","$1d9d263a787f8021$export$54e9fb29908872fa","source","prop","$1d9d263a787f8021$export$c36915b22ce77c19","navigator","$1d9d263a787f8021$export$872f8323f01d7ae0","window","indexedDB","$1d9d263a787f8021$var$getDefaultsFromGlobal","$parcel$global","$1d9d263a787f8021$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$1d9d263a787f8021$var$getDefaultsFromEnvVariable","document","match","cookie","$1d9d263a787f8021$export$c62426fdd000a97e","JSON","parse","decoded","$1d9d263a787f8021$var$getDefaultsFromCookie","productName","_b","host","lastIndexOf","substring","separatorIndex","port","$1d9d263a787f8021$export$3dfb6827a9f89756","_a","$1d9d263a787f8021$var$getDefaults","config","$1d9d263a787f8021$export$85f6557964517f1a","Deferred","_this","$parcel$interopDefault","promise","callback","iat","sub","token","user_id","assign","project","stringify","payload","Error1","FirebaseError","code","customData","captureStackTrace","$1d9d263a787f8021$export$3fa6e1b18a3b2d40","service","serviceName","errors","ErrorFactory","_len","data","_key","fullCode","template","$1d9d263a787f8021$var$replaceTemplate","fullMessage","$1d9d263a787f8021$export$dd24e9cd51226c56","claims","signature","split","$1d9d263a787f8021$export$2344b14b097df817","$1d9d263a787f8021$export$871de8747c9eaa88","contextObj","res","$1d9d263a787f8021$export$9cb4719e2e525b7a","b","_didIteratorError","_iteratorError","bKeys","includes","k","aProp","bProp","_iteratorNormalCompletion","_iterator","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","k1","aKeys","$1d9d263a787f8021$var$isObject","thing","$1d9d263a787f8021$export$ac4103b836844853","querystringParams","params","_loop","_step","_value","arrayVal","encodeURIComponent","Component","instanceFactory","multipleInstances","onInstanceCreated","Provider","container","identifier","instancesDeferred","normalizedIdentifier","deferred","isInitialized","shouldAutoInitialize","instanceIdentifier","optional","options","component","entries","getOrInitializeService","delete","instancesOptions","instances","_ctx","services","map","INTERNAL","filter","_delete","$4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME","opts","_options","normalizeInstanceIdentifier","isComponentSet","instanceDeferred","normalizedDeferredIdentifier","existingCallbacks","onInitCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","$f4758df7279d6c6a$export$243e62d78d3b544d","LogLevel1","$f4758df7279d6c6a$var$instances","DEBUG","VERBOSE","INFO","WARN","ERROR","logType","logLevel","toISOString","$f4758df7279d6c6a$var$ConsoleMethod","_console","now","Logger","_logLevel","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$defaultLogHandler","_userLogHandler","val","$f4758df7279d6c6a$var$levelStringToEnum","_logHandler","$9eddae5a012cde57$exports","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","$9eddae5a012cde57$var$_defineProperty","$9eddae5a012cde57$var$_interopRequireDefault","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$f1bf9542bc9ee5ed$var$cursorRequestMap","WeakMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","IDBTransaction","objectStoreNames","objectStore","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","$f1bf9542bc9ee5ed$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","_func","tx","sort","$f1bf9542bc9ee5ed$var$transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","IDBRequest","request","success","newValue","$7818c326be87ea84$export$ca0ed41b1a2af7e","ref","blocked","upgrade","blocking","terminated","open","openPromise","event","oldVersion","newVersion","db","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","targetFuncName","useIndex","isWrite","_callee","storeName","_target","_$target","_args","store","index","shift","all","oldTraps","PlatformLoggerServiceImpl","getProviders","provider","$0913f93b5b3c9bac$var$isVersionServiceProvider","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$logger","$f4758df7279d6c6a$export$efa9a398d6368992","$0913f93b5b3c9bac$export$9f30fa0c10967f7f","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$hKHmD","$0913f93b5b3c9bac$var$name$o","app","debug","componentName","$0913f93b5b3c9bac$export$fa5244b94c62d36a","$0913f93b5b3c9bac$export$fa0d6da0f5838f50","name1","getProvider","getImmediate","heartbeatController","triggerHeartbeat","$0913f93b5b3c9bac$var$ERROR_FACTORY","$0913f93b5b3c9bac$var$ERRORS","FirebaseAppImpl","_isDeleted","automaticDataCollectionEnabled","_automaticDataCollectionEnabled","checkDestroyed","_config","_container","setLogLevelImpl","appName","name3","$4d80d01579d5bd6a$export$436a80eea5d5c0c5","$0913f93b5b3c9bac$export$9566bce3835c0f28","newApp","$0913f93b5b3c9bac$export$f9962582c9e66d99","name5","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","$0913f93b5b3c9bac$export$c55cfd413944906d","warn","warning","$4d80d01579d5bd6a$export$16fa2f45be04daa8","library","$0913f93b5b3c9bac$var$STORE_NAME","createObjectStore","idbGetError","$0913f93b5b3c9bac$var$computeKey","t0","$0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB","heartbeatObject","_storage","read","agent","platformLogger","getPlatformInfoString","date","$0913f93b5b3c9bac$var$getUTCDateString","_heartbeatsCache","hbTimestamp","singleDateHeartbeat","overwrite","heartbeatsToSend","unsentEntries","headerString","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","$a9d69158b154a93b$var$SDK_VERSION","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","$1d9d263a787f8021$export$fac44ee5b035f737","storedVal","getItem","$a9d69158b154a93b$var$MemoryStorage","MemoryStorage","cache_","isInMemoryStorage","$a9d69158b154a93b$var$createStoragefor","domStorageName","domStorage","$a9d69158b154a93b$var$DOMStorageWrapper","$a9d69158b154a93b$var$PersistentStorage","$a9d69158b154a93b$var$SessionStorage","$1d9d263a787f8021$export$655666783217a925","sha11","digest","sha1Bytes","varArgs","$a9d69158b154a93b$var$buildLogMessage_","$a9d69158b154a93b$var$logger","$a9d69158b154a93b$var$enableLogging$1","logger_","persistent","$a9d69158b154a93b$var$logClient","log","remove","$a9d69158b154a93b$var$log","$a9d69158b154a93b$var$firstLog_","$a9d69158b154a93b$var$logWrapper","prefix","$a9d69158b154a93b$var$error","$a9d69158b154a93b$var$fatal","$a9d69158b154a93b$var$isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","$a9d69158b154a93b$var$MIN_NAME","$a9d69158b154a93b$var$MAX_NAME","$a9d69158b154a93b$var$nameCompare","bAsInt","$a9d69158b154a93b$var$stringCompare","$a9d69158b154a93b$var$ObjectToUniqueKey","segsize","v","f","ln","Infinity","Math","pow","bias","round","floor","hexByte","toLowerCase","RegExp","time","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","_this1","listener","addTokenListener","$a9d69158b154a93b$var$warn","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","_this2","addAuthTokenListener","removeAuthTokenListener","errorMessage","$a9d69158b154a93b$var$EmulatorTokenProvider","EmulatorTokenProvider","accessToken","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","RepoInfo","nodeAdmin","_host","substr","internalHost","_domain","newHost","isCacheableHost","protocol","secure","query2","repoInfo","connURL","$a9d69158b154a93b$var$LONG_POLLING","isCustomHost","pairs","StatsCollection","name2","amount","counters_","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","responseNum","onClose","requestNum","toProcess","$a9d69158b154a93b$var$exceptionGuard","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","BrowserPollConnection","bytesSent","$a9d69158b154a93b$var$statsManagerGetCollection","$a9d69158b154a93b$var$APP_CHECK_TOKEN_PARAM","_this4","curSegmentNum","onDisconnect_","onDisconnect1","myPacketOrderer","$a9d69158b154a93b$var$PacketReceiver","onMessage","isClosed_","onClosed_","$1d9d263a787f8021$export$5d1d834fbbf8bab7","readyState","called","wrappedFn","attachEvent","_this3","incrementIncomingBytes_","scriptTagHolder","connectTimeoutTimer_","everConnected_","command","$a9d69158b154a93b$var$FIREBASE_LONGPOLL_START_PARAM","id","arg1","password","arg2","sendNewPolls","closeAfter","handleResponse","pN","urlParams","random","$a9d69158b154a93b$var$PROTOCOL_VERSION","connectURL","urlFn","log_","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","body","removeChild","shutdown_","dataStr","stats_","incrementCounter","base64data","dataSegs","$a9d69158b154a93b$var$splitStringBySize","$a9d69158b154a93b$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","createElement","src","style","display","bytesReceived","forceAllow_","forceDisallow_","location","href","FirebaseIFrameScriptHolder","commandCB","onMessageCB","onDisconnect2","currentSerial","uniqueCallbackIdentifier","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","stack","alive","innerHTML","onDisconnect3","onDisconnect","myPW","newRequest_","outstandingRequests","size","pendingSegs","theURL","d","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","url","serial","doNewRequest","keepaliveTimeout","loadCB","_this5","newScript","onload","onreadystatechange","rstate","parentNode","appendChild","iframe","contentWindow","contentDocument","$a9d69158b154a93b$var$WebSocketImpl","MozWebSocket","WebSocket","connectionURL_","WebSocketConnection","onDisconnect4","device","headers","platform","proxy","origin","mySock","onopen","onclose","handleIncomingFrame","m","frames","totalFrames","fullMess","jsonMess","$1d9d263a787f8021$export$c5a53ce6a17cf18d","frameCount","handleNewFrameCount_","mess","appendFrame_","remainingData","extractFrameCount_","resetKeepAlive","sendString_","keepaliveTimer","setInterval","hostname","$a9d69158b154a93b$var$FORGE_DOMAIN_RE","isOldAndroid","userAgent","oldAndroidMatch","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","isWebSocketsAvailable","$a9d69158b154a93b$var$WebSocketConnection","isSkipPollConnection","previouslyFailed","ALL_TRANSPORTS","transport","transports","transports_","globalTransportInitialized_","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","pendingDataMessages","$a9d69158b154a93b$var$TransportManager","conn","transportManager_","initialTransport","conn_","nextTransportId_","onConnectionLost","disconnReceiver_","tx_","healthyTimeout_","isHealthy_","markConnectionHealthy","healthyTimeoutMS","connectionCount","onConnectionLost_","everConnected","secondaryConn_","onSecondaryConnectionLost_","rx_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","$a9d69158b154a93b$var$requireKey","onSecondaryControl_","proceedWithUpgrade_","send","start","tryCleanupConnection","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","onConnectionShutdown_","sendPingOnPrimaryIfNecessary_","sessionId","handshake","s","state_","onConnectionEstablished_","timestamp","version2","upgradeTransport","startUpgrade_","onDisconnect5","$a9d69158b154a93b$var$setTimeoutNonBlocking","closeConnections_","start_","reason","ServerActions","pathString","onComplete","stats","allowedEvents_","EventEmitter","$1d9d263a787f8021$export$a7a9523472993e97","eventType","listeners_","validateEventType_","eventData","getInitialEvent","splice","find","et","OnlineMonitor","_super","online_","trigger","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","Path","path","begin","pieces","childPathObj","$a9d69158b154a93b$var$Path","i1","$a9d69158b154a93b$var$newRelativePath","outerPath","innerPath","outer","inner","$a9d69158b154a93b$var$pathPopFront","other","$a9d69158b154a93b$var$pathGetLength","j","ValidationPath","errorPrefix_","byteLength_","max","parts_","$1d9d263a787f8021$export$9536dc0a75b20bf9","validationPath","$a9d69158b154a93b$var$validationPathToErrorString","VisibilityMonitor","visibilityChange","hidden","visible_","visible","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","$a9d69158b154a93b$var$RECONNECT_MIN_DELAY","realtime_","$a9d69158b154a93b$var$OnlineMonitor","getInstance","onOnline_","onResponse","curReqNum","requestNumber_","connected_","requestCBHash_","initConnection_","_path","query4","currentHashFn","tag","queryId","listens","listenSpec","sendListen_","get1","outstandingGets_","sendRequest","outstandingGetCount_","query5","_queryIdentifier","req","_queryObject","hashFn","status","warnOnListenWarnings_","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","$1d9d263a787f8021$export$9565ca3d387f8aa0","requestData","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query6","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","response","hash","putInternal","outstandingPuts_","outstandingPutCount_","queued","errorReason","reqNum","onDataPush_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","maxReconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectAttempt","reconnectDelay","min","onDataMessage","onReady","onDisconnect6","onRealtimeDisconnect_","nextConnectionId_","canceled","sendRequestFn","closeFn","forceTokenRefresh_","t1","ref1","connection","$a9d69158b154a93b$var$Connection","t2","interruptReasons_","delta","put","query7","q","removeListen_","listen","normalizedPathString","map1","statusCode","explanation","invalidAuthTokenCount_","notifyForInvalidToken","tryAuth","queries","setMaxNode","MAX_NODE","i3","sendGet_","clientName","reportStats","warnings","$1d9d263a787f8021$export$e51ae4db7b428f67","indexSpec","query8","_queryParams","getIndex","node","NamedNode","Index","compare","oldNode","newNode","oldWrapped","$a9d69158b154a93b$var$NamedNode","newWrapped","MIN","KeyIndex","$a9d69158b154a93b$var$KeyIndex","startKey","comparator","isReverse_","SortedMapIterator","cmp","isEmpty","right","nodeStack_","left","resultGenerator_","LLRBNode","color","RED","$a9d69158b154a93b$var$SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","copy","insert","fixUp_","smallest","isRed_","rotateRight_","moveRedRight_","removeMin_","colorFlip_","rotateLeft_","nl","nr","blackDepth","check_","BLACK","LLRBEmptyNode","$a9d69158b154a93b$var$LLRBNode","comparator_","SortedMap","root_","rightParent","minKey","setPriorityMaxNode","resultGenerator","$a9d69158b154a93b$var$SortedMapIterator","$a9d69158b154a93b$var$NAME_ONLY_COMPARATOR","$a9d69158b154a93b$var$NAME_COMPARATOR","$a9d69158b154a93b$var$LLRBEmptyNode","priority","$a9d69158b154a93b$var$doubleToIEEE754String","isLeafNode","priorityNode","$a9d69158b154a93b$var$MAX_NODE$2","getPriority","value_","priorityNode_","newPriorityNode","LeafNode","childName","__childrenNodeConstructor","childNode","newChildNode","front","$a9d69158b154a93b$var$pathGetFront","updateImmediateChild","updateChild","exportFormat","getValue","lazyHash_","toHash","$a9d69158b154a93b$var$priorityHashText","$l5bVx","compareToLeafNode_","otherLeaf","otherIndex","VALUE_TYPE_ORDER","otherLeafType","thisIndex","thisLeafType","PriorityIndex","aPriority","bPriority","indexCmp","$a9d69158b154a93b$var$LeafNode","$a9d69158b154a93b$var$MAX_NODE$1","$a9d69158b154a93b$var$PriorityIndex","Base12Num","num","bits","parseInt","bits_","current_","childList","keyFn","mapSortFn","low","high","namedNode","middle","chunkSize","buildBalancedTree","attachPennant","pennant","base12","isOne","nextBitIsOne","chunkSize1","buildPennant","$a9d69158b154a93b$var$Base12Num","root1","indexes_","indexSet_","IndexMap","indexKey","sortedMap","indexDefinition","sawIndexedValue","existingChildren","getIterator","Wrap","getNext","indexName","newIndexSet","newIndexes","indexedChildren","$a9d69158b154a93b$var$fallbackObject","$a9d69158b154a93b$var$buildChildSet","getCompare","existingSnap","newChildren","$a9d69158b154a93b$var$PRIORITY_INDEX","$a9d69158b154a93b$var$_defaultIndexMap","ChildrenNode","children_","indexMap_","$a9d69158b154a93b$var$validatePriorityNode","$a9d69158b154a93b$var$EMPTY_NODE","child2","getImmediateChild","getChild","updatePriority","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","INTEGER_REGEXP_","$a9d69158b154a93b$var$sha1","idx","predecessor","getPredecessorKey","resolveIndex_","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","startPost","peek","maxPost","endPost","getReverseIteratorFrom","$a9d69158b154a93b$var$KEY_INDEX","hasIndex","otherChildrenNode","equals","thisIter","otherIter","thisCurrent","otherCurrent","$a9d69158b154a93b$var$IndexMap","Default","$a9d69158b154a93b$var$MAX_NODE","ChildrenNode1","MaxNode","$a9d69158b154a93b$var$ChildrenNode","defineProperties","__EMPTY_NODE","$a9d69158b154a93b$var$nodeFromJSON","json","jsonLeaf","childData","children","childrenHavePriority","hinzeJsonObj","$a9d69158b154a93b$var$each","child3","childSet","sortedChildSet","PathIndex","indexPath_","snap","indexValue","name6","valueNode","$a9d69158b154a93b$var$pathSlice","$a9d69158b154a93b$var$ValueIndex","ValueIndex","compareTo","name7","$a9d69158b154a93b$var$VALUE_INDEX","$a9d69158b154a93b$var$changeValue","snapshotNode","$a9d69158b154a93b$var$changeChildAdded","$a9d69158b154a93b$var$changeChildRemoved","$a9d69158b154a93b$var$changeChildChanged","oldSnap","index_","IndexedFilter","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","indexedFilter_","$a9d69158b154a93b$var$IndexedFilter","RangedFilter","getStartPost_","endPost_","getEndPost_","startPost_","isWithinStart","startIsInclusive_","getStartPost","isWithinEnd","endIsInclusive_","getEndPost","matches","filtered","updateFullNode","makePost","getIndexStartValue","startName","minPost","hasEnd","LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","$a9d69158b154a93b$var$RangedFilter","limit_","getLimit","isViewFromLeft","startAfterSet_","endBeforeSet_","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","iterator1","getReverseIterator","count1","childKey","childSnap","changeAccumulator","newChildNamedNode","windowBoundary","oldEventCache","getFirstChild","getLastChild","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","loadsAllData","copy1","queryParams","orderBy","$a9d69158b154a93b$var$PathIndex","qs","startParam","endParam","$a9d69158b154a93b$var$queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","query9","listenId","getListenId_","thisListen","queryStringParameters","$a9d69158b154a93b$var$queryParamsToRestQueryStringParameters","restRequest_","query10","query11","param","_param","_this7","xhr","XMLHttpRequest","responseText","query12","isDefault","$a9d69158b154a93b$var$ServerActions","$a9d69158b154a93b$var$SnapshotHolder","SnapshotHolder","rootNode_","$a9d69158b154a93b$var$newSparseSnapshotTree","$a9d69158b154a93b$var$pathIsEmpty","sparseSnapshotTree","prefixPath","tree","$a9d69158b154a93b$var$OperationType","OperationType1","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","$a9d69158b154a93b$var$StatsListener","reportStats_","reportedStats","haveStatsToReport","$a9d69158b154a93b$var$emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","childTree","subtree","$a9d69158b154a93b$var$newEmptyPath","ListenComplete","OVERWRITE","Overwrite","Merge","MERGE","$a9d69158b154a93b$var$CacheNode","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGenerator","events","changes","registrations","eventCache","change","aWrapped","bWrapped","$a9d69158b154a93b$var$eventGeneratorCompareChanges","filteredChanges","materializedChange","prevName","getPredecessorChildName","$a9d69158b154a93b$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$a9d69158b154a93b$var$newViewCache","serverCache","$a9d69158b154a93b$var$viewCacheUpdateEventSnap","viewCache","eventSnap","$a9d69158b154a93b$var$viewCacheUpdateServerSnap","serverSnap","$a9d69158b154a93b$var$viewCacheGetCompleteEventSnap","getNode","$a9d69158b154a93b$var$viewCacheGetCompleteServerSnap","$a9d69158b154a93b$var$EmptyChildren","$a9d69158b154a93b$var$ImmutableTree","ImmutableTree","relativePath","predicate","child5","childExistingPathAndValue","findRootMostMatchingPathAndValue","$a9d69158b154a93b$var$pathChild","toSet","child7","child8","newTree","fold_","pathSoFar","accum","pathToFollow","currentRelativePath","foreachOnPath_","foreach_","childPath","$a9d69158b154a93b$var$CompoundWrite","CompoundWrite","writeTree_","$a9d69158b154a93b$var$compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree1","setTree","$a9d69158b154a93b$var$compoundWriteAddWrites","updates","newWrite","$a9d69158b154a93b$var$compoundWriteRemoveWrite","empty","newWriteTree2","$a9d69158b154a93b$var$compoundWriteHasCompleteWrite","$a9d69158b154a93b$var$compoundWriteGetCompleteNode","$a9d69158b154a93b$var$compoundWriteGetCompleteChildren","$a9d69158b154a93b$var$compoundWriteChildCompoundWrite","shadowingNode","errorPrefixFxn","$a9d69158b154a93b$var$compoundWriteApply","writeTree","priorityWrite","$a9d69158b154a93b$var$applySubtreeWrite","$a9d69158b154a93b$var$writeTreeChildWrites","$a9d69158b154a93b$var$newWriteTreeRef","errorPrefix","allWrites","writeId","$a9d69158b154a93b$var$writeTreeRemoveWrite","findIndex","removedWriteWasVisible","writeToRemove","removedWriteOverlapsWithOtherWrites","currentWrite","$a9d69158b154a93b$var$writeTreeRecordContainsPath_","$a9d69158b154a93b$var$pathContains","visibleWrites","$a9d69158b154a93b$var$writeTreeLayerTree_","$a9d69158b154a93b$var$writeTreeDefaultFilter_","lastWriteId","$a9d69158b154a93b$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","child10","deepNode","$a9d69158b154a93b$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","subMerge","$a9d69158b154a93b$var$compoundWriteIsEmpty","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$a9d69158b154a93b$var$writeTreeCalcCompleteEventChildren","$a9d69158b154a93b$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$a9d69158b154a93b$var$writeTreeRefShadowingWrite","$a9d69158b154a93b$var$writeTreeShadowingWrite","$a9d69158b154a93b$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","$a9d69158b154a93b$var$writeTreeCalcIndexedSlice","$a9d69158b154a93b$var$writeTreeRefCalcCompleteChild","existingServerCache","$a9d69158b154a93b$var$writeTreeCalcCompleteChild","$a9d69158b154a93b$var$writeTreeRefChild","$a9d69158b154a93b$var$ChildChangeAccumulator","ChildChangeAccumulator","changeMap","oldChange","oldType","$a9d69158b154a93b$var$NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","child","$a9d69158b154a93b$var$WriteTreeCompleteChildSource","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","child11","$a9d69158b154a93b$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","newViewCache1","filterServerNode","accumulator","fromUser","$a9d69158b154a93b$var$viewProcessorApplyUserOverwrite","fromServer","tagged","isFiltered","$a9d69158b154a93b$var$viewProcessorApplyServerOverwrite","$a9d69158b154a93b$var$viewProcessorCacheHasChild","curViewCache","foreach","$a9d69158b154a93b$var$viewProcessorApplyUserMerge","$a9d69158b154a93b$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$a9d69158b154a93b$var$viewProcessorRevertUserWrite","ackPath","changedChildren","name8","serverCachePath","mergePath","isCompleteForPath","changedChildren1","$a9d69158b154a93b$var$viewProcessorAckUserWrite","LISTEN_COMPLETE","oldServerNode","$a9d69158b154a93b$var$viewProcessorGenerateEventCacheAfterServerEvent","newViewCache5","$a9d69158b154a93b$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","newEventChild","childChangePath","eventChildUpdate","filtersNodes","changedSnap","newServerCache","serverFilter","oldServerSnap","newServerNode","newViewCache3","newViewCache4","getCompleteChild","$a9d69158b154a93b$var$pathGetBack","$a9d69158b154a93b$var$pathParent","$a9d69158b154a93b$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$a9d69158b154a93b$var$View","View","initialViewCache","hasLimit","$a9d69158b154a93b$var$LimitedFilter","initialServerCache","initialEventCache","indexFilter","eventGenerator_","$a9d69158b154a93b$var$EventGenerator","view","$a9d69158b154a93b$var$viewIsEmpty","eventRegistrations_","$a9d69158b154a93b$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","remaining","existing","hasAnyCallback","processor_","moves","eventRegistrations","syncPoint","optCompleteServerCache","views","$a9d69158b154a93b$var$viewApplyOperation","view1","$a9d69158b154a93b$var$syncPointGetView","query13","serverCacheComplete","eventCacheComplete","query14","initialChanges","query15","$a9d69158b154a93b$var$syncPointHasCompleteView","viewQueryId","query","removed","view2","$a9d69158b154a93b$var$referenceConstructor$1","_repo","$a9d69158b154a93b$var$syncPointGetCompleteServerCache","$a9d69158b154a93b$var$viewGetCompleteServerCache","query16","$a9d69158b154a93b$var$syncPointGetCompleteView","$a9d69158b154a93b$var$syncPointViewExistsForQuery","query17","$a9d69158b154a93b$var$syncPointViewForQuery","SyncTree","listenProvider_","pendingWriteTree_","$a9d69158b154a93b$var$syncTreeApplyUserOverwrite","syncTree","newData","$a9d69158b154a93b$var$syncTreeApplyOperationToSyncPoints_","$a9d69158b154a93b$var$Overwrite","$a9d69158b154a93b$var$syncTreeAckUserWrite","$a9d69158b154a93b$var$writeTreeGetWrite","$a9d69158b154a93b$var$AckUserWrite","$a9d69158b154a93b$var$syncTreeApplyServerOverwrite","$a9d69158b154a93b$var$syncTreeRemoveEventRegistration","query18","skipListenerDedup","maybeSyncPoint","syncPointTree_","removedAndEvents","$a9d69158b154a93b$var$syncPointRemoveEventRegistration","$a9d69158b154a93b$var$syncPointIsEmpty","removingDefault","query19","covered","findOnPath","parentSyncPoint","newViews","$a9d69158b154a93b$var$syncTreeCollectDistinctViewsForSubTree_","$a9d69158b154a93b$var$syncTreeCreateListenerForView_","defaultTag","stopListening","$a9d69158b154a93b$var$syncTreeQueryForListening_","queryToRemove","$a9d69158b154a93b$var$syncTreeApplyTaggedQueryOverwrite","$a9d69158b154a93b$var$syncTreeQueryKeyForTag_","queryKey","r","$a9d69158b154a93b$var$syncTreeApplyTaggedOperation_","queryPath","query20","foreachOnPath","pathToSyncPoint","sp","foundAncestorDefaultView","$a9d69158b154a93b$var$SyncPoint","foreachChild","childSyncPoint","$a9d69158b154a93b$var$syncTreeMakeQueryKey_","queryToTagMap","tagToQueryMap","$a9d69158b154a93b$var$syncPointAddEventRegistration","skipSetupListener","$a9d69158b154a93b$var$syncTreeCalcCompleteEventCache","serverCache1","childWritesCache","$a9d69158b154a93b$var$syncTreeApplyOperationHelper_","childOperation","childServerCache","$a9d69158b154a93b$var$syncPointApplyOperation","syncPointTree","operationForChild","$a9d69158b154a93b$var$syncTreeTagForQuery","query22","$a9d69158b154a93b$var$syncTreeParseQueryKey_","$a9d69158b154a93b$var$ListenComplete","$a9d69158b154a93b$var$newOperationSourceServerTaggedQuery","$a9d69158b154a93b$var$syncTreeApplyTaggedListenComplete","$a9d69158b154a93b$var$syncTreeApplyListenComplete","query1","$a9d69158b154a93b$var$errorForServerCode","query23","query24","splitIndex","maybeChildSyncPoint","$a9d69158b154a93b$var$referenceConstructor","query25","$a9d69158b154a93b$var$syncTreeRemoveTags_","removedQueryKey","removedQuery","removedQueryTag","$a9d69158b154a93b$var$syncTreeGetNextQueryTag_","query26","view3","startListening","childMap","childQueries","queriesToStop","queryToStop","ExistingValueProvider","syncTree_","DeferredValueProvider","path_","existingVal","serverValues","$a9d69158b154a93b$var$resolveComplexDeferredValue","$a9d69158b154a93b$var$resolveScalarDeferredValue","op","existingNode","$a9d69158b154a93b$var$DeferredValueProvider","$a9d69158b154a93b$var$resolveDeferredLeafValue","rawPri","leafNode","childrenNode","$a9d69158b154a93b$var$resolveDeferredValue","name9","parent","childCount","Tree","$a9d69158b154a93b$var$treeSubTree","pathObj","child13","$a9d69158b154a93b$var$Tree","$a9d69158b154a93b$var$treeGetValue","$a9d69158b154a93b$var$treeSetValue","$a9d69158b154a93b$var$treeUpdateParents","$a9d69158b154a93b$var$treeHasChildren","includeSelf","childrenFirst","child15","$a9d69158b154a93b$var$treeGetPath","child16","childEmpty","$a9d69158b154a93b$var$treeIsEmpty","childExists","$a9d69158b154a93b$var$INVALID_KEY_REGEX_","$a9d69158b154a93b$var$INVALID_PATH_REGEX_","$a9d69158b154a93b$var$MAX_LEAF_SIZE_","$a9d69158b154a93b$var$isValidKey","$a9d69158b154a93b$var$isValidPathString","$a9d69158b154a93b$var$validateFirebaseData","errorPrefix1","$a9d69158b154a93b$var$ValidationPath","hasDotValue","hasActualChild","child1","last","$a9d69158b154a93b$export$8637b026ace8abb1","fnName","argumentName","$1d9d263a787f8021$export$adea4917e02d93dc","enableLoggingImpl","search","creatorFunction","changeTree","fromObject","$a9d69158b154a93b$var$Merge","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$75bf849a4f5d39f1$var$db","$a9d69158b154a93b$export$ad30f661f41f4d90","$a9d69158b154a93b$export$eff4d24c3ff7876e","snapshot","$37616d1d2d9e1de3$exports","$37616d1d2d9e1de3$var$_classExtractFieldDescriptor","$37616d1d2d9e1de3$var$_classApplyDescriptorGet","$37616d1d2d9e1de3$var$_interopRequireDefault","$665bb80dc57e205a$exports","$665bb80dc57e205a$var$_checkPrivateRedeclaration","$665bb80dc57e205a$var$_interopRequireDefault","$a11a0d8e92c06afc$exports","$a11a0d8e92c06afc$var$_classExtractFieldDescriptor","$a11a0d8e92c06afc$var$_classApplyDescriptorSet","$a11a0d8e92c06afc$var$_interopRequireDefault","$fc8f2e2c969d032f$export$2e2bcd8739ae039","thisArg","cache","$8ca3655f37d9652c$var$toString","$8ca3655f37d9652c$var$getPrototypeOf","$8ca3655f37d9652c$var$kindOf","$8ca3655f37d9652c$var$kindOfTest","$8ca3655f37d9652c$var$typeOfTest","$8ca3655f37d9652c$var$isArray","$8ca3655f37d9652c$var$isUndefined","$8ca3655f37d9652c$var$isArrayBuffer","$8ca3655f37d9652c$var$isString","$8ca3655f37d9652c$var$isFunction","$8ca3655f37d9652c$var$isNumber","$8ca3655f37d9652c$var$isObject","$8ca3655f37d9652c$var$isPlainObject","$8ca3655f37d9652c$var$isDate","$8ca3655f37d9652c$var$isFile","$8ca3655f37d9652c$var$isBlob","$8ca3655f37d9652c$var$isFileList","$8ca3655f37d9652c$var$isURLSearchParams","$8ca3655f37d9652c$var$forEach","l","_allOwnKeys","allOwnKeys","getOwnPropertyNames","$8ca3655f37d9652c$var$findKey","$8ca3655f37d9652c$var$_global","$8ca3655f37d9652c$var$isContextDefined","TypedArray","hasOwnProperty1","$8ca3655f37d9652c$var$isTypedArray","Uint8Array","$8ca3655f37d9652c$var$isHTMLForm","$8ca3655f37d9652c$var$hasOwnProperty","$8ca3655f37d9652c$var$isRegExp","$8ca3655f37d9652c$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","$8ca3655f37d9652c$export$2e2bcd8739ae039","isArrayBuffer","isBuffer","isFormData","pattern","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isBoolean","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isRegExp","isFunction","isStream","pipe","isURLSearchParams","isTypedArray","isFileList","$8ca3655f37d9652c$var$merge","caseless","assignValue","targetKey","extend","trim","stripBOM","content","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","kindOf","kindOfTest","endsWith","searchString","position","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","exec","isHTMLForm","hasOwnProp","reduceDescriptors","freezeMethods","toObjectSet","arrayOrString","delimiter","toCamelCase","p2","toUpperCase","noop","toFiniteNumber","defaultValue","isFinite","findKey","global","isContextDefined","toJSONObject","visit","reducedValue","$44aee3fe793a4c74$var$AxiosError","$8ca3655f37d9652c$exports","toJSON","description","number","fileName","lineNumber","columnNumber","$44aee3fe793a4c74$var$prototype","$44aee3fe793a4c74$var$descriptors","customProps","axiosError","cause","$24f87a6f86a8996f$export$a143d493d941bafc","$3caef5c332c7293f$export$d622b2ad8d90c771","$3caef5c332c7293f$export$6100ba28696e12de","$44aee3fe793a4c74$export$2e2bcd8739ae039","$c764dedfb56f5a44$export$2e2bcd8739ae039","b64","tmp","lens","$3caef5c332c7293f$var$getLens","validLen","placeHoldersLen","$3caef5c332c7293f$var$Arr","$3caef5c332c7293f$var$_byteLength","curByte","len2","$3caef5c332c7293f$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","$3caef5c332c7293f$var$encodeChunk","$3caef5c332c7293f$var$lookup","$56a54f6ebabce67d$export$aafa59e2e03f2942","$56a54f6ebabce67d$export$68d8715fc104d294","$3caef5c332c7293f$var$code","$3caef5c332c7293f$var$i","$3caef5c332c7293f$var$len","len1","end","i2","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","$24f87a6f86a8996f$var$customInspectSymbol","$24f87a6f86a8996f$var$Buffer","$24f87a6f86a8996f$var$K_MAX_LENGTH","$24f87a6f86a8996f$var$createBuffer","RangeError","buf","encodingOrOffset","$24f87a6f86a8996f$var$allocUnsafe","$24f87a6f86a8996f$var$from","string","encoding","isEncoding","$24f87a6f86a8996f$var$byteLength","actual","$24f87a6f86a8996f$var$fromString","arrayView","$24f87a6f86a8996f$var$isInstance","$24f87a6f86a8996f$var$fromArrayBuffer","byteOffset","byteLength","$24f87a6f86a8996f$var$fromArrayLike","$24f87a6f86a8996f$var$fromArrayView","SharedArrayBuffer","$24f87a6f86a8996f$var$checked","$24f87a6f86a8996f$var$numberIsNaN","$24f87a6f86a8996f$var$fromObject","toPrimitive","$24f87a6f86a8996f$var$assertSize","mustMatch","loweredCase","$24f87a6f86a8996f$var$utf8ToBytes","$24f87a6f86a8996f$var$base64ToBytes","$24f87a6f86a8996f$var$slowToString","$24f87a6f86a8996f$var$hexSlice","$24f87a6f86a8996f$var$utf8Slice","$24f87a6f86a8996f$var$asciiSlice","$24f87a6f86a8996f$var$latin1Slice","$24f87a6f86a8996f$var$base64Slice","$24f87a6f86a8996f$var$utf16leSlice","$24f87a6f86a8996f$var$swap","$24f87a6f86a8996f$var$bidirectionalIndexOf","$24f87a6f86a8996f$var$arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","$24f87a6f86a8996f$var$hexWrite","strLen","parsed","$24f87a6f86a8996f$var$utf8Write","$24f87a6f86a8996f$var$blitBuffer","$24f87a6f86a8996f$var$asciiWrite","byteArray","$24f87a6f86a8996f$var$asciiToBytes","$24f87a6f86a8996f$var$base64Write","$24f87a6f86a8996f$var$ucs2Write","units","hi","lo","$24f87a6f86a8996f$var$utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$24f87a6f86a8996f$var$MAX_ARGUMENTS_LENGTH","$24f87a6f86a8996f$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$24f87a6f86a8996f$var$typedArraySupport","poolSize","alloc","fill","$24f87a6f86a8996f$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","x","y","list","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","$24f87a6f86a8996f$var$hexSliceLookupTable","$24f87a6f86a8996f$var$checkOffset","ext","$24f87a6f86a8996f$var$checkInt","$24f87a6f86a8996f$var$wrtBigUInt64LE","$24f87a6f86a8996f$var$checkIntBI","BigInt","$24f87a6f86a8996f$var$wrtBigUInt64BE","$24f87a6f86a8996f$var$checkIEEE754","$24f87a6f86a8996f$var$writeFloat","littleEndian","noAssert","$24f87a6f86a8996f$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$24f87a6f86a8996f$var$defineBigIntMethod","$24f87a6f86a8996f$var$validateNumber","first","$24f87a6f86a8996f$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$24f87a6f86a8996f$var$errors","$24f87a6f86a8996f$var$E","getMessage","Base1","Base","NodeError","$24f87a6f86a8996f$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$24f87a6f86a8996f$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","$24f87a6f86a8996f$var$INVALID_BASE64_RE","leadSurrogate","$24f87a6f86a8996f$var$base64clean","dst","alphabet","table","i16","$24f87a6f86a8996f$var$BufferBigIntNotDefined","$0c29ca57d54f85e9$var$isVisitable","$0c29ca57d54f85e9$var$removeBrackets","$0c29ca57d54f85e9$var$renderKey","dots","$0c29ca57d54f85e9$var$predicates","$0c29ca57d54f85e9$export$2e2bcd8739ae039","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","append","convertValue","$0c29ca57d54f85e9$require$Buffer","$0c29ca57d54f85e9$var$isFlatArray","el","exposedHelpers","isVisitable","build","$63e4e0dff2b7ef1a$var$encode","charMap","$63e4e0dff2b7ef1a$var$AxiosURLSearchParams","_pairs","$63e4e0dff2b7ef1a$var$prototype","encoder","_encode","$63e4e0dff2b7ef1a$export$2e2bcd8739ae039","$4858799f155a4706$var$encode","$4858799f155a4706$export$2e2bcd8739ae039","serializedParams","encode","serializeFn","serialize","hashmarkIndex","product","$089e14d5c08cea15$var$InterceptorManager","InterceptorManager","handlers","fulfilled","rejected","synchronous","runWhen","h","$089e14d5c08cea15$export$2e2bcd8739ae039","$c54b4d6d29e2eb6b$export$2e2bcd8739ae039","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$d2ba66411c13cc9b$export$2e2bcd8739ae039","URLSearchParams","$7cdf1698dc68a071$export$2e2bcd8739ae039","$97999e9cdfd9bdaf$var$isStandardBrowserEnv","$97999e9cdfd9bdaf$export$2e2bcd8739ae039","isBrowser","classes","isStandardBrowserEnv","protocols","$3444de215011fd2b$export$2e2bcd8739ae039","helpers","isNode","$bdd273a6ec9f935e$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$bdd273a6ec9f935e$var$arrayToObject","$bdd273a6ec9f935e$var$parsePropPath","$8d19883a18ea96be$var$DEFAULT_CONTENT_TYPE","$8d19883a18ea96be$var$defaults","transitional","adapter","transformRequest","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","rawValue","parser","$8d19883a18ea96be$var$stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","$8d19883a18ea96be$export$2e2bcd8739ae039","$102410410d0dc09d$var$ignoreDuplicateOf","$102410410d0dc09d$export$2e2bcd8739ae039","rawHeaders","line","$c2923f037e2bae4f$var$$internals","$c2923f037e2bae4f$var$normalizeHeader","header","$c2923f037e2bae4f$var$normalizeValue","$c2923f037e2bae4f$var$matchHeaderValue","$c2923f037e2bae4f$var$_iterator","$c2923f037e2bae4f$var$_toStringTag","$c2923f037e2bae4f$var$AxiosHeaders","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","tokens","tokensRE","$c2923f037e2bae4f$var$parseTokens","matcher","deleted","deleteHeader","format","normalized","w","char","$c2923f037e2bae4f$var$formatHeader","targets","_constructor","asStrings","computed","accessors","defineAccessor","accessorName","methodName","arg3","$c2923f037e2bae4f$var$buildAccessors","accessor","$c2923f037e2bae4f$export$2e2bcd8739ae039","$e27ce2658796d30f$export$2e2bcd8739ae039","fns","normalize","$ffcdf0443516cf49$export$2e2bcd8739ae039","__CANCEL__","$a251e9fa67c89486$var$CanceledError","ERR_CANCELED","$a251e9fa67c89486$export$2e2bcd8739ae039","$df046ee58fb378eb$export$2e2bcd8739ae039","ERR_BAD_REQUEST","$e52288d5ced91a0f$export$2e2bcd8739ae039","expires","toGMTString","decodeURIComponent","$b453718e09262365$export$2e2bcd8739ae039","baseURL","relativeURL","$c5c7eeec01fb8b89$export$2e2bcd8739ae039","requestedURL","$6c85e22328488296$export$2e2bcd8739ae039","originURL","msie","urlParsingNode","resolveURL","setAttribute","pathname","requestURL","$a1af1a7f806b22ba$export$2e2bcd8739ae039","samplesCount","firstSampleTS","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","$85bd0ac91b9e9771$var$progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","$85bd0ac91b9e9771$export$2e2bcd8739ae039","onCanceled","requestHeaders","cancelToken","unsubscribe","signal","username","unescape","fullPath","onloadend","responseHeaders","getAllResponseHeaders","statusText","paramsSerializer","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","$b57d5c296e05dd0f$var$knownAdapters","http","$b57d5c296e05dd0f$export$2e2bcd8739ae039","getAdapter","adapters","nameOrAdapter","$03c1ec60679d4a92$var$throwIfCancellationRequested","throwIfRequested","$03c1ec60679d4a92$export$2e2bcd8739ae039","$ed738da9502ca495$var$headersToObject","$ed738da9502ca495$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$f1f155cc89389bcb$export$a4ad2735b021c132","$73047b42f9e782d3$var$validators","$73047b42f9e782d3$var$deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","$73047b42f9e782d3$export$2e2bcd8739ae039","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","$6c6ea2375c06af66$var$validators","$6c6ea2375c06af66$var$Axios","Axios","instanceConfig","defaults","interceptors","configOrUrl","contextHeaders","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","$6c6ea2375c06af66$export$2e2bcd8739ae039","$52ff30ac6ac58fe8$export$2e2bcd8739ae039","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","$eb999ef253053d6e$var$axios","$eb999ef253053d6e$var$createInstance","defaultConfig","CanceledError","isCancel","VERSION","toFormData","AxiosError","Cancel","promises","spread","isAxiosError","formToJSON","$eb999ef253053d6e$export$2e2bcd8739ae039","$d513311671ccd046$var$_API_KEY","$d513311671ccd046$var$_totalPages","$d513311671ccd046$var$FetchFilmsApi","FetchFilmsApi","page","mediaType","timeWindow","resp","_mediaType","_timeWindow","fetchWithAllFilmsData","total_pages","fetchWithCurrentFilm","fetchFilmTrailerById","lang","include_adult","genreType","_genreType","_page","fetchGenresList","_lang","_include_adult","fetchWithSearchFilmData","step","newPage","newQuery","$d513311671ccd046$export$2e2bcd8739ae039","$e38cd764bdb84a38$export$21666b427502ea6d","btnOpenRef","querySelector","btnOpenUserRef","btnCloseRef","teamModal","teamLinks","querySelectorAll","form","searchError","pagRef","currentPage","nextPage","prevPage","firstPage","lastPage","beforeCurPageContainer","afterCurPageContainer","themeBtnRef","lightIconRef","darkIconRef","filmList","btnScrollTopRef","btnScrollDownRef","footerRef","$2acdf6b80d53b5ce$export$32df5403cbb848d0","genre_ids","genres","release_date","genreIsMany","maxGenreIds","genresOfCurrentFilm","genre_id","oneGenre","$2e9d9233884cce36$var$RenderApi","RenderApi","poster_path","filmGengres","filmId","fixedGenres","vote_count","fixedVote","fixedPopularity","overview","selector","_innerHtml","innerHtml","_innerHTMLMarkup","innerHTMLMarkup","_insAdHtmltype","insAdHtmltype","createMarkypFunc","elem","insertAdjacentHTML","$2e9d9233884cce36$export$2e2bcd8739ae039","$57be10743d726c6f$export$2e2bcd8739ae039","$57be10743d726c6f$export$9fdba169d7561de8","addMessage","$52d0919cbc92f7ca$export$6465ae8726243ab1","classList","$52d0919cbc92f7ca$var$renderApi","$52d0919cbc92f7ca$var$apiSearch","$52d0919cbc92f7ca$var$_getSearchedFilm","films","genresObj","markup","getSearchFilmsData","getGenresList","results","createFilmCardsMarkup","renderMarkup","preventDefault","currentTarget","elements","search_user","actualQuery","incrementPage","root","factory","$56c406ef26e3b6a5$exports","newLoadingSettings","typesLoading","loadingSettings","ID","className","zindex","backgroundColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","clickToClose","customSvgUrl","customSvgCode","svgSize","svgColor","messageID","messageFontSize","messageMaxLength","messageColor","commonConsoleError","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","commonGetPlaintext","html","htmlPool","textContent","innerText","loadingGetInternalCSSCodes","loadingCreate","loadingType","messageOrOptions","delay","Notiflix","Loading","init","newLoadingSettingsBackup","newOptions","width","messageHTML","svgIcon","loadingAndBlockSvgIconHourglass","loadingAndBlockSvgIconCircle","loadingAndBlockSvgIconArrows","loadingAndBlockSvgIconDots","loadingAndBlockSvgIconPulse","white","green","loadingAndBlockSvgIconNotiflix","svgSizeAsDigit","winWidth","innerWidth","maxSvgWidthPx","svgIconHTML","ntflxLoadingWrap","zIndex","background","animationDuration","flexWrap","flexDirection","alignItems","justifyContent","getElementById","loadingElm","timeout1","timeout2","userLoadingOptions","getInternalCSSCodes","styleElementId","internalCSS","commonSetInternalCSSCodes","userLoadingExtendOptions","standard","hourglass","circle","arrows","pulse","custom","notiflix","newMessage","messageWrap","oldMessageElm","getElementsByTagName","newMessageHTML","fontSize","loadingChangeMessage","amd","$bb806e2d7bceb951$export$2e2bcd8739ae039","SpinneroOnLoadingApi","label","_label","intervalId","timeDelay","_timeDelay","_delayAfterStop","delayAfterStop","percentageLoading","clearInterval","disabled","$9652aaa8971f5a76$export$aa9450a0fa5dc8b6","$7cec7432e83a878e$export$e9562cbc2a9880a8","totalPages","beforeContainer","afterContainer","$03da7ebcce7f049b$export$add40575555c273c","$03da7ebcce7f049b$var$_renderMarkup","$089c40fcbb903d20$export$adb4bb4243526aef","getAllFilmsData","$089c40fcbb903d20$export$db1d3739d208bc77","actualPage","$bd7d422958c38bfc$export$a5109aefef9dcd91","trailers","findTrailer","video","$9df926e0a287432e$exports","e2","n1","_$t","firstChild","tagName","ownerDocument","contains","e3","n2","_$t1","e4","_$n","HTMLElement","cloneNode","_$e","closable","onShow","e5","u1","parentElement","show","e6","requestAnimationFrame","$4c3d3dadf4b4ba89$var$fetchApi","$4c3d3dadf4b4ba89$var$renderApi","$4c3d3dadf4b4ba89$var$_onShowTrailer","idTrailer","showTrailersRequest","showTrailers","trailer","instance1","onPressEsc","dataset","getFilmTrailerById","createModalWithoutFilmTrailer","createModalFilmTrailer","$7553585f1db4be65$export$c4ade6de051a1e37","vote_average","popularity","roundVote","toFixed","roundPopularity","$f92197e8a4d76a14$var$fetchApi","$f92197e8a4d76a14$var$renderApi","$f92197e8a4d76a14$export$637acd40e5ad0fad","$f92197e8a4d76a14$var$_onShowFilmModal","moreInfo","moreInfoObj","overflow","getCurrentFilm","createModalFilmDetails","onclick","closest","$4c3d3dadf4b4ba89$export$2e2bcd8739ae039","$766fc8d9fe17fc5f$export$5583c5a78fe15cb5","isLight","getAttribute","localStorage","scrollTo","top","behavior","scroll","offsetTop","$aeb69d1b52c45b79$export$c3d1ededea4376a3","scrolled","pageYOffset","coords","documentElement","clientHeight","$7ff14cedc73667c1$var$onToggle","toggle","$7ff14cedc73667c1$var$onBtnToggle","$7ff14cedc73667c1$var$onBackdropClose","enabled","numbId"],"version":3,"file":"user-page.cac1e48f.js.map"}