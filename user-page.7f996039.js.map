{"mappings":"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","sources":["src/js/user-service/user.js","src/js/user-service/logOut.js","src/js/user-service/lib.js"],"sourcesContent":["import '../helpers/changeTheme';\nimport '../helpers/btnScroll';\nimport './logOut';\nimport './lib';\nimport '../modals/modals';\nimport { refs } from '../helpers/refsApiServ';\nimport { onShowFilmModal } from '../modals/filmDetailsModal';\nimport SpinneroOnLoadingApi from '../helpers/spinnerApi';\nrefs.filmListUser.addEventListener('click', onShowFilmModal);\nconst libSpinner = new SpinneroOnLoadingApi({\n  options: { backgroundColor: '#000000', svgColor: '#FF6B08' },\n});\nlibSpinner.enabled({ timeDelay: 10, delayAfterStop: 350 });\n","import { getAuth, signOut } from 'firebase/auth';\nimport { app } from '../firebase/initFirebase';\nimport { notifyInfoMessage } from '../helpers/notifyMessages';\napp;\nconst logOut = document.querySelector('.menu__logout');\nlogOut.addEventListener('click', onlogOut);\n\nfunction onlogOut(e) {\n  e.preventDefault();\n  const auth = getAuth();\n  signOut(auth)\n    .then(() => {\n      // Sign-out successful.\n      notifyInfoMessage('You loged out!');\n      location = 'http://localhost:1234/index.html';\n      //   window.open();\n    })\n    .catch(error => {\n      // An error happened.\n      console.error(error);\n    });\n}\n","import { async } from '@firebase/util';\nimport { onAuthStateChanged, getAuth } from 'firebase/auth';\nimport {\n  getDatabase,\n  ref,\n  onValue,\n  push,\n  set,\n  remove,\n  child,\n  get,\n  update,\n} from 'firebase/database';\nimport { app } from '../firebase/initFirebase';\nimport { refs } from '../helpers/refsApiServ';\nimport { genres } from '../helpers/genres';\n\nimport RenderApi from '../helpers/renderFuncApi';\nimport FetchFilmsApi from '../helpers/fetchFilmsApi';\nimport {\n  notifyFailureMessage,\n  notifyInfoMessage,\n} from '../helpers/notifyMessages';\nconst libFetchApi = new FetchFilmsApi();\nconst libRender = new RenderApi();\nconst db = getDatabase(app);\nconst auth = getAuth(app);\n// default\nonBtnQueueClick();\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\nrefs.btnWatched.addEventListener('click', onBtnWatchedClick);\n\nfunction onBtnQueueClick(e) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n\n      const uid = user.uid;\n      get(child(ref(db), `users/${uid}/userQueue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n\n            const keys = Object.keys(data);\n            console.log(keys);\n            const resp = [];\n            for (const key of keys) {\n              resp.push(key);\n            }\n            console.log(resp);\n            return resp;\n          }\n        })\n        .then(resp => {\n          if (!resp) {\n            notifyInfoMessage('You do not have any movies in Queue!');\n            document.querySelector('.films__list--user').innerHTML = '';\n            return;\n          }\n          const promiseArr = [];\n\n          for (const filmId of resp) {\n            const films = libFetchApi.getCurrentFilm({ id: filmId });\n            promiseArr.push(films);\n          }\n          Promise.all(promiseArr).then(value => {\n            libRender.renderMarkup({\n              selector: '.films__list--user',\n              innerHtml: true,\n              createMarkypFunc: libRender.createFilmUserCardsMarkup(\n                value,\n                genres\n              ),\n            });\n          });\n        })\n        .catch(err => console.error(err));\n      // ...\n    } else {\n      notifyFailureMessage('Please Log In!');\n    }\n  });\n}\nfunction onBtnWatchedClick(e) {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n\n      const uid = user.uid;\n      get(child(ref(db), `users/${uid}/userWatched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            console.log(data);\n            const keys = Object.keys(data);\n            const resp = [];\n            for (const key of keys) {\n              resp.push(key);\n            }\n            return resp;\n          }\n        })\n        .then(resp => {\n          if (!resp) {\n            notifyInfoMessage('You do not have any movies in Watched!');\n            document.querySelector('.films__list--user').innerHTML = '';\n            return;\n          }\n          const promiseArr = [];\n\n          for (const filmId of resp) {\n            const films = libFetchApi.getCurrentFilm({ id: filmId });\n            promiseArr.push(films);\n          }\n          Promise.all(promiseArr).then(value => {\n            libRender.renderMarkup({\n              selector: '.films__list--user',\n              innerHtml: true,\n              createMarkypFunc: libRender.createFilmUserCardsMarkup(\n                value,\n                genres\n              ),\n            });\n          });\n        })\n        .catch(err => console.error(err));\n      // ...\n    } else {\n      notifyFailureMessage('Please Log In!');\n    }\n  });\n}\n"],"names":["parcelRequire","$eyjy7","$jhtdw","app","document","querySelector","addEventListener","e","preventDefault","auth","getAuth","signOut","then","$d1BSM","notifyInfoMessage","location","catch","error","console","$fd6f99b8b709a605$var$libFetchApi","$awOEx","default","$fd6f99b8b709a605$var$libRender","$7RIyI","$fd6f99b8b709a605$var$db","$jAzyG","getDatabase","$fd6f99b8b709a605$var$auth","$fd6f99b8b709a605$var$onBtnQueueClick","onAuthStateChanged","user","uid","get","child","ref","snapshot","exists","data","val","keys","Object","log","resp","key","push","innerHTML","promiseArr","filmId","films","getCurrentFilm","id","Promise","all","value","renderMarkup","selector","innerHtml","createMarkypFunc","createFilmUserCardsMarkup","$359X7","genres","err","notifyFailureMessage","$dkKs9","refs","btnQueue","btnWatched","filmListUser","$dLzFW","onShowFilmModal","$7hQEe","options","backgroundColor","svgColor","enabled","timeDelay","delayAfterStop"],"version":3,"file":"user-page.7f996039.js.map"}